---
source: src/linter.rs
expression: output.finish().to_string()
---
  from abc import ABCMeta
  
  
  class Class:
|     def bad_method(this):
|> First argument of a method should be named `self`
          pass
  
      if False:
  
|         def extra_bad_method(this):
|> First argument of a method should be named `self`
              pass
  
      def good_method(self):
          pass
  
      @classmethod
      def class_method(cls):
          pass
  
      @staticmethod
      def static_method(x):
          return x
  
      def __init__(self):
          ...
  
      def __new__(cls, *args, **kwargs):
          ...
  
      def __init_subclass__(self, default_name, **kwargs):
          ...
  
  
  class MetaClass(ABCMeta):
      def bad_method(self):
          pass
  
      def good_method(cls):
          pass
  
  
  def func(x):
      return x

