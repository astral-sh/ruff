pub const NAMED_EXPR: u8 = 1;
pub const ASSIGN: u8 = 3;
pub const ANN_ASSIGN: u8 = 5;
pub const AUG_ASSIGN: u8 = 5;
pub const EXPR: u8 = 5;
pub const YIELD: u8 = 7;
pub const YIELD_FROM: u8 = 7;
pub const IF: u8 = 9;
pub const FOR: u8 = 9;
pub const WHILE: u8 = 9;
pub const RETURN: u8 = 11;
pub const SLICE: u8 = 13;
pub const SUBSCRIPT: u8 = 13;
pub const COMPREHENSION_TARGET: u8 = 19;
pub const TUPLE: u8 = 19;
pub const FORMATTED_VALUE: u8 = 19;
pub const COMMA: u8 = 21;
pub const ASSERT: u8 = 23;
pub const COMPREHENSION_ELEMENT: u8 = 27;
pub const LAMBDA: u8 = 27;
pub const IF_EXP: u8 = 27;
pub const COMPREHENSION: u8 = 29;
pub const OR: u8 = 31;
pub const AND: u8 = 33;
pub const NOT: u8 = 35;
pub const CMP: u8 = 37;
pub const BIT_OR: u8 = 39;
pub const BIT_XOR: u8 = 41;
pub const BIT_AND: u8 = 43;
pub const LSHIFT: u8 = 45;
pub const RSHIFT: u8 = 45;
pub const ADD: u8 = 47;
pub const SUB: u8 = 47;
pub const MULT: u8 = 49;
pub const DIV: u8 = 49;
pub const MOD: u8 = 49;
pub const FLOORDIV: u8 = 49;
pub const MAT_MULT: u8 = 49;
pub const INVERT: u8 = 53;
pub const UADD: u8 = 53;
pub const USUB: u8 = 53;
pub const POW: u8 = 55;
pub const AWAIT: u8 = 57;
pub const MAX: u8 = 63;
