from typing import _SpecialForm, Any

# Special operations
def static_assert(x: object) -> None: ...

# Types
Unknown = object()

# Special forms
Not: _SpecialForm
Intersection: _SpecialForm
TypeOf: _SpecialForm

# Predicates on types
#
# Ideally, these would be annotated using `TypeForm`, but that has not been
# standardized yet (https://peps.python.org/pep-0747).
def is_equivalent_to(x: Any, y: Any) -> bool: ...
def is_subtype_of(x: Any, y: Any) -> bool: ...
def is_assignable_to(x: Any, y: Any) -> bool: ...
def is_disjoint_from(x: Any, y: Any) -> bool: ...
def is_fully_static(x: Any) -> bool: ...
def is_singleton(x: Any) -> bool: ...
def is_single_valued(x: Any) -> bool: ...
