---
source: crates/red_knot_test/src/lib.rs
expression: snapshot
---
---
mdtest name: for.md - For loops - `__iter__` returns an object with a possibly unbound `__next__` method
mdtest path: crates/red_knot_python_semantic/resources/mdtest/loops/for.md
---

# Python source files

## mdtest_snippet.py

```
 1 | from typing_extensions import reveal_type
 2 | 
 3 | def _(flag: bool):
 4 |     class Iterator:
 5 |         if flag:
 6 |             def __next__(self) -> int:
 7 |                 return 42
 8 | 
 9 |     class Iterable:
10 |         def __iter__(self) -> Iterator:
11 |             return Iterator()
12 | 
13 |     # error: [not-iterable]
14 |     for x in Iterable():
15 |         reveal_type(x)  # revealed: int
```

# Diagnostics

```
error: lint:not-iterable
  --> /src/mdtest_snippet.py:14:14
   |
13 |     # error: [not-iterable]
14 |     for x in Iterable():
   |              ^^^^^^^^^^ Object of type `Iterable` may not be iterable because its `__iter__` method returns an object of type `Iterator`, which may not have a `__next__` method
15 |         reveal_type(x)  # revealed: int
   |

```

```
info: revealed-type
  --> /src/mdtest_snippet.py:15:9
   |
13 |     # error: [not-iterable]
14 |     for x in Iterable():
15 |         reveal_type(x)  # revealed: int
   |         -------------- info: Revealed type is `int`
   |

```
