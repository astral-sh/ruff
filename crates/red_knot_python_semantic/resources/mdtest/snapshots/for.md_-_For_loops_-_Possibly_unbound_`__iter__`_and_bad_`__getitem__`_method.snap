---
source: crates/red_knot_test/src/lib.rs
expression: snapshot
---
---
mdtest name: for.md - For loops - Possibly unbound `__iter__` and bad `__getitem__` method
mdtest path: crates/red_knot_python_semantic/resources/mdtest/loops/for.md
---

# Python source files

## mdtest_snippet.py

```
 1 | from typing_extensions import reveal_type
 2 | 
 3 | def _(flag: bool):
 4 |     class Iterator:
 5 |         def __next__(self) -> int:
 6 |             return 42
 7 | 
 8 |     class Iterable:
 9 |         if flag:
10 |             def __iter__(self) -> Iterator:
11 |                 return Iterator()
12 |         # invalid signature because it only accepts a `str`,
13 |         # but the old-style iteration protocol will pass it an `int`
14 |         def __getitem__(self, key: str) -> bytes:
15 |             return bytes()
16 | 
17 |     # error: [not-iterable]
18 |     for x in Iterable():
19 |         reveal_type(x)  # revealed: int | bytes
```

# Diagnostics

```
error: lint:not-iterable
  --> /src/mdtest_snippet.py:18:14
   |
17 |     # error: [not-iterable]
18 |     for x in Iterable():
   |              ^^^^^^^^^^ Object of type `Iterable` may not be iterable because it may not have an `__iter__` method and its `__getitem__` method has an incorrect signature for the old-style iteration protocol (expected a signature at least as permissive as `def __getitem__(self, key: int): ...`)
19 |         reveal_type(x)  # revealed: int | bytes
   |

```

```
info: revealed-type
  --> /src/mdtest_snippet.py:19:9
   |
17 |     # error: [not-iterable]
18 |     for x in Iterable():
19 |         reveal_type(x)  # revealed: int | bytes
   |         ^^^^^^^^^^^^^^ Revealed type is `int | bytes`
   |

```
