---
source: crates/ruff_python_formatter/tests/fixtures.rs
input_file: crates/ruff_python_formatter/resources/test/fixtures/black/py_38/python38.py
---
## Input

```py
#!/usr/bin/env python3.8


def starred_return():
    my_list = ["value2", "value3"]
    return "value1", *my_list


def starred_yield():
    my_list = ["value2", "value3"]
    yield "value1", *my_list


# all right hand side expressions allowed in regular assignments are now also allowed in
# annotated assignments
a : Tuple[ str, int] = "1", 2
a: Tuple[int , ... ] = b,  *c, d
def t():
    a : str =  yield "a"
```

## Black Differences

```diff
--- Black
+++ Ruff
@@ -8,7 +8,7 @@
 
 def starred_yield():
     my_list = ["value2", "value3"]
-    yield "value1", *my_list
+    NOT_YET_IMPLEMENTED_ExprYield
 
 
 # all right hand side expressions allowed in regular assignments are now also allowed in
@@ -18,4 +18,4 @@
 
 
 def t():
-    a: str = yield "a"
+    a: str = NOT_YET_IMPLEMENTED_ExprYield
```

## Ruff Output

```py
#!/usr/bin/env python3.8


def starred_return():
    my_list = ["value2", "value3"]
    return "value1", *my_list


def starred_yield():
    my_list = ["value2", "value3"]
    NOT_YET_IMPLEMENTED_ExprYield


# all right hand side expressions allowed in regular assignments are now also allowed in
# annotated assignments
a: Tuple[str, int] = "1", 2
a: Tuple[int, ...] = b, *c, d


def t():
    a: str = NOT_YET_IMPLEMENTED_ExprYield
```

## Black Output

```py
#!/usr/bin/env python3.8


def starred_return():
    my_list = ["value2", "value3"]
    return "value1", *my_list


def starred_yield():
    my_list = ["value2", "value3"]
    yield "value1", *my_list


# all right hand side expressions allowed in regular assignments are now also allowed in
# annotated assignments
a: Tuple[str, int] = "1", 2
a: Tuple[int, ...] = b, *c, d


def t():
    a: str = yield "a"
```


