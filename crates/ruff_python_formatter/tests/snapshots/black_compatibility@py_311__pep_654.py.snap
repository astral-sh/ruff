---
source: crates/ruff_python_formatter/tests/fixtures.rs
input_file: crates/ruff_python_formatter/resources/test/fixtures/black/py_311/pep_654.py
---
## Input

```py
try:
    raise OSError("blah")
except* ExceptionGroup as e:
    pass


try:
    async with trio.open_nursery() as nursery:
        # Make two concurrent calls to child()
        nursery.start_soon(child)
        nursery.start_soon(child)
except* ValueError:
    pass

try:
    try:
        raise ValueError(42)
    except:
        try:
            raise TypeError(int)
        except* Exception:
            pass
        1 / 0
except Exception as e:
    exc = e

try:
    try:
        raise FalsyEG("eg", [TypeError(1), ValueError(2)])
    except* TypeError as e:
        tes = e
        raise
    except* ValueError as e:
        ves = e
        pass
except Exception as e:
    exc = e

try:
    try:
        raise orig
    except* (TypeError, ValueError) as e:
        raise SyntaxError(3) from e
except BaseException as e:
    exc = e

try:
    try:
        raise orig
    except* OSError as e:
        raise TypeError(3) from e
except ExceptionGroup as e:
    exc = e
```

## Black Differences

```diff
--- Black
+++ Ruff
@@ -1,5 +1,5 @@
 try:
-    raise OSError("blah")
+    NOT_YET_IMPLEMENTED_StmtRaise
 except* ExceptionGroup as e:
     pass
 
@@ -14,10 +14,10 @@
 
 try:
     try:
-        raise ValueError(42)
+        NOT_YET_IMPLEMENTED_StmtRaise
     except:
         try:
-            raise TypeError(int)
+            NOT_YET_IMPLEMENTED_StmtRaise
         except* Exception:
             pass
         1 / 0
@@ -26,10 +26,10 @@
 
 try:
     try:
-        raise FalsyEG("eg", [TypeError(1), ValueError(2)])
+        NOT_YET_IMPLEMENTED_StmtRaise
     except* TypeError as e:
         tes = e
-        raise
+        NOT_YET_IMPLEMENTED_StmtRaise
     except* ValueError as e:
         ves = e
         pass
@@ -38,16 +38,16 @@
 
 try:
     try:
-        raise orig
+        NOT_YET_IMPLEMENTED_StmtRaise
     except* (TypeError, ValueError) as e:
-        raise SyntaxError(3) from e
+        NOT_YET_IMPLEMENTED_StmtRaise
 except BaseException as e:
     exc = e
 
 try:
     try:
-        raise orig
+        NOT_YET_IMPLEMENTED_StmtRaise
     except* OSError as e:
-        raise TypeError(3) from e
+        NOT_YET_IMPLEMENTED_StmtRaise
 except ExceptionGroup as e:
     exc = e
```

## Ruff Output

```py
try:
    NOT_YET_IMPLEMENTED_StmtRaise
except* ExceptionGroup as e:
    pass


try:
    async with trio.open_nursery() as nursery:
        # Make two concurrent calls to child()
        nursery.start_soon(child)
        nursery.start_soon(child)
except* ValueError:
    pass

try:
    try:
        NOT_YET_IMPLEMENTED_StmtRaise
    except:
        try:
            NOT_YET_IMPLEMENTED_StmtRaise
        except* Exception:
            pass
        1 / 0
except Exception as e:
    exc = e

try:
    try:
        NOT_YET_IMPLEMENTED_StmtRaise
    except* TypeError as e:
        tes = e
        NOT_YET_IMPLEMENTED_StmtRaise
    except* ValueError as e:
        ves = e
        pass
except Exception as e:
    exc = e

try:
    try:
        NOT_YET_IMPLEMENTED_StmtRaise
    except* (TypeError, ValueError) as e:
        NOT_YET_IMPLEMENTED_StmtRaise
except BaseException as e:
    exc = e

try:
    try:
        NOT_YET_IMPLEMENTED_StmtRaise
    except* OSError as e:
        NOT_YET_IMPLEMENTED_StmtRaise
except ExceptionGroup as e:
    exc = e
```

## Black Output

```py
try:
    raise OSError("blah")
except* ExceptionGroup as e:
    pass


try:
    async with trio.open_nursery() as nursery:
        # Make two concurrent calls to child()
        nursery.start_soon(child)
        nursery.start_soon(child)
except* ValueError:
    pass

try:
    try:
        raise ValueError(42)
    except:
        try:
            raise TypeError(int)
        except* Exception:
            pass
        1 / 0
except Exception as e:
    exc = e

try:
    try:
        raise FalsyEG("eg", [TypeError(1), ValueError(2)])
    except* TypeError as e:
        tes = e
        raise
    except* ValueError as e:
        ves = e
        pass
except Exception as e:
    exc = e

try:
    try:
        raise orig
    except* (TypeError, ValueError) as e:
        raise SyntaxError(3) from e
except BaseException as e:
    exc = e

try:
    try:
        raise orig
    except* OSError as e:
        raise TypeError(3) from e
except ExceptionGroup as e:
    exc = e
```


