---
source: crates/ruff_python_formatter/tests/fixtures.rs
input_file: crates/ruff_python_formatter/resources/test/fixtures/black/cases/line_ranges_two_passes.py
---
## Input

```python
# NOTE: If you need to modify this file, pay special attention to the --line-ranges=
# flag above as it's formatting specifically these lines.

# This is a specific case for Black's two-pass formatting behavior in `format_str`.
# The second pass must respect the line ranges before the first pass.


def restrict_to_this_line(arg1,
  arg2,
  arg3):
    print  ( "This should not be formatted." )
    print  ( "Note that in the second pass, the original line range 9-11 will cover these print lines.")
```

## Black Differences

```diff
--- Black
+++ Ruff
@@ -1,4 +1,3 @@
-# flags: --line-ranges=9-11
 # NOTE: If you need to modify this file, pay special attention to the --line-ranges=
 # flag above as it's formatting specifically these lines.
 
@@ -7,5 +6,7 @@
 
 
 def restrict_to_this_line(arg1, arg2, arg3):
-    print  ( "This should not be formatted." )
-    print  ( "Note that in the second pass, the original line range 9-11 will cover these print lines.")
+    print("This should not be formatted.")
+    print(
+        "Note that in the second pass, the original line range 9-11 will cover these print lines."
+    )
```

## Ruff Output

```python
# NOTE: If you need to modify this file, pay special attention to the --line-ranges=
# flag above as it's formatting specifically these lines.

# This is a specific case for Black's two-pass formatting behavior in `format_str`.
# The second pass must respect the line ranges before the first pass.


def restrict_to_this_line(arg1, arg2, arg3):
    print("This should not be formatted.")
    print(
        "Note that in the second pass, the original line range 9-11 will cover these print lines."
    )
```

## Black Output

```python
# flags: --line-ranges=9-11
# NOTE: If you need to modify this file, pay special attention to the --line-ranges=
# flag above as it's formatting specifically these lines.

# This is a specific case for Black's two-pass formatting behavior in `format_str`.
# The second pass must respect the line ranges before the first pass.


def restrict_to_this_line(arg1, arg2, arg3):
    print  ( "This should not be formatted." )
    print  ( "Note that in the second pass, the original line range 9-11 will cover these print lines.")
```


