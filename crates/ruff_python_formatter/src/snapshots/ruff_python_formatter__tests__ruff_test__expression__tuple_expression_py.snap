---
source: crates/ruff_python_formatter/src/lib.rs
expression: snapshot
---
## Input
```py
# Non-wrapping parentheses checks
a1 = 1, 2
a2 = (1, 2)
a3 = (1, 2), 3
a4 = ((1, 2), 3)

# Wrapping parentheses checks
b1 = (("Michael", "Ende"), ("Der", "satanarchäolügenialkohöllische", "Wunschpunsch"), ("Beelzebub", "Irrwitzer"), ("Tyrannja", "Vamperl"),)
b2 = ("akjdshflkjahdslkfjlasfdahjlfds", "ljklsadhflakfdajflahfdlajfhafldkjalfj", "ljklsadhflakfdajflahfdlajfhafldkjalf2",)
b3 = ("The", "Night", "of", "Wishes:", "Or", "the", "Satanarchaeolidealcohellish", "Notion", "Potion",)

# Nested wrapping parentheses check
c1 = (("cicero"), ("Qui", "autem,", "si", "maxime", "hoc", "placeat,", "moderatius", "tamen", "id", "uolunt", "fieri,", "difficilem", "quandam", "temperantiam", "postulant", "in", "eo,", "quod", "semel", "admissum", "coerceri", "reprimique", "non", "potest,", "ut", "propemodum", "iustioribus", "utamur", "illis,", "qui", "omnino", "auocent", "a", "philosophia,", "quam", "his,", "qui", "rebus", "infinitis", "modum", "constituant", "in", "reque", "eo", "meliore,", "quo", "maior", "sit,", "mediocritatem", "desiderent."), ("de", "finibus", "bonorum", "et", "malorum"))

# Deeply nested parentheses
d1 = ((("3D",),),)
d2 = (((((((((((((((((((((((((((("¯\_(ツ)_/¯",),),),),),),),),),),),),),),),),),),),),),),),),),),),)

# Join and magic trailing comma
e1 = (
    1,
    2
)
e2 = (
    1,
    2,
)
e3 = (
    1,
)
e4 = (
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor",
    "incididunt"
)
```



## Output
```py
# Non-wrapping parentheses checks
a1 = 1, 2
a2 = (1, 2)
a3 = (1, 2), 3
a4 = ((1, 2), 3)

# Wrapping parentheses checks
b1 = (
    ("NOT_YET_IMPLEMENTED_STRING", "NOT_YET_IMPLEMENTED_STRING"),
    (
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
    ),
    ("NOT_YET_IMPLEMENTED_STRING", "NOT_YET_IMPLEMENTED_STRING"),
    ("NOT_YET_IMPLEMENTED_STRING", "NOT_YET_IMPLEMENTED_STRING"),
)
b2 = (
    "NOT_YET_IMPLEMENTED_STRING",
    "NOT_YET_IMPLEMENTED_STRING",
    "NOT_YET_IMPLEMENTED_STRING",
)
b3 = (
    "NOT_YET_IMPLEMENTED_STRING",
    "NOT_YET_IMPLEMENTED_STRING",
    "NOT_YET_IMPLEMENTED_STRING",
    "NOT_YET_IMPLEMENTED_STRING",
    "NOT_YET_IMPLEMENTED_STRING",
    "NOT_YET_IMPLEMENTED_STRING",
    "NOT_YET_IMPLEMENTED_STRING",
    "NOT_YET_IMPLEMENTED_STRING",
    "NOT_YET_IMPLEMENTED_STRING",
)

# Nested wrapping parentheses check
c1 = (
    ("NOT_YET_IMPLEMENTED_STRING"),
    (
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
    ),
    (
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
        "NOT_YET_IMPLEMENTED_STRING",
    ),
)

# Deeply nested parentheses
d1 = ((("NOT_YET_IMPLEMENTED_STRING",),),)
d2 = (
    (
        (
            (
                (
                    (
                        (
                            (
                                (
                                    (
                                        (
                                            (
                                                (
                                                    (
                                                        (
                                                            (
                                                                (
                                                                    (
                                                                        (
                                                                            (
                                                                                (
                                                                                    (
                                                                                        (
                                                                                            (
                                                                                                (
                                                                                                    (
                                                                                                        (
                                                                                                            (
                                                                                                                "NOT_YET_IMPLEMENTED_STRING",
                                                                                                            ),
                                                                                                        ),
                                                                                                    ),
                                                                                                ),
                                                                                            ),
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            ),
                                                                        ),
                                                                    ),
                                                                ),
                                                            ),
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
            ),
        ),
    ),
)

# Join and magic trailing comma
e1 = (1, 2)
e2 = (
    1,
    2,
)
e3 = (1,)
e4 = ("NOT_YET_IMPLEMENTED_STRING", "NOT_YET_IMPLEMENTED_STRING")
```


