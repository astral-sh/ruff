---
source: crates/ruff_python_formatter/src/lib.rs
expression: snapshot
input_file: crates/ruff_python_formatter/resources/test/fixtures/black/simple_cases/remove_await_parens.py
---
## Input

```py
import asyncio

# Control example
async def main():
    await asyncio.sleep(1)

# Remove brackets for short coroutine/task
async def main():
    await (asyncio.sleep(1))

async def main():
    await (
        asyncio.sleep(1)
    )

async def main():
    await (asyncio.sleep(1)
    )

# Check comments
async def main():
    await (  # Hello
        asyncio.sleep(1)
    )

async def main():
    await (
        asyncio.sleep(1)  # Hello
    )

async def main():
    await (
        asyncio.sleep(1)
    )  # Hello

# Long lines
async def main():
    await asyncio.gather(asyncio.sleep(1), asyncio.sleep(1), asyncio.sleep(1), asyncio.sleep(1), asyncio.sleep(1), asyncio.sleep(1), asyncio.sleep(1))

# Same as above but with magic trailing comma in function
async def main():
    await asyncio.gather(asyncio.sleep(1), asyncio.sleep(1), asyncio.sleep(1), asyncio.sleep(1), asyncio.sleep(1), asyncio.sleep(1), asyncio.sleep(1),)

# Cr@zY Br@ck3Tz
async def main():
    await (
        (((((((((((((
        (((        (((
        (((         (((
        (((         (((
        (((        (((
        ((black(1)))
        )))        )))
        )))         )))
        )))         )))
        )))        )))
        )))))))))))))
    )

# Keep brackets around non power operations and nested awaits
async def main():
    await (set_of_tasks | other_set)

async def main():
    await (await asyncio.sleep(1))

# It's awaits all the way down...
async def main():
    await (await x)

async def main():
    await (yield x)

async def main():
    await (await (asyncio.sleep(1)))

async def main():
    await (await (await (await (await (asyncio.sleep(1))))))

async def main():
    await (yield)
```

## Black Differences

```diff
--- Black
+++ Ruff
@@ -1,93 +1,60 @@
-import asyncio
+NOT_YET_IMPLEMENTED_StmtImport
 
 
 # Control example
-async def main():
-    await asyncio.sleep(1)
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
 # Remove brackets for short coroutine/task
-async def main():
-    await asyncio.sleep(1)
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
-async def main():
-    await asyncio.sleep(1)
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
-async def main():
-    await asyncio.sleep(1)
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
 # Check comments
-async def main():
-    await asyncio.sleep(1)  # Hello
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
-async def main():
-    await asyncio.sleep(1)  # Hello
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
-async def main():
-    await asyncio.sleep(1)  # Hello
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
 # Long lines
-async def main():
-    await asyncio.gather(
-        asyncio.sleep(1),
-        asyncio.sleep(1),
-        asyncio.sleep(1),
-        asyncio.sleep(1),
-        asyncio.sleep(1),
-        asyncio.sleep(1),
-        asyncio.sleep(1),
-    )
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
 # Same as above but with magic trailing comma in function
-async def main():
-    await asyncio.gather(
-        asyncio.sleep(1),
-        asyncio.sleep(1),
-        asyncio.sleep(1),
-        asyncio.sleep(1),
-        asyncio.sleep(1),
-        asyncio.sleep(1),
-        asyncio.sleep(1),
-    )
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
 # Cr@zY Br@ck3Tz
-async def main():
-    await black(1)
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
 # Keep brackets around non power operations and nested awaits
-async def main():
-    await (set_of_tasks | other_set)
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
-async def main():
-    await (await asyncio.sleep(1))
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
 # It's awaits all the way down...
-async def main():
-    await (await x)
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
-async def main():
-    await (yield x)
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
-async def main():
-    await (await asyncio.sleep(1))
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
-async def main():
-    await (await (await (await (await asyncio.sleep(1)))))
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
 
 
-async def main():
-    await (yield)
+NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
```

## Ruff Output

```py
NOT_YET_IMPLEMENTED_StmtImport


# Control example
NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


# Remove brackets for short coroutine/task
NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


# Check comments
NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


# Long lines
NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


# Same as above but with magic trailing comma in function
NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


# Cr@zY Br@ck3Tz
NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


# Keep brackets around non power operations and nested awaits
NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


# It's awaits all the way down...
NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef


NOT_YET_IMPLEMENTED_StmtAsyncFunctionDef
```

## Black Output

```py
import asyncio


# Control example
async def main():
    await asyncio.sleep(1)


# Remove brackets for short coroutine/task
async def main():
    await asyncio.sleep(1)


async def main():
    await asyncio.sleep(1)


async def main():
    await asyncio.sleep(1)


# Check comments
async def main():
    await asyncio.sleep(1)  # Hello


async def main():
    await asyncio.sleep(1)  # Hello


async def main():
    await asyncio.sleep(1)  # Hello


# Long lines
async def main():
    await asyncio.gather(
        asyncio.sleep(1),
        asyncio.sleep(1),
        asyncio.sleep(1),
        asyncio.sleep(1),
        asyncio.sleep(1),
        asyncio.sleep(1),
        asyncio.sleep(1),
    )


# Same as above but with magic trailing comma in function
async def main():
    await asyncio.gather(
        asyncio.sleep(1),
        asyncio.sleep(1),
        asyncio.sleep(1),
        asyncio.sleep(1),
        asyncio.sleep(1),
        asyncio.sleep(1),
        asyncio.sleep(1),
    )


# Cr@zY Br@ck3Tz
async def main():
    await black(1)


# Keep brackets around non power operations and nested awaits
async def main():
    await (set_of_tasks | other_set)


async def main():
    await (await asyncio.sleep(1))


# It's awaits all the way down...
async def main():
    await (await x)


async def main():
    await (yield x)


async def main():
    await (await asyncio.sleep(1))


async def main():
    await (await (await (await (await asyncio.sleep(1)))))


async def main():
    await (yield)
```


