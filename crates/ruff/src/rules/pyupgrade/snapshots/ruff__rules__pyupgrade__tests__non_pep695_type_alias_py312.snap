---
source: crates/ruff/src/rules/pyupgrade/mod.rs
---
UP100.py:5:1: UP100 [*] Type alias `x` uses `TypeAlias` annotation instead of the `type` keyword
  |
4 | # UP100
5 | x: typing.TypeAlias = int
  | ^^^^^^^^^^^^^^^^^^^^^^^^^ UP100
6 | x: TypeAlias = int
  |
  = help: Replace with the `type` keyword

ℹ Fix
2 2 | from typing import TypeAlias
3 3 | 
4 4 | # UP100
5   |-x: typing.TypeAlias = int
  5 |+type x = int
6 6 | x: TypeAlias = int
7 7 | 
8 8 | 

UP100.py:6:1: UP100 [*] Type alias `x` uses `TypeAlias` annotation instead of the `type` keyword
  |
4 | # UP100
5 | x: typing.TypeAlias = int
6 | x: TypeAlias = int
  | ^^^^^^^^^^^^^^^^^^ UP100
  |
  = help: Replace with the `type` keyword

ℹ Fix
3 3 | 
4 4 | # UP100
5 5 | x: typing.TypeAlias = int
6   |-x: TypeAlias = int
  6 |+type x = int
7 7 | 
8 8 | 
9 9 | # UP100 with generics (todo)

UP100.py:11:1: UP100 [*] Type alias `x` uses `TypeAlias` annotation instead of the `type` keyword
   |
 9 | # UP100 with generics (todo)
10 | T = typing.TypeVar["T"]
11 | x: typing.TypeAlias = list[T]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP100
   |
   = help: Replace with the `type` keyword

ℹ Fix
8  8  | 
9  9  | # UP100 with generics (todo)
10 10 | T = typing.TypeVar["T"]
11    |-x: typing.TypeAlias = list[T]
   11 |+type x = list[T]
12 12 | 
13 13 | 
14 14 | # OK


