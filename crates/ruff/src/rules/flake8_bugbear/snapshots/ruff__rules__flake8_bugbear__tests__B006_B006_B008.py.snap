---
source: crates/ruff/src/rules/flake8_bugbear/mod.rs
---
B006_B008.py:63:25: B006 Do not use mutable data structures for argument defaults
   |
63 | def this_is_wrong(value=[1, 2, 3]):
   |                         ^^^^^^^^^ B006
64 |     ...
   |

B006_B008.py:67:30: B006 Do not use mutable data structures for argument defaults
   |
67 | def this_is_also_wrong(value={}):
   |                              ^^ B006
68 |     ...
   |

B006_B008.py:71:20: B006 Do not use mutable data structures for argument defaults
   |
71 | def and_this(value=set()):
   |                    ^^^^^ B006
72 |     ...
   |

B006_B008.py:75:20: B006 Do not use mutable data structures for argument defaults
   |
75 | def this_too(value=collections.OrderedDict()):
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^ B006
76 |     ...
   |

B006_B008.py:79:32: B006 Do not use mutable data structures for argument defaults
   |
79 | async def async_this_too(value=collections.defaultdict()):
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^ B006
80 |     ...
   |

B006_B008.py:83:26: B006 Do not use mutable data structures for argument defaults
   |
83 | def dont_forget_me(value=collections.deque()):
   |                          ^^^^^^^^^^^^^^^^^^^ B006
84 |     ...
   |

B006_B008.py:88:46: B006 Do not use mutable data structures for argument defaults
   |
87 | # N.B. we're also flagging the function call in the comprehension
88 | def list_comprehension_also_not_okay(default=[i**2 for i in range(3)]):
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^ B006
89 |     pass
   |

B006_B008.py:92:46: B006 Do not use mutable data structures for argument defaults
   |
92 | def dict_comprehension_also_not_okay(default={i: i**2 for i in range(3)}):
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ B006
93 |     pass
   |

B006_B008.py:96:45: B006 Do not use mutable data structures for argument defaults
   |
96 | def set_comprehension_also_not_okay(default={i**2 for i in range(3)}):
   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ B006
97 |     pass
   |

B006_B008.py:100:33: B006 Do not use mutable data structures for argument defaults
    |
100 | def kwonlyargs_mutable(*, value=[]):
    |                                 ^^ B006
101 |     ...
    |

B006_B008.py:218:20: B006 Do not use mutable data structures for argument defaults
    |
216 | # B006 and B008
217 | # We should handle arbitrary nesting of these B008.
218 | def nested_combo(a=[float(3), dt.datetime.now()]):
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B006
219 |     pass
    |

B006_B008.py:251:27: B006 Do not use mutable data structures for argument defaults
    |
250 | def mutable_annotations(
251 |     a: list[int] | None = [],
    |                           ^^ B006
252 |     b: Optional[Dict[int, int]] = {},
253 |     c: Annotated[Union[Set[str], abc.Sized], "annotation"] = set(),
    |

B006_B008.py:252:35: B006 Do not use mutable data structures for argument defaults
    |
250 | def mutable_annotations(
251 |     a: list[int] | None = [],
252 |     b: Optional[Dict[int, int]] = {},
    |                                   ^^ B006
253 |     c: Annotated[Union[Set[str], abc.Sized], "annotation"] = set(),
254 | ):
    |

B006_B008.py:253:62: B006 Do not use mutable data structures for argument defaults
    |
251 |     a: list[int] | None = [],
252 |     b: Optional[Dict[int, int]] = {},
253 |     c: Annotated[Union[Set[str], abc.Sized], "annotation"] = set(),
    |                                                              ^^^^^ B006
254 | ):
255 |     pass
    |


