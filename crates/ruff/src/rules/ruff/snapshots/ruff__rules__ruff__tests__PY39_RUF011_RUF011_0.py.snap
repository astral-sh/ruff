---
source: crates/ruff/src/rules/ruff/mod.rs
---
RUF011_0.py:13:12: RUF011 [*] PEP 484 prohibits implicit `Optional`
   |
13 | def f(arg: int = None):  # RUF011
   |            ^^^ RUF011
14 |     pass
   |
   = help: Convert to `Optional[T]`

ℹ Suggested fix
10 10 |     pass
11 11 | 
12 12 | 
13    |-def f(arg: int = None):  # RUF011
   13 |+def f(arg: Optional[int] = None):  # RUF011
14 14 |     pass
15 15 | 
16 16 | 

RUF011_0.py:17:12: RUF011 [*] PEP 484 prohibits implicit `Optional`
   |
17 | def f(arg: str = None):  # RUF011
   |            ^^^ RUF011
18 |     pass
   |
   = help: Convert to `Optional[T]`

ℹ Suggested fix
14 14 |     pass
15 15 | 
16 16 | 
17    |-def f(arg: str = None):  # RUF011
   17 |+def f(arg: Optional[str] = None):  # RUF011
18 18 |     pass
19 19 | 
20 20 | 

RUF011_0.py:21:12: RUF011 [*] PEP 484 prohibits implicit `Optional`
   |
21 | def f(arg: typing.List[str] = None):  # RUF011
   |            ^^^^^^^^^^^^^^^^ RUF011
22 |     pass
   |
   = help: Convert to `Optional[T]`

ℹ Suggested fix
18 18 |     pass
19 19 | 
20 20 | 
21    |-def f(arg: typing.List[str] = None):  # RUF011
   21 |+def f(arg: Optional[typing.List[str]] = None):  # RUF011
22 22 |     pass
23 23 | 
24 24 | 

RUF011_0.py:25:12: RUF011 [*] PEP 484 prohibits implicit `Optional`
   |
25 | def f(arg: Tuple[str] = None):  # RUF011
   |            ^^^^^^^^^^ RUF011
26 |     pass
   |
   = help: Convert to `Optional[T]`

ℹ Suggested fix
22 22 |     pass
23 23 | 
24 24 | 
25    |-def f(arg: Tuple[str] = None):  # RUF011
   25 |+def f(arg: Optional[Tuple[str]] = None):  # RUF011
26 26 |     pass
27 27 | 
28 28 | 

RUF011_0.py:55:12: RUF011 [*] PEP 484 prohibits implicit `Optional`
   |
55 | def f(arg: Union = None):  # RUF011
   |            ^^^^^ RUF011
56 |     pass
   |
   = help: Convert to `Optional[T]`

ℹ Suggested fix
52 52 |     pass
53 53 | 
54 54 | 
55    |-def f(arg: Union = None):  # RUF011
   55 |+def f(arg: Optional[Union] = None):  # RUF011
56 56 |     pass
57 57 | 
58 58 | 

RUF011_0.py:59:12: RUF011 [*] PEP 484 prohibits implicit `Optional`
   |
59 | def f(arg: Union[int, str] = None):  # RUF011
   |            ^^^^^^^^^^^^^^^ RUF011
60 |     pass
   |
   = help: Convert to `Optional[T]`

ℹ Suggested fix
56 56 |     pass
57 57 | 
58 58 | 
59    |-def f(arg: Union[int, str] = None):  # RUF011
   59 |+def f(arg: Optional[Union[int, str]] = None):  # RUF011
60 60 |     pass
61 61 | 
62 62 | 

RUF011_0.py:63:12: RUF011 [*] PEP 484 prohibits implicit `Optional`
   |
63 | def f(arg: typing.Union[int, str] = None):  # RUF011
   |            ^^^^^^^^^^^^^^^^^^^^^^ RUF011
64 |     pass
   |
   = help: Convert to `Optional[T]`

ℹ Suggested fix
60 60 |     pass
61 61 | 
62 62 | 
63    |-def f(arg: typing.Union[int, str] = None):  # RUF011
   63 |+def f(arg: Optional[typing.Union[int, str]] = None):  # RUF011
64 64 |     pass
65 65 | 
66 66 | 

RUF011_0.py:82:12: RUF011 [*] PEP 484 prohibits implicit `Optional`
   |
82 | def f(arg: int | float = None):  # RUF011
   |            ^^^^^^^^^^^ RUF011
83 |     pass
   |
   = help: Convert to `Optional[T]`

ℹ Suggested fix
79 79 |     pass
80 80 | 
81 81 | 
82    |-def f(arg: int | float = None):  # RUF011
   82 |+def f(arg: Optional[int | float] = None):  # RUF011
83 83 |     pass
84 84 | 
85 85 | 

RUF011_0.py:86:12: RUF011 [*] PEP 484 prohibits implicit `Optional`
   |
86 | def f(arg: int | float | str | bytes = None):  # RUF011
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^ RUF011
87 |     pass
   |
   = help: Convert to `Optional[T]`

ℹ Suggested fix
83 83 |     pass
84 84 | 
85 85 | 
86    |-def f(arg: int | float | str | bytes = None):  # RUF011
   86 |+def f(arg: Optional[int | float | str | bytes] = None):  # RUF011
87 87 |     pass
88 88 | 
89 89 | 

RUF011_0.py:101:12: RUF011 [*] PEP 484 prohibits implicit `Optional`
    |
101 | def f(arg: Literal[1, "foo"] = None):  # RUF011
    |            ^^^^^^^^^^^^^^^^^ RUF011
102 |     pass
    |
    = help: Convert to `Optional[T]`

ℹ Suggested fix
98  98  |     pass
99  99  | 
100 100 | 
101     |-def f(arg: Literal[1, "foo"] = None):  # RUF011
    101 |+def f(arg: Optional[Literal[1, "foo"]] = None):  # RUF011
102 102 |     pass
103 103 | 
104 104 | 

RUF011_0.py:105:12: RUF011 [*] PEP 484 prohibits implicit `Optional`
    |
105 | def f(arg: typing.Literal[1, "foo", True] = None):  # RUF011
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF011
106 |     pass
    |
    = help: Convert to `Optional[T]`

ℹ Suggested fix
102 102 |     pass
103 103 | 
104 104 | 
105     |-def f(arg: typing.Literal[1, "foo", True] = None):  # RUF011
    105 |+def f(arg: Optional[typing.Literal[1, "foo", True]] = None):  # RUF011
106 106 |     pass
107 107 | 
108 108 | 

RUF011_0.py:120:22: RUF011 [*] PEP 484 prohibits implicit `Optional`
    |
120 | def f(arg: Annotated[int, ...] = None):  # RUF011
    |                      ^^^ RUF011
121 |     pass
    |
    = help: Convert to `Optional[T]`

ℹ Suggested fix
117 117 |     pass
118 118 | 
119 119 | 
120     |-def f(arg: Annotated[int, ...] = None):  # RUF011
    120 |+def f(arg: Annotated[Optional[int], ...] = None):  # RUF011
121 121 |     pass
122 122 | 
123 123 | 

RUF011_0.py:124:32: RUF011 [*] PEP 484 prohibits implicit `Optional`
    |
124 | def f(arg: Annotated[Annotated[int | str, ...], ...] = None):  # RUF011
    |                                ^^^^^^^^^ RUF011
125 |     pass
    |
    = help: Convert to `Optional[T]`

ℹ Suggested fix
121 121 |     pass
122 122 | 
123 123 | 
124     |-def f(arg: Annotated[Annotated[int | str, ...], ...] = None):  # RUF011
    124 |+def f(arg: Annotated[Annotated[Optional[int | str], ...], ...] = None):  # RUF011
125 125 |     pass
126 126 | 
127 127 | 

RUF011_0.py:140:11: RUF011 [*] PEP 484 prohibits implicit `Optional`
    |
140 | def f(
141 |     arg1: int = None,  # RUF011
    |           ^^^ RUF011
142 |     arg2: Union[int, float] = None,  # RUF011
143 |     arg3: Literal[1, 2, 3] = None,  # RUF011
    |
    = help: Convert to `Optional[T]`

ℹ Suggested fix
137 137 | 
138 138 | 
139 139 | def f(
140     |-    arg1: int = None,  # RUF011
    140 |+    arg1: Optional[int] = None,  # RUF011
141 141 |     arg2: Union[int, float] = None,  # RUF011
142 142 |     arg3: Literal[1, 2, 3] = None,  # RUF011
143 143 | ):

RUF011_0.py:141:11: RUF011 [*] PEP 484 prohibits implicit `Optional`
    |
141 | def f(
142 |     arg1: int = None,  # RUF011
143 |     arg2: Union[int, float] = None,  # RUF011
    |           ^^^^^^^^^^^^^^^^^ RUF011
144 |     arg3: Literal[1, 2, 3] = None,  # RUF011
145 | ):
    |
    = help: Convert to `Optional[T]`

ℹ Suggested fix
138 138 | 
139 139 | def f(
140 140 |     arg1: int = None,  # RUF011
141     |-    arg2: Union[int, float] = None,  # RUF011
    141 |+    arg2: Optional[Union[int, float]] = None,  # RUF011
142 142 |     arg3: Literal[1, 2, 3] = None,  # RUF011
143 143 | ):
144 144 |     pass

RUF011_0.py:142:11: RUF011 [*] PEP 484 prohibits implicit `Optional`
    |
142 |     arg1: int = None,  # RUF011
143 |     arg2: Union[int, float] = None,  # RUF011
144 |     arg3: Literal[1, 2, 3] = None,  # RUF011
    |           ^^^^^^^^^^^^^^^^ RUF011
145 | ):
146 |     pass
    |
    = help: Convert to `Optional[T]`

ℹ Suggested fix
139 139 | def f(
140 140 |     arg1: int = None,  # RUF011
141 141 |     arg2: Union[int, float] = None,  # RUF011
142     |-    arg3: Literal[1, 2, 3] = None,  # RUF011
    142 |+    arg3: Optional[Literal[1, 2, 3]] = None,  # RUF011
143 143 | ):
144 144 |     pass
145 145 | 

RUF011_0.py:170:12: RUF011 [*] PEP 484 prohibits implicit `Optional`
    |
170 | def f(arg: Union[Annotated[int, ...], Union[str, bytes]] = None):  # RUF011
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF011
171 |     pass
    |
    = help: Convert to `Optional[T]`

ℹ Suggested fix
167 167 |     pass
168 168 | 
169 169 | 
170     |-def f(arg: Union[Annotated[int, ...], Union[str, bytes]] = None):  # RUF011
    170 |+def f(arg: Optional[Union[Annotated[int, ...], Union[str, bytes]]] = None):  # RUF011
171 171 |     pass


