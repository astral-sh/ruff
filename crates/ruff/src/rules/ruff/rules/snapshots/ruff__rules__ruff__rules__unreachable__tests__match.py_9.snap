---
source: crates/ruff/src/rules/ruff/rules/unreachable.rs
---
%% Source code:
%% def func(point):
%%     match point:
%%         case (0, 0):
%%             print("Origin")
%%         case (0, y):
%%             print(f"Y={y}")
%%         case (x, 0):
%%             print(f"X={x}")
%%         case (x, y):
%%             print(f"X={x}, Y={y}")
%%         case _:
%%             raise ValueError("Not a point")

flowchart TD
  start(("Start"))
  return(("End"))
  block0[["`*(empty)*`"]]
  block1["raise ValueError(#quot;Not a point#quot;)\n"]
  block2["match point:
        case (0, 0):
            print(#quot;Origin#quot;)
        case (0, y):
            print(f#quot;Y={y}#quot;)
        case (x, 0):
            print(f#quot;X={x}#quot;)
        case (x, y):
            print(f#quot;X={x}, Y={y}#quot;)
        case _:
            raise ValueError(#quot;Not a point#quot;)\n"]
  block3["print(f#quot;X={x}, Y={y}#quot;)\n"]
  block4["match point:
        case (0, 0):
            print(#quot;Origin#quot;)
        case (0, y):
            print(f#quot;Y={y}#quot;)
        case (x, 0):
            print(f#quot;X={x}#quot;)
        case (x, y):
            print(f#quot;X={x}, Y={y}#quot;)
        case _:
            raise ValueError(#quot;Not a point#quot;)\n"]
  block5["print(f#quot;X={x}#quot;)\n"]
  block6["match point:
        case (0, 0):
            print(#quot;Origin#quot;)
        case (0, y):
            print(f#quot;Y={y}#quot;)
        case (x, 0):
            print(f#quot;X={x}#quot;)
        case (x, y):
            print(f#quot;X={x}, Y={y}#quot;)
        case _:
            raise ValueError(#quot;Not a point#quot;)\n"]
  block7["print(f#quot;Y={y}#quot;)\n"]
  block8["match point:
        case (0, 0):
            print(#quot;Origin#quot;)
        case (0, y):
            print(f#quot;Y={y}#quot;)
        case (x, 0):
            print(f#quot;X={x}#quot;)
        case (x, y):
            print(f#quot;X={x}, Y={y}#quot;)
        case _:
            raise ValueError(#quot;Not a point#quot;)\n"]
  block9["print(#quot;Origin#quot;)\n"]
  block10["match point:
        case (0, 0):
            print(#quot;Origin#quot;)
        case (0, y):
            print(f#quot;Y={y}#quot;)
        case (x, 0):
            print(f#quot;X={x}#quot;)
        case (x, y):
            print(f#quot;X={x}, Y={y}#quot;)
        case _:
            raise ValueError(#quot;Not a point#quot;)\n"]

  start --> block10
  block10 -- "case (0, 0)" --> block9
  block10 -- "else" --> block8
  block9 --> block0
  block8 -- "case (0, y)" --> block7
  block8 -- "else" --> block6
  block7 --> block0
  block6 -- "case (x, 0)" --> block5
  block6 -- "else" --> block4
  block5 --> block0
  block4 -- "case (x, y)" --> block3
  block4 -- "else" --> block2
  block3 --> block0
  block2 --> block1
  block1 --> return
  block0 --> return

