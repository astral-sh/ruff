---
source: crates/ruff/src/rules/flake8_annotations/mod.rs
---
annotation_presence.py:5:5: ANN201 Missing return type annotation for public function `foo`
  |
5 | # Error
6 | def foo(a, b):
  |     ^^^ ANN201
7 |     pass
  |

annotation_presence.py:5:9: ANN001 Missing type annotation for function argument `a`
  |
5 | # Error
6 | def foo(a, b):
  |         ^ ANN001
7 |     pass
  |

annotation_presence.py:5:12: ANN001 Missing type annotation for function argument `b`
  |
5 | # Error
6 | def foo(a, b):
  |            ^ ANN001
7 |     pass
  |

annotation_presence.py:10:5: ANN201 Missing return type annotation for public function `foo`
   |
10 | # Error
11 | def foo(a: int, b):
   |     ^^^ ANN201
12 |     pass
   |

annotation_presence.py:10:17: ANN001 Missing type annotation for function argument `b`
   |
10 | # Error
11 | def foo(a: int, b):
   |                 ^ ANN001
12 |     pass
   |

annotation_presence.py:15:17: ANN001 Missing type annotation for function argument `b`
   |
15 | # Error
16 | def foo(a: int, b) -> int:
   |                 ^ ANN001
17 |     pass
   |

annotation_presence.py:20:5: ANN201 Missing return type annotation for public function `foo`
   |
20 | # Error
21 | def foo(a: int, b: int):
   |     ^^^ ANN201
22 |     pass
   |

annotation_presence.py:25:5: ANN201 Missing return type annotation for public function `foo`
   |
25 | # Error
26 | def foo():
   |     ^^^ ANN201
27 |     pass
   |

annotation_presence.py:45:12: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `a`
   |
45 | # ANN401
46 | def foo(a: Any, *args: str, **kwargs: str) -> int:
   |            ^^^ ANN401
47 |     pass
   |

annotation_presence.py:50:47: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `foo`
   |
50 | # ANN401
51 | def foo(a: int, *args: str, **kwargs: str) -> Any:
   |                                               ^^^ ANN401
52 |     pass
   |

annotation_presence.py:55:24: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`
   |
55 | # ANN401
56 | def foo(a: int, *args: Any, **kwargs: Any) -> int:
   |                        ^^^ ANN401
57 |     pass
   |

annotation_presence.py:55:39: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
   |
55 | # ANN401
56 | def foo(a: int, *args: Any, **kwargs: Any) -> int:
   |                                       ^^^ ANN401
57 |     pass
   |

annotation_presence.py:60:24: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`
   |
60 | # ANN401
61 | def foo(a: int, *args: Any, **kwargs: str) -> int:
   |                        ^^^ ANN401
62 |     pass
   |

annotation_presence.py:65:39: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
   |
65 | # ANN401
66 | def foo(a: int, *args: str, **kwargs: Any) -> int:
   |                                       ^^^ ANN401
67 |     pass
   |

annotation_presence.py:75:13: ANN101 Missing type annotation for `self` in method
   |
75 |     # ANN101
76 |     def foo(self, a: int, b: int) -> int:
   |             ^^^^ ANN101
77 |         pass
   |

annotation_presence.py:79:29: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `a`
   |
79 |     # ANN401
80 |     def foo(self: "Foo", a: Any, *params: str, **options: str) -> int:
   |                             ^^^ ANN401
81 |         pass
   |

annotation_presence.py:83:67: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `foo`
   |
83 |     # ANN401
84 |     def foo(self: "Foo", a: int, *params: str, **options: str) -> Any:
   |                                                                   ^^^ ANN401
85 |         pass
   |

annotation_presence.py:87:43: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `*params`
   |
87 |     # ANN401
88 |     def foo(self: "Foo", a: int, *params: Any, **options: Any) -> int:
   |                                           ^^^ ANN401
89 |         pass
   |

annotation_presence.py:87:59: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `**options`
   |
87 |     # ANN401
88 |     def foo(self: "Foo", a: int, *params: Any, **options: Any) -> int:
   |                                                           ^^^ ANN401
89 |         pass
   |

annotation_presence.py:91:43: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `*params`
   |
91 |     # ANN401
92 |     def foo(self: "Foo", a: int, *params: Any, **options: str) -> int:
   |                                           ^^^ ANN401
93 |         pass
   |

annotation_presence.py:95:59: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `**options`
   |
95 |     # ANN401
96 |     def foo(self: "Foo", a: int, *params: str, **options: Any) -> int:
   |                                                           ^^^ ANN401
97 |         pass
   |

annotation_presence.py:130:13: ANN102 Missing type annotation for `cls` in classmethod
    |
130 |     # ANN102
131 |     @classmethod
132 |     def foo(cls, a: int, b: int) -> int:
    |             ^^^ ANN102
133 |         pass
    |

annotation_presence.py:134:13: ANN101 Missing type annotation for `self` in method
    |
134 |     # ANN101
135 |     def foo(self, /, a: int, b: int) -> int:
    |             ^^^^ ANN101
136 |         pass
    |


