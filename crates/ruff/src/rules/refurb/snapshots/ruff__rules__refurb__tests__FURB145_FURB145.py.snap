---
source: crates/ruff/src/rules/refurb/mod.rs
---
FURB145.py:4:5: FURB145 [*] Prefer `copy` method over slicing
  |
3 | # Errors.
4 | a = l[:]
  |     ^^^^ FURB145
5 | b, c = 1, l[:]
6 | d, e = l[:], 1
  |
  = help: Replace with `copy()`

ℹ Suggested fix
1 1 | l = [1, 2, 3, 4, 5]
2 2 | 
3 3 | # Errors.
4   |-a = l[:]
  4 |+a = l.copy()
5 5 | b, c = 1, l[:]
6 6 | d, e = l[:], 1
7 7 | m = l[::]

FURB145.py:5:11: FURB145 [*] Prefer `copy` method over slicing
  |
3 | # Errors.
4 | a = l[:]
5 | b, c = 1, l[:]
  |           ^^^^ FURB145
6 | d, e = l[:], 1
7 | m = l[::]
  |
  = help: Replace with `copy()`

ℹ Suggested fix
2 2 | 
3 3 | # Errors.
4 4 | a = l[:]
5   |-b, c = 1, l[:]
  5 |+b, c = 1, l.copy()
6 6 | d, e = l[:], 1
7 7 | m = l[::]
8 8 | 

FURB145.py:6:8: FURB145 [*] Prefer `copy` method over slicing
  |
4 | a = l[:]
5 | b, c = 1, l[:]
6 | d, e = l[:], 1
  |        ^^^^ FURB145
7 | m = l[::]
  |
  = help: Replace with `copy()`

ℹ Suggested fix
3 3 | # Errors.
4 4 | a = l[:]
5 5 | b, c = 1, l[:]
6   |-d, e = l[:], 1
  6 |+d, e = l.copy(), 1
7 7 | m = l[::]
8 8 | 
9 9 | # False negatives.

FURB145.py:7:5: FURB145 [*] Prefer `copy` method over slicing
  |
5 | b, c = 1, l[:]
6 | d, e = l[:], 1
7 | m = l[::]
  |     ^^^^^ FURB145
8 | 
9 | # False negatives.
  |
  = help: Replace with `copy()`

ℹ Suggested fix
4 4 | a = l[:]
5 5 | b, c = 1, l[:]
6 6 | d, e = l[:], 1
7   |-m = l[::]
  7 |+m = l.copy()
8 8 | 
9 9 | # False negatives.
10 10 | aa = a[:]  # Type inference.


