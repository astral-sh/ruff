---
source: crates/ruff/src/rules/refurb/mod.rs
---
FURB113.py:21:1: FURB113 [*] Use `nums.extend((1, 2))` instead of repeatedly calling `nums.append()`
   |
20 |   # FURB113
21 | / nums.append(1)
22 | | nums.append(2)
   | |______________^ FURB113
23 |   pass
   |
   = help: Replace with `nums.extend((1, 2))`

ℹ Suggested fix
18 18 | 
19 19 | 
20 20 | # FURB113
21    |-nums.append(1)
22    |-nums.append(2)
   21 |+nums.extend((1, 2))
23 22 | pass
24 23 | 
25 24 | 

FURB113.py:27:1: FURB113 [*] Use `nums3.extend((1, 2))` instead of repeatedly calling `nums3.append()`
   |
26 |   # FURB113
27 | / nums3.append(1)
28 | | nums3.append(2)
   | |_______________^ FURB113
29 |   pass
   |
   = help: Replace with `nums3.extend((1, 2))`

ℹ Suggested fix
24 24 | 
25 25 | 
26 26 | # FURB113
27    |-nums3.append(1)
28    |-nums3.append(2)
   27 |+nums3.extend((1, 2))
29 28 | pass
30 29 | 
31 30 | 

FURB113.py:33:1: FURB113 [*] Use `nums4.extend((1, 2))` instead of repeatedly calling `nums4.append()`
   |
32 |   # FURB113
33 | / nums4.append(1)
34 | | nums4.append(2)
   | |_______________^ FURB113
35 |   pass
   |
   = help: Replace with `nums4.extend((1, 2))`

ℹ Suggested fix
30 30 | 
31 31 | 
32 32 | # FURB113
33    |-nums4.append(1)
34    |-nums4.append(2)
   33 |+nums4.extend((1, 2))
35 34 | pass
36 35 | 
37 36 | 

FURB113.py:39:1: FURB113 Use `nums.extend((1, 2, 3))` instead of repeatedly calling `nums.append()`
   |
38 |   # FURB113
39 | / nums.append(1)
40 | | nums2.append(1)
41 | | nums.append(2)
42 | | nums.append(3)
   | |______________^ FURB113
43 |   pass
   |
   = help: Replace with `nums.extend((1, 2, 3))`

FURB113.py:47:1: FURB113 Use `nums.extend((1, 2, 3))` instead of repeatedly calling `nums.append()`
   |
46 |   # FURB113
47 | / nums.append(1)
48 | | nums2.append(1)
49 | | nums.append(2)
50 | | # FURB113
51 | | nums3.append(1)
52 | | nums.append(3)
   | |______________^ FURB113
53 |   # FURB113
54 |   nums4.append(1)
   |
   = help: Replace with `nums.extend((1, 2, 3))`

FURB113.py:51:1: FURB113 Use `nums3.extend((1, 2))` instead of repeatedly calling `nums3.append()`
   |
49 |   nums.append(2)
50 |   # FURB113
51 | / nums3.append(1)
52 | | nums.append(3)
53 | | # FURB113
54 | | nums4.append(1)
55 | | nums4.append(2)
56 | | nums3.append(2)
   | |_______________^ FURB113
57 |   pass
   |
   = help: Replace with `nums3.extend((1, 2))`

FURB113.py:54:1: FURB113 [*] Use `nums4.extend((1, 2))` instead of repeatedly calling `nums4.append()`
   |
52 |   nums.append(3)
53 |   # FURB113
54 | / nums4.append(1)
55 | | nums4.append(2)
   | |_______________^ FURB113
56 |   nums3.append(2)
57 |   pass
   |
   = help: Replace with `nums4.extend((1, 2))`

ℹ Suggested fix
51 51 | nums3.append(1)
52 52 | nums.append(3)
53 53 | # FURB113
54    |-nums4.append(1)
55    |-nums4.append(2)
   54 |+nums4.extend((1, 2))
56 55 | nums3.append(2)
57 56 | pass
58 57 | 

FURB113.py:60:1: FURB113 [*] Use `nums.extend((1, 2, 3))` instead of repeatedly calling `nums.append()`
   |
59 |   # FURB113
60 | / nums.append(1)
61 | | nums.append(2)
62 | | nums.append(3)
   | |______________^ FURB113
   |
   = help: Replace with `nums.extend((1, 2, 3))`

ℹ Suggested fix
57 57 | pass
58 58 | 
59 59 | # FURB113
60    |-nums.append(1)
61    |-nums.append(2)
62    |-nums.append(3)
   60 |+nums.extend((1, 2, 3))
63 61 | 
64 62 | 
65 63 | if True:

FURB113.py:67:5: FURB113 [*] Use `nums.extend((1, 2))` instead of repeatedly calling `nums.append()`
   |
65 |   if True:
66 |       # FURB113
67 |       nums.append(1)
   |  _____^
68 | |     nums.append(2)
   | |__________________^ FURB113
   |
   = help: Replace with `nums.extend((1, 2))`

ℹ Suggested fix
64 64 | 
65 65 | if True:
66 66 |     # FURB113
67    |-    nums.append(1)
68    |-    nums.append(2)
   67 |+    nums.extend((1, 2))
69 68 | 
70 69 | 
71 70 | if True:

FURB113.py:73:5: FURB113 [*] Use `nums.extend((1, 2))` instead of repeatedly calling `nums.append()`
   |
71 |   if True:
72 |       # FURB113
73 |       nums.append(1)
   |  _____^
74 | |     nums.append(2)
   | |__________________^ FURB113
75 |       pass
   |
   = help: Replace with `nums.extend((1, 2))`

ℹ Suggested fix
70 70 | 
71 71 | if True:
72 72 |     # FURB113
73    |-    nums.append(1)
74    |-    nums.append(2)
   73 |+    nums.extend((1, 2))
75 74 |     pass
76 75 | 
77 76 | 

FURB113.py:80:5: FURB113 Use `nums.extend((1, 2, 3))` instead of repeatedly calling `nums.append()`
   |
78 |   if True:
79 |       # FURB113
80 |       nums.append(1)
   |  _____^
81 | |     nums2.append(1)
82 | |     nums.append(2)
83 | |     nums.append(3)
   | |__________________^ FURB113
   |
   = help: Replace with `nums.extend((1, 2, 3))`

FURB113.py:88:5: FURB113 [*] Use `x.extend((1, 2))` instead of repeatedly calling `x.append()`
   |
86 |   def yes_one(x: list[int]):
87 |       # FURB113
88 |       x.append(1)
   |  _____^
89 | |     x.append(2)
   | |_______________^ FURB113
   |
   = help: Replace with `x.extend((1, 2))`

ℹ Suggested fix
85 85 | 
86 86 | def yes_one(x: list[int]):
87 87 |     # FURB113
88    |-    x.append(1)
89    |-    x.append(2)
   88 |+    x.extend((1, 2))
90 89 | 
91 90 | 
92 91 | def yes_two(x: List[int]):

FURB113.py:94:5: FURB113 [*] Use `x.extend((1, 2))` instead of repeatedly calling `x.append()`
   |
92 |   def yes_two(x: List[int]):
93 |       # FURB113
94 |       x.append(1)
   |  _____^
95 | |     x.append(2)
   | |_______________^ FURB113
   |
   = help: Replace with `x.extend((1, 2))`

ℹ Suggested fix
91 91 | 
92 92 | def yes_two(x: List[int]):
93 93 |     # FURB113
94    |-    x.append(1)
95    |-    x.append(2)
   94 |+    x.extend((1, 2))
96 95 | 
97 96 | 
98 97 | def yes_three(*, x: list[int]):

FURB113.py:100:5: FURB113 [*] Use `x.extend((1, 2))` instead of repeatedly calling `x.append()`
    |
 98 |   def yes_three(*, x: list[int]):
 99 |       # FURB113
100 |       x.append(1)
    |  _____^
101 | |     x.append(2)
    | |_______________^ FURB113
    |
    = help: Replace with `x.extend((1, 2))`

ℹ Suggested fix
97  97  | 
98  98  | def yes_three(*, x: list[int]):
99  99  |     # FURB113
100     |-    x.append(1)
101     |-    x.append(2)
    100 |+    x.extend((1, 2))
102 101 | 
103 102 | 
104 103 | def yes_four(x: list[int], /):

FURB113.py:106:5: FURB113 [*] Use `x.extend((1, 2))` instead of repeatedly calling `x.append()`
    |
104 |   def yes_four(x: list[int], /):
105 |       # FURB113
106 |       x.append(1)
    |  _____^
107 | |     x.append(2)
    | |_______________^ FURB113
    |
    = help: Replace with `x.extend((1, 2))`

ℹ Suggested fix
103 103 | 
104 104 | def yes_four(x: list[int], /):
105 105 |     # FURB113
106     |-    x.append(1)
107     |-    x.append(2)
    106 |+    x.extend((1, 2))
108 107 | 
109 108 | 
110 109 | def yes_five(x: list[int], y: list[int]):

FURB113.py:112:5: FURB113 Use `x.extend((1, 2, 3))` instead of repeatedly calling `x.append()`
    |
110 |   def yes_five(x: list[int], y: list[int]):
111 |       # FURB113
112 |       x.append(1)
    |  _____^
113 | |     x.append(2)
114 | |     y.append(1)
115 | |     x.append(3)
    | |_______________^ FURB113
    |
    = help: Replace with `x.extend((1, 2, 3))`


