---
source: crates/ruff/src/rules/flake8_pytest_style/mod.rs
---
PT015.py:9:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
 9 | def test_error():
10 |     assert None
   |     ^^^^^^^^^^^ PT015
11 |     assert False
12 |     assert 0
   |

PT015.py:10:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
10 | def test_error():
11 |     assert None
12 |     assert False
   |     ^^^^^^^^^^^^ PT015
13 |     assert 0
14 |     assert 0.0
   |

PT015.py:11:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
11 |     assert None
12 |     assert False
13 |     assert 0
   |     ^^^^^^^^ PT015
14 |     assert 0.0
15 |     assert ""
   |

PT015.py:12:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
12 |     assert False
13 |     assert 0
14 |     assert 0.0
   |     ^^^^^^^^^^ PT015
15 |     assert ""
16 |     assert f""
   |

PT015.py:13:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
13 |     assert 0
14 |     assert 0.0
15 |     assert ""
   |     ^^^^^^^^^ PT015
16 |     assert f""
17 |     assert []
   |

PT015.py:14:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
14 |     assert 0.0
15 |     assert ""
16 |     assert f""
   |     ^^^^^^^^^^ PT015
17 |     assert []
18 |     assert ()
   |

PT015.py:15:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
15 |     assert ""
16 |     assert f""
17 |     assert []
   |     ^^^^^^^^^ PT015
18 |     assert ()
19 |     assert {}
   |

PT015.py:16:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
16 |     assert f""
17 |     assert []
18 |     assert ()
   |     ^^^^^^^^^ PT015
19 |     assert {}
20 |     assert list()
   |

PT015.py:17:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
17 |     assert []
18 |     assert ()
19 |     assert {}
   |     ^^^^^^^^^ PT015
20 |     assert list()
21 |     assert set()
   |

PT015.py:18:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
18 |     assert ()
19 |     assert {}
20 |     assert list()
   |     ^^^^^^^^^^^^^ PT015
21 |     assert set()
22 |     assert tuple()
   |

PT015.py:19:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
19 |     assert {}
20 |     assert list()
21 |     assert set()
   |     ^^^^^^^^^^^^ PT015
22 |     assert tuple()
23 |     assert dict()
   |

PT015.py:20:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
20 |     assert list()
21 |     assert set()
22 |     assert tuple()
   |     ^^^^^^^^^^^^^^ PT015
23 |     assert dict()
24 |     assert frozenset()
   |

PT015.py:21:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
21 |     assert set()
22 |     assert tuple()
23 |     assert dict()
   |     ^^^^^^^^^^^^^ PT015
24 |     assert frozenset()
25 |     assert list([])
   |

PT015.py:22:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
22 |     assert tuple()
23 |     assert dict()
24 |     assert frozenset()
   |     ^^^^^^^^^^^^^^^^^^ PT015
25 |     assert list([])
26 |     assert set(set())
   |

PT015.py:23:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
23 |     assert dict()
24 |     assert frozenset()
25 |     assert list([])
   |     ^^^^^^^^^^^^^^^ PT015
26 |     assert set(set())
27 |     assert tuple("")
   |

PT015.py:24:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
24 |     assert frozenset()
25 |     assert list([])
26 |     assert set(set())
   |     ^^^^^^^^^^^^^^^^^ PT015
27 |     assert tuple("")
   |

PT015.py:25:5: PT015 Assertion always fails, replace with `pytest.fail()`
   |
25 |     assert list([])
26 |     assert set(set())
27 |     assert tuple("")
   |     ^^^^^^^^^^^^^^^^ PT015
   |


