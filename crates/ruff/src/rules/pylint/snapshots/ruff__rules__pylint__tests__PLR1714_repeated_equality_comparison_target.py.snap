---
source: crates/ruff/src/rules/pylint/mod.rs
---
repeated_equality_comparison_target.py:2:1: PLR1714 Consider merging multiple comparisons: `foo in ("a", "b")`. Use a `set` if the elements are hashable.
  |
1 | # Errors.
2 | foo == "a" or foo == "b"
  | ^^^^^^^^^^^^^^^^^^^^^^^^ PLR1714
3 | 
4 | foo != "a" and foo != "b"
  |

repeated_equality_comparison_target.py:4:1: PLR1714 Consider merging multiple comparisons: `foo not in ("a", "b")`. Use a `set` if the elements are hashable.
  |
2 | foo == "a" or foo == "b"
3 | 
4 | foo != "a" and foo != "b"
  | ^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1714
5 | 
6 | foo == "a" or foo == "b" or foo == "c"
  |

repeated_equality_comparison_target.py:6:1: PLR1714 Consider merging multiple comparisons: `foo in ("a", "b", "c")`. Use a `set` if the elements are hashable.
  |
4 | foo != "a" and foo != "b"
5 | 
6 | foo == "a" or foo == "b" or foo == "c"
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1714
7 | 
8 | foo != "a" and foo != "b" and foo != "c"
  |

repeated_equality_comparison_target.py:8:1: PLR1714 Consider merging multiple comparisons: `foo not in ("a", "b", "c")`. Use a `set` if the elements are hashable.
   |
 6 | foo == "a" or foo == "b" or foo == "c"
 7 | 
 8 | foo != "a" and foo != "b" and foo != "c"
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1714
 9 | 
10 | foo == a or foo == "b" or foo == 3  # Mixed types.
   |

repeated_equality_comparison_target.py:10:1: PLR1714 Consider merging multiple comparisons: `foo in (a, "b", 3)`. Use a `set` if the elements are hashable.
   |
 8 | foo != "a" and foo != "b" and foo != "c"
 9 | 
10 | foo == a or foo == "b" or foo == 3  # Mixed types.
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1714
11 | 
12 | # False negatives (the current implementation doesn't support Yoda conditions).
   |


