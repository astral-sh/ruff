---
source: crates/ruff/src/rules/pylint/mod.rs
---
nested_min_max.py:2:1: PLW3301 [*] Nested `min` calls can be flattened
  |
2 | min(1, 2, 3)
3 | min(1, min(2, 3))
  | ^^^^^^^^^^^^^^^^^ PLW3301
4 | min(1, min(2, min(3, 4)))
5 | min(1, foo("a", "b"), min(3, 4))
  |
  = help: Flatten nested `min` calls

ℹ Suggested fix
1 1 | min(1, 2, 3)
2   |-min(1, min(2, 3))
  2 |+min(1, 2, 3)
3 3 | min(1, min(2, min(3, 4)))
4 4 | min(1, foo("a", "b"), min(3, 4))
5 5 | min(1, max(2, 3))

nested_min_max.py:3:1: PLW3301 [*] Nested `min` calls can be flattened
  |
3 | min(1, 2, 3)
4 | min(1, min(2, 3))
5 | min(1, min(2, min(3, 4)))
  | ^^^^^^^^^^^^^^^^^^^^^^^^^ PLW3301
6 | min(1, foo("a", "b"), min(3, 4))
7 | min(1, max(2, 3))
  |
  = help: Flatten nested `min` calls

ℹ Suggested fix
1 1 | min(1, 2, 3)
2 2 | min(1, min(2, 3))
3   |-min(1, min(2, min(3, 4)))
  3 |+min(1, 2, 3, 4)
4 4 | min(1, foo("a", "b"), min(3, 4))
5 5 | min(1, max(2, 3))
6 6 | max(1, 2, 3)

nested_min_max.py:3:8: PLW3301 [*] Nested `min` calls can be flattened
  |
3 | min(1, 2, 3)
4 | min(1, min(2, 3))
5 | min(1, min(2, min(3, 4)))
  |        ^^^^^^^^^^^^^^^^^ PLW3301
6 | min(1, foo("a", "b"), min(3, 4))
7 | min(1, max(2, 3))
  |
  = help: Flatten nested `min` calls

ℹ Suggested fix
1 1 | min(1, 2, 3)
2 2 | min(1, min(2, 3))
3   |-min(1, min(2, min(3, 4)))
  3 |+min(1, min(2, 3, 4))
4 4 | min(1, foo("a", "b"), min(3, 4))
5 5 | min(1, max(2, 3))
6 6 | max(1, 2, 3)

nested_min_max.py:4:1: PLW3301 [*] Nested `min` calls can be flattened
  |
4 | min(1, min(2, 3))
5 | min(1, min(2, min(3, 4)))
6 | min(1, foo("a", "b"), min(3, 4))
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW3301
7 | min(1, max(2, 3))
8 | max(1, 2, 3)
  |
  = help: Flatten nested `min` calls

ℹ Suggested fix
1 1 | min(1, 2, 3)
2 2 | min(1, min(2, 3))
3 3 | min(1, min(2, min(3, 4)))
4   |-min(1, foo("a", "b"), min(3, 4))
  4 |+min(1, foo("a", "b"), 3, 4)
5 5 | min(1, max(2, 3))
6 6 | max(1, 2, 3)
7 7 | max(1, max(2, 3))

nested_min_max.py:7:1: PLW3301 [*] Nested `max` calls can be flattened
   |
 7 | min(1, max(2, 3))
 8 | max(1, 2, 3)
 9 | max(1, max(2, 3))
   | ^^^^^^^^^^^^^^^^^ PLW3301
10 | max(1, max(2, max(3, 4)))
11 | max(1, foo("a", "b"), max(3, 4))
   |
   = help: Flatten nested `max` calls

ℹ Suggested fix
4 4 | min(1, foo("a", "b"), min(3, 4))
5 5 | min(1, max(2, 3))
6 6 | max(1, 2, 3)
7   |-max(1, max(2, 3))
  7 |+max(1, 2, 3)
8 8 | max(1, max(2, max(3, 4)))
9 9 | max(1, foo("a", "b"), max(3, 4))
10 10 | 

nested_min_max.py:8:1: PLW3301 [*] Nested `max` calls can be flattened
   |
 8 | max(1, 2, 3)
 9 | max(1, max(2, 3))
10 | max(1, max(2, max(3, 4)))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ PLW3301
11 | max(1, foo("a", "b"), max(3, 4))
   |
   = help: Flatten nested `max` calls

ℹ Suggested fix
5 5 | min(1, max(2, 3))
6 6 | max(1, 2, 3)
7 7 | max(1, max(2, 3))
8   |-max(1, max(2, max(3, 4)))
  8 |+max(1, 2, 3, 4)
9 9 | max(1, foo("a", "b"), max(3, 4))
10 10 | 
11 11 | # These should not trigger; we do not flag cases with keyword args.

nested_min_max.py:8:8: PLW3301 [*] Nested `max` calls can be flattened
   |
 8 | max(1, 2, 3)
 9 | max(1, max(2, 3))
10 | max(1, max(2, max(3, 4)))
   |        ^^^^^^^^^^^^^^^^^ PLW3301
11 | max(1, foo("a", "b"), max(3, 4))
   |
   = help: Flatten nested `max` calls

ℹ Suggested fix
5 5 | min(1, max(2, 3))
6 6 | max(1, 2, 3)
7 7 | max(1, max(2, 3))
8   |-max(1, max(2, max(3, 4)))
  8 |+max(1, max(2, 3, 4))
9 9 | max(1, foo("a", "b"), max(3, 4))
10 10 | 
11 11 | # These should not trigger; we do not flag cases with keyword args.

nested_min_max.py:9:1: PLW3301 [*] Nested `max` calls can be flattened
   |
 9 | max(1, max(2, 3))
10 | max(1, max(2, max(3, 4)))
11 | max(1, foo("a", "b"), max(3, 4))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW3301
12 | 
13 | # These should not trigger; we do not flag cases with keyword args.
   |
   = help: Flatten nested `max` calls

ℹ Suggested fix
6  6  | max(1, 2, 3)
7  7  | max(1, max(2, 3))
8  8  | max(1, max(2, max(3, 4)))
9     |-max(1, foo("a", "b"), max(3, 4))
   9  |+max(1, foo("a", "b"), 3, 4)
10 10 | 
11 11 | # These should not trigger; we do not flag cases with keyword args.
12 12 | min(1, min(2, 3), key=test)

nested_min_max.py:15:1: PLW3301 [*] Nested `min` calls can be flattened
   |
15 | min(1, min(2, 3, key=test))
16 | # This will still trigger, to merge the calls without keyword args.
17 | min(1, min(2, 3, key=test), min(4, 5))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW3301
18 | 
19 | # Don't provide a fix if there are comments within the call.
   |
   = help: Flatten nested `min` calls

ℹ Suggested fix
12 12 | min(1, min(2, 3), key=test)
13 13 | min(1, min(2, 3, key=test))
14 14 | # This will still trigger, to merge the calls without keyword args.
15    |-min(1, min(2, 3, key=test), min(4, 5))
   15 |+min(1, min(2, 3, key=test), 4, 5)
16 16 | 
17 17 | # Don't provide a fix if there are comments within the call.
18 18 | min(

nested_min_max.py:18:1: PLW3301 Nested `min` calls can be flattened
   |
18 |   # Don't provide a fix if there are comments within the call.
19 | / min(
20 | |     1,  # This is a comment.
21 | |     min(2, 3),
22 | | )
   | |_^ PLW3301
   |
   = help: Flatten nested `min` calls


