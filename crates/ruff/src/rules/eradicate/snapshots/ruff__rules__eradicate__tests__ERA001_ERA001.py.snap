---
source: crates/ruff/src/rules/eradicate/mod.rs
---
ERA001.py:1:1: ERA001 [*] Found commented-out code
  |
1 | #import os
  | ^^^^^^^^^^ ERA001
2 | # from foo import junk
3 | #a = 3
  |
  = help: Remove commented-out code

ℹ Suggested fix
1   |-#import os
2 1 | # from foo import junk
3 2 | #a = 3
4 3 | a = 4

ERA001.py:2:1: ERA001 [*] Found commented-out code
  |
2 | #import os
3 | # from foo import junk
  | ^^^^^^^^^^^^^^^^^^^^^^ ERA001
4 | #a = 3
5 | a = 4
  |
  = help: Remove commented-out code

ℹ Suggested fix
1 1 | #import os
2   |-# from foo import junk
3 2 | #a = 3
4 3 | a = 4
5 4 | #foo(1, 2, 3)

ERA001.py:3:1: ERA001 [*] Found commented-out code
  |
3 | #import os
4 | # from foo import junk
5 | #a = 3
  | ^^^^^^ ERA001
6 | a = 4
7 | #foo(1, 2, 3)
  |
  = help: Remove commented-out code

ℹ Suggested fix
1 1 | #import os
2 2 | # from foo import junk
3   |-#a = 3
4 3 | a = 4
5 4 | #foo(1, 2, 3)
6 5 | 

ERA001.py:5:1: ERA001 [*] Found commented-out code
  |
5 | #a = 3
6 | a = 4
7 | #foo(1, 2, 3)
  | ^^^^^^^^^^^^^ ERA001
8 | 
9 | def foo(x, y, z):
  |
  = help: Remove commented-out code

ℹ Suggested fix
2 2 | # from foo import junk
3 3 | #a = 3
4 4 | a = 4
5   |-#foo(1, 2, 3)
6 5 | 
7 6 | def foo(x, y, z):
8 7 |     content = 1 # print('hello')

ERA001.py:13:5: ERA001 [*] Found commented-out code
   |
13 |     # This is a real comment.
14 |     # # This is a (nested) comment.
15 |     #return True
   |     ^^^^^^^^^^^^ ERA001
16 |     return False
   |
   = help: Remove commented-out code

ℹ Suggested fix
10 10 | 
11 11 |     # This is a real comment.
12 12 |     # # This is a (nested) comment.
13    |-    #return True
14 13 |     return False
15 14 | 
16 15 | #import os  # noqa: ERA001

ERA001.py:21:5: ERA001 [*] Found commented-out code
   |
21 | class A():
22 |     pass
23 |     # b = c
   |     ^^^^^^^ ERA001
   |
   = help: Remove commented-out code

ℹ Suggested fix
18 18 | 
19 19 | class A():
20 20 |     pass
21    |-    # b = c


