---
source: crates/ruff/src/rules/tryceratops/mod.rs
expression: diagnostics
---
- kind:
    name: ErrorInsteadOfException
    body: "Use `logging.exception` instead of `logging.error`"
    suggestion: ~
    fixable: false
  location:
    row: 15
    column: 8
  end_location:
    row: 15
    column: 45
  fix: ~
  parent: ~
- kind:
    name: ErrorInsteadOfException
    body: "Use `logging.exception` instead of `logging.error`"
    suggestion: ~
    fixable: false
  location:
    row: 18
    column: 12
  end_location:
    row: 18
    column: 49
  fix: ~
  parent: ~
- kind:
    name: ErrorInsteadOfException
    body: "Use `logging.exception` instead of `logging.error`"
    suggestion: ~
    fixable: false
  location:
    row: 25
    column: 8
  end_location:
    row: 25
    column: 44
  fix: ~
  parent: ~
- kind:
    name: ErrorInsteadOfException
    body: "Use `logging.exception` instead of `logging.error`"
    suggestion: ~
    fixable: false
  location:
    row: 28
    column: 12
  end_location:
    row: 28
    column: 48
  fix: ~
  parent: ~
- kind:
    name: ErrorInsteadOfException
    body: "Use `logging.exception` instead of `logging.error`"
    suggestion: ~
    fixable: false
  location:
    row: 35
    column: 8
  end_location:
    row: 35
    column: 41
  fix: ~
  parent: ~
- kind:
    name: ErrorInsteadOfException
    body: "Use `logging.exception` instead of `logging.error`"
    suggestion: ~
    fixable: false
  location:
    row: 38
    column: 12
  end_location:
    row: 38
    column: 45
  fix: ~
  parent: ~
- kind:
    name: ErrorInsteadOfException
    body: "Use `logging.exception` instead of `logging.error`"
    suggestion: ~
    fixable: false
  location:
    row: 45
    column: 8
  end_location:
    row: 45
    column: 49
  fix: ~
  parent: ~
- kind:
    name: ErrorInsteadOfException
    body: "Use `logging.exception` instead of `logging.error`"
    suggestion: ~
    fixable: false
  location:
    row: 48
    column: 12
  end_location:
    row: 48
    column: 53
  fix: ~
  parent: ~

