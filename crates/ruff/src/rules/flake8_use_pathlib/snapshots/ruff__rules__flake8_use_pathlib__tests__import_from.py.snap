---
source: crates/ruff/src/rules/flake8_use_pathlib/mod.rs
---
import_from.py:8:5: PTH100 `os.path.abspath()` should be replaced by `Path.resolve()`
   |
 6 | p = "/foo"
 7 | 
 8 | a = abspath(p)
   |     ^^^^^^^ PTH100
 9 | aa = chmod(p)
10 | aaa = mkdir(p)
   |

import_from.py:9:6: PTH101 `os.chmod()` should be replaced by `Path.chmod()`
   |
 8 | a = abspath(p)
 9 | aa = chmod(p)
   |      ^^^^^ PTH101
10 | aaa = mkdir(p)
11 | makedirs(p)
   |

import_from.py:10:7: PTH102 `os.mkdir()` should be replaced by `Path.mkdir()`
   |
 8 | a = abspath(p)
 9 | aa = chmod(p)
10 | aaa = mkdir(p)
   |       ^^^^^ PTH102
11 | makedirs(p)
12 | rename(p)
   |

import_from.py:11:1: PTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`
   |
 9 | aa = chmod(p)
10 | aaa = mkdir(p)
11 | makedirs(p)
   | ^^^^^^^^ PTH103
12 | rename(p)
13 | replace(p)
   |

import_from.py:12:1: PTH104 `os.rename()` should be replaced by `Path.rename()`
   |
10 | aaa = mkdir(p)
11 | makedirs(p)
12 | rename(p)
   | ^^^^^^ PTH104
13 | replace(p)
14 | rmdir(p)
   |

import_from.py:13:1: PTH105 `os.replace()` should be replaced by `Path.replace()`
   |
11 | makedirs(p)
12 | rename(p)
13 | replace(p)
   | ^^^^^^^ PTH105
14 | rmdir(p)
15 | remove(p)
   |

import_from.py:14:1: PTH106 `os.rmdir()` should be replaced by `Path.rmdir()`
   |
12 | rename(p)
13 | replace(p)
14 | rmdir(p)
   | ^^^^^ PTH106
15 | remove(p)
16 | unlink(p)
   |

import_from.py:15:1: PTH107 `os.remove()` should be replaced by `Path.unlink()`
   |
13 | replace(p)
14 | rmdir(p)
15 | remove(p)
   | ^^^^^^ PTH107
16 | unlink(p)
17 | getcwd(p)
   |

import_from.py:16:1: PTH108 `os.unlink()` should be replaced by `Path.unlink()`
   |
14 | rmdir(p)
15 | remove(p)
16 | unlink(p)
   | ^^^^^^ PTH108
17 | getcwd(p)
18 | b = exists(p)
   |

import_from.py:17:1: PTH109 `os.getcwd()` should be replaced by `Path.cwd()`
   |
15 | remove(p)
16 | unlink(p)
17 | getcwd(p)
   | ^^^^^^ PTH109
18 | b = exists(p)
19 | bb = expanduser(p)
   |

import_from.py:18:5: PTH110 `os.path.exists()` should be replaced by `Path.exists()`
   |
16 | unlink(p)
17 | getcwd(p)
18 | b = exists(p)
   |     ^^^^^^ PTH110
19 | bb = expanduser(p)
20 | bbb = isdir(p)
   |

import_from.py:19:6: PTH111 `os.path.expanduser()` should be replaced by `Path.expanduser()`
   |
17 | getcwd(p)
18 | b = exists(p)
19 | bb = expanduser(p)
   |      ^^^^^^^^^^ PTH111
20 | bbb = isdir(p)
21 | bbbb = isfile(p)
   |

import_from.py:20:7: PTH112 `os.path.isdir()` should be replaced by `Path.is_dir()`
   |
18 | b = exists(p)
19 | bb = expanduser(p)
20 | bbb = isdir(p)
   |       ^^^^^ PTH112
21 | bbbb = isfile(p)
22 | bbbbb = islink(p)
   |

import_from.py:21:8: PTH113 `os.path.isfile()` should be replaced by `Path.is_file()`
   |
19 | bb = expanduser(p)
20 | bbb = isdir(p)
21 | bbbb = isfile(p)
   |        ^^^^^^ PTH113
22 | bbbbb = islink(p)
23 | readlink(p)
   |

import_from.py:22:9: PTH114 `os.path.islink()` should be replaced by `Path.is_symlink()`
   |
20 | bbb = isdir(p)
21 | bbbb = isfile(p)
22 | bbbbb = islink(p)
   |         ^^^^^^ PTH114
23 | readlink(p)
24 | stat(p)
   |

import_from.py:23:1: PTH115 `os.readlink()` should be replaced by `Path.readlink()`
   |
21 | bbbb = isfile(p)
22 | bbbbb = islink(p)
23 | readlink(p)
   | ^^^^^^^^ PTH115
24 | stat(p)
25 | isabs(p)
   |

import_from.py:24:1: PTH116 `os.stat()` should be replaced by `Path.stat()`, `Path.owner()`, or `Path.group()`
   |
22 | bbbbb = islink(p)
23 | readlink(p)
24 | stat(p)
   | ^^^^ PTH116
25 | isabs(p)
26 | join(p)
   |

import_from.py:25:1: PTH117 `os.path.isabs()` should be replaced by `Path.is_absolute()`
   |
23 | readlink(p)
24 | stat(p)
25 | isabs(p)
   | ^^^^^ PTH117
26 | join(p)
27 | basename(p)
   |

import_from.py:26:1: PTH118 `os.path.join()` should be replaced by `Path` with `/` operator
   |
24 | stat(p)
25 | isabs(p)
26 | join(p)
   | ^^^^ PTH118
27 | basename(p)
28 | dirname(p)
   |

import_from.py:27:1: PTH119 `os.path.basename()` should be replaced by `Path.name`
   |
25 | isabs(p)
26 | join(p)
27 | basename(p)
   | ^^^^^^^^ PTH119
28 | dirname(p)
29 | samefile(p)
   |

import_from.py:28:1: PTH120 `os.path.dirname()` should be replaced by `Path.parent`
   |
26 | join(p)
27 | basename(p)
28 | dirname(p)
   | ^^^^^^^ PTH120
29 | samefile(p)
30 | splitext(p)
   |

import_from.py:29:1: PTH121 `os.path.samefile()` should be replaced by `Path.samefile()`
   |
27 | basename(p)
28 | dirname(p)
29 | samefile(p)
   | ^^^^^^^^ PTH121
30 | splitext(p)
31 | with open(p) as fp:
   |

import_from.py:30:1: PTH122 `os.path.splitext()` should be replaced by `Path.suffix`
   |
28 | dirname(p)
29 | samefile(p)
30 | splitext(p)
   | ^^^^^^^^ PTH122
31 | with open(p) as fp:
32 |     fp.read()
   |

import_from.py:31:6: PTH123 `open()` should be replaced by `Path.open()`
   |
29 | samefile(p)
30 | splitext(p)
31 | with open(p) as fp:
   |      ^^^^ PTH123
32 |     fp.read()
33 | open(p).close()
   |

import_from.py:33:1: PTH123 `open()` should be replaced by `Path.open()`
   |
31 | with open(p) as fp:
32 |     fp.read()
33 | open(p).close()
   | ^^^^ PTH123
   |


