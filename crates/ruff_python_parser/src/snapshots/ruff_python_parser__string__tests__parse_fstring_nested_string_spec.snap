---
source: crates/ruff_python_parser/src/string.rs
expression: suite
---
[
    Expr(
        StmtExpr {
            node_index: NodeIndex(
                "_",
            ),
            range: 0..13,
            value: FString(
                ExprFString {
                    node_index: NodeIndex(
                        "_",
                    ),
                    range: 0..13,
                    value: FStringValue {
                        inner: Single(
                            FString(
                                FString {
                                    range: 0..13,
                                    node_index: NodeIndex(
                                        "_",
                                    ),
                                    elements: [
                                        Interpolation(
                                            InterpolatedElement {
                                                range: 2..12,
                                                node_index: NodeIndex(
                                                    "_",
                                                ),
                                                expression: Name(
                                                    ExprName {
                                                        node_index: NodeIndex(
                                                            "_",
                                                        ),
                                                        range: 3..6,
                                                        id: Name("foo"),
                                                        ctx: Load,
                                                    },
                                                ),
                                                debug_text: None,
                                                conversion: None,
                                                format_spec: Some(
                                                    InterpolatedStringFormatSpec {
                                                        range: 7..11,
                                                        node_index: NodeIndex(
                                                            "_",
                                                        ),
                                                        elements: [
                                                            Interpolation(
                                                                InterpolatedElement {
                                                                    range: 7..11,
                                                                    node_index: NodeIndex(
                                                                        "_",
                                                                    ),
                                                                    expression: StringLiteral(
                                                                        ExprStringLiteral {
                                                                            node_index: NodeIndex(
                                                                                "_",
                                                                            ),
                                                                            range: 8..10,
                                                                            value: StringLiteralValue {
                                                                                inner: Single(
                                                                                    StringLiteral {
                                                                                        range: 8..10,
                                                                                        node_index: NodeIndex(
                                                                                            "_",
                                                                                        ),
                                                                                        value: "",
                                                                                        flags: StringLiteralFlags {
                                                                                            quote_style: Single,
                                                                                            prefix: Empty,
                                                                                            triple_quoted: false,
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    ),
                                                                    debug_text: None,
                                                                    conversion: None,
                                                                    format_spec: None,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    flags: FStringFlags {
                                        quote_style: Double,
                                        prefix: Regular,
                                        triple_quoted: false,
                                    },
                                },
                            ),
                        ),
                    },
                },
            ),
        },
    ),
]
