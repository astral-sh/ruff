---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/invalid/statements/match/as_pattern_4.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..187,
        body: [
            Match(
                StmtMatch {
                    node_index: AtomicNodeIndex(..),
                    range: 0..186,
                    subject: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 6..13,
                            id: Name("subject"),
                            ctx: Load,
                        },
                    ),
                    cases: [
                        MatchCase {
                            range: 156..186,
                            node_index: AtomicNodeIndex(..),
                            pattern: MatchMapping(
                                PatternMatchMapping {
                                    range: 161..172,
                                    node_index: AtomicNodeIndex(..),
                                    keys: [
                                        Name(
                                            ExprName {
                                                node_index: AtomicNodeIndex(..),
                                                range: 162..163,
                                                id: Name("x"),
                                                ctx: Store,
                                            },
                                        ),
                                        Name(
                                            ExprName {
                                                node_index: AtomicNodeIndex(..),
                                                range: 167..168,
                                                id: Name("y"),
                                                ctx: Store,
                                            },
                                        ),
                                    ],
                                    patterns: [
                                        MatchAs(
                                            PatternMatchAs {
                                                range: 164..166,
                                                node_index: AtomicNodeIndex(..),
                                                pattern: None,
                                                name: Some(
                                                    Identifier {
                                                        id: Name("as"),
                                                        range: 164..166,
                                                        node_index: AtomicNodeIndex(..),
                                                    },
                                                ),
                                            },
                                        ),
                                        MatchValue(
                                            PatternMatchValue {
                                                range: 170..171,
                                                node_index: AtomicNodeIndex(..),
                                                value: NumberLiteral(
                                                    ExprNumberLiteral {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 170..171,
                                                        value: Int(
                                                            1,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                    rest: None,
                                },
                            ),
                            guard: None,
                            body: [
                                Pass(
                                    StmtPass {
                                        node_index: AtomicNodeIndex(..),
                                        range: 182..186,
                                    },
                                ),
                            ],
                        },
                    ],
                },
            ),
        ],
    },
)
```
## Errors

  |
2 |     # This `as` pattern is unparenthesized so the parser never takes the path
3 |     # where it might be confused as a mapping key pattern.
4 |     case {x as y: 1}:
  |           ^ Syntax Error: Invalid mapping pattern key
5 |         pass
  |


  |
2 |     # This `as` pattern is unparenthesized so the parser never takes the path
3 |     # where it might be confused as a mapping key pattern.
4 |     case {x as y: 1}:
  |             ^^ Syntax Error: Expected ':', found 'as'
5 |         pass
  |


  |
2 |     # This `as` pattern is unparenthesized so the parser never takes the path
3 |     # where it might be confused as a mapping key pattern.
4 |     case {x as y: 1}:
  |                ^ Syntax Error: Expected ',', found name
5 |         pass
  |
