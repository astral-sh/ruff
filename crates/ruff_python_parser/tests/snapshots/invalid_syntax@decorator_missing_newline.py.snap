---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/inline/err/decorator_missing_newline.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..60,
        body: [
            FunctionDef(
                StmtFunctionDef {
                    node_index: AtomicNodeIndex(..),
                    range: 0..17,
                    is_async: false,
                    decorator_list: [
                        Decorator {
                            range: 0..2,
                            node_index: AtomicNodeIndex(..),
                            expression: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 1..2,
                                    id: Name("x"),
                                    ctx: Load,
                                },
                            ),
                        },
                    ],
                    name: Identifier {
                        id: Name("foo"),
                        range: 7..10,
                        node_index: AtomicNodeIndex(..),
                    },
                    type_params: None,
                    parameters: Parameters {
                        range: 10..12,
                        node_index: AtomicNodeIndex(
                            0,
                        ),
                        posonlyargs: [],
                        args: [],
                        vararg: None,
                        kwonlyargs: [],
                        kwarg: None,
                    },
                    returns: None,
                    body: [
                        Expr(
                            StmtExpr {
                                node_index: AtomicNodeIndex(..),
                                range: 14..17,
                                value: EllipsisLiteral(
                                    ExprEllipsisLiteral {
                                        node_index: AtomicNodeIndex(..),
                                        range: 14..17,
                                    },
                                ),
                            },
                        ),
                    ],
                },
            ),
            FunctionDef(
                StmtFunctionDef {
                    node_index: AtomicNodeIndex(..),
                    range: 18..41,
                    is_async: true,
                    decorator_list: [
                        Decorator {
                            range: 18..20,
                            node_index: AtomicNodeIndex(..),
                            expression: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 19..20,
                                    id: Name("x"),
                                    ctx: Load,
                                },
                            ),
                        },
                    ],
                    name: Identifier {
                        id: Name("foo"),
                        range: 31..34,
                        node_index: AtomicNodeIndex(..),
                    },
                    type_params: None,
                    parameters: Parameters {
                        range: 34..36,
                        node_index: AtomicNodeIndex(
                            0,
                        ),
                        posonlyargs: [],
                        args: [],
                        vararg: None,
                        kwonlyargs: [],
                        kwarg: None,
                    },
                    returns: None,
                    body: [
                        Expr(
                            StmtExpr {
                                node_index: AtomicNodeIndex(..),
                                range: 38..41,
                                value: EllipsisLiteral(
                                    ExprEllipsisLiteral {
                                        node_index: AtomicNodeIndex(..),
                                        range: 38..41,
                                    },
                                ),
                            },
                        ),
                    ],
                },
            ),
            ClassDef(
                StmtClassDef {
                    node_index: AtomicNodeIndex(..),
                    range: 42..59,
                    decorator_list: [
                        Decorator {
                            range: 42..44,
                            node_index: AtomicNodeIndex(..),
                            expression: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 43..44,
                                    id: Name("x"),
                                    ctx: Load,
                                },
                            ),
                        },
                    ],
                    name: Identifier {
                        id: Name("Foo"),
                        range: 51..54,
                        node_index: AtomicNodeIndex(..),
                    },
                    type_params: None,
                    arguments: None,
                    body: [
                        Expr(
                            StmtExpr {
                                node_index: AtomicNodeIndex(..),
                                range: 56..59,
                                value: EllipsisLiteral(
                                    ExprEllipsisLiteral {
                                        node_index: AtomicNodeIndex(..),
                                        range: 56..59,
                                    },
                                ),
                            },
                        ),
                    ],
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | @x def foo(): ...
  |    ^^^ Syntax Error: Expected newline, found 'def'
2 | @x async def foo(): ...
3 | @x class Foo: ...
  |


  |
1 | @x def foo(): ...
2 | @x async def foo(): ...
  |    ^^^^^ Syntax Error: Expected newline, found 'async'
3 | @x class Foo: ...
  |


  |
1 | @x def foo(): ...
2 | @x async def foo(): ...
3 | @x class Foo: ...
  |    ^^^^^ Syntax Error: Expected newline, found 'class'
  |
