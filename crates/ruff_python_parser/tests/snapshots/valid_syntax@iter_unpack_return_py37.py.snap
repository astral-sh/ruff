---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/inline/ok/iter_unpack_return_py37.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..93,
        body: [
            Assign(
                StmtAssign {
                    node_index: AtomicNodeIndex(..),
                    range: 43..59,
                    targets: [
                        Name(
                            ExprName {
                                node_index: AtomicNodeIndex(..),
                                range: 43..47,
                                id: Name("rest"),
                                ctx: Store,
                            },
                        ),
                    ],
                    value: Tuple(
                        ExprTuple {
                            node_index: AtomicNodeIndex(..),
                            range: 50..59,
                            elts: [
                                NumberLiteral(
                                    ExprNumberLiteral {
                                        node_index: AtomicNodeIndex(..),
                                        range: 51..52,
                                        value: Int(
                                            4,
                                        ),
                                    },
                                ),
                                NumberLiteral(
                                    ExprNumberLiteral {
                                        node_index: AtomicNodeIndex(..),
                                        range: 54..55,
                                        value: Int(
                                            5,
                                        ),
                                    },
                                ),
                                NumberLiteral(
                                    ExprNumberLiteral {
                                        node_index: AtomicNodeIndex(..),
                                        range: 57..58,
                                        value: Int(
                                            6,
                                        ),
                                    },
                                ),
                            ],
                            ctx: Load,
                            parenthesized: true,
                        },
                    ),
                },
            ),
            FunctionDef(
                StmtFunctionDef {
                    node_index: AtomicNodeIndex(..),
                    range: 60..92,
                    is_async: false,
                    decorator_list: [],
                    name: Identifier {
                        id: Name("f"),
                        range: 64..65,
                        node_index: AtomicNodeIndex(..),
                    },
                    type_params: None,
                    parameters: Parameters {
                        range: 65..67,
                        node_index: AtomicNodeIndex(
                            0,
                        ),
                        posonlyargs: [],
                        args: [],
                        vararg: None,
                        kwonlyargs: [],
                        kwarg: None,
                    },
                    returns: None,
                    body: [
                        Return(
                            StmtReturn {
                                node_index: AtomicNodeIndex(..),
                                range: 69..92,
                                value: Some(
                                    Tuple(
                                        ExprTuple {
                                            node_index: AtomicNodeIndex(..),
                                            range: 76..92,
                                            elts: [
                                                NumberLiteral(
                                                    ExprNumberLiteral {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 77..78,
                                                        value: Int(
                                                            1,
                                                        ),
                                                    },
                                                ),
                                                NumberLiteral(
                                                    ExprNumberLiteral {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 80..81,
                                                        value: Int(
                                                            2,
                                                        ),
                                                    },
                                                ),
                                                NumberLiteral(
                                                    ExprNumberLiteral {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 83..84,
                                                        value: Int(
                                                            3,
                                                        ),
                                                    },
                                                ),
                                                Starred(
                                                    ExprStarred {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 86..91,
                                                        value: Name(
                                                            ExprName {
                                                                node_index: AtomicNodeIndex(..),
                                                                range: 87..91,
                                                                id: Name("rest"),
                                                                ctx: Load,
                                                            },
                                                        ),
                                                        ctx: Load,
                                                    },
                                                ),
                                            ],
                                            ctx: Load,
                                            parenthesized: true,
                                        },
                                    ),
                                ),
                            },
                        ),
                    ],
                },
            ),
        ],
    },
)
```
