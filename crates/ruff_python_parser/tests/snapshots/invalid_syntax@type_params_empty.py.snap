---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/inline/err/type_params_empty.py
---
## AST

```
Module(
    ModModule {
        node_index: NodeIndex(None),
        range: 0..52,
        body: [
            FunctionDef(
                StmtFunctionDef {
                    node_index: NodeIndex(None),
                    range: 0..21,
                    is_async: false,
                    decorator_list: [],
                    name: Identifier {
                        id: Name("foo"),
                        range: 4..7,
                        node_index: NodeIndex(None),
                    },
                    type_params: Some(
                        TypeParams {
                            range: 7..9,
                            node_index: NodeIndex(None),
                            type_params: [],
                        },
                    ),
                    parameters: Parameters {
                        range: 9..11,
                        node_index: NodeIndex(None),
                        posonlyargs: [],
                        args: [],
                        vararg: None,
                        kwonlyargs: [],
                        kwarg: None,
                    },
                    returns: None,
                    body: [
                        Pass(
                            StmtPass {
                                node_index: NodeIndex(None),
                                range: 17..21,
                            },
                        ),
                    ],
                },
            ),
            TypeAlias(
                StmtTypeAlias {
                    node_index: NodeIndex(None),
                    range: 22..51,
                    name: Name(
                        ExprName {
                            node_index: NodeIndex(None),
                            range: 27..36,
                            id: Name("ListOrSet"),
                            ctx: Store,
                        },
                    ),
                    type_params: Some(
                        TypeParams {
                            range: 36..38,
                            node_index: NodeIndex(None),
                            type_params: [],
                        },
                    ),
                    value: BinOp(
                        ExprBinOp {
                            node_index: NodeIndex(None),
                            range: 41..51,
                            left: Name(
                                ExprName {
                                    node_index: NodeIndex(None),
                                    range: 41..45,
                                    id: Name("list"),
                                    ctx: Load,
                                },
                            ),
                            op: BitOr,
                            right: Name(
                                ExprName {
                                    node_index: NodeIndex(None),
                                    range: 48..51,
                                    id: Name("set"),
                                    ctx: Load,
                                },
                            ),
                        },
                    ),
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | def foo[]():
  |         ^ Syntax Error: Type parameter list cannot be empty
2 |     pass
3 | type ListOrSet[] = list | set
  |


  |
1 | def foo[]():
2 |     pass
3 | type ListOrSet[] = list | set
  |                ^ Syntax Error: Type parameter list cannot be empty
  |
