---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/inline/err/assign_stmt_missing_rhs.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..38,
        body: [
            Assign(
                StmtAssign {
                    node_index: AtomicNodeIndex(..),
                    range: 0..3,
                    targets: [
                        Name(
                            ExprName {
                                node_index: AtomicNodeIndex(..),
                                range: 0..1,
                                id: Name("x"),
                                ctx: Store,
                            },
                        ),
                    ],
                    value: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 3..3,
                            id: Name(""),
                            ctx: Invalid,
                        },
                    ),
                },
            ),
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 4..9,
                    value: BinOp(
                        ExprBinOp {
                            node_index: AtomicNodeIndex(..),
                            range: 4..9,
                            left: NumberLiteral(
                                ExprNumberLiteral {
                                    node_index: AtomicNodeIndex(..),
                                    range: 4..5,
                                    value: Int(
                                        1,
                                    ),
                                },
                            ),
                            op: Add,
                            right: NumberLiteral(
                                ExprNumberLiteral {
                                    node_index: AtomicNodeIndex(..),
                                    range: 8..9,
                                    value: Int(
                                        1,
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
            Assign(
                StmtAssign {
                    node_index: AtomicNodeIndex(..),
                    range: 10..17,
                    targets: [
                        Name(
                            ExprName {
                                node_index: AtomicNodeIndex(..),
                                range: 10..11,
                                id: Name("x"),
                                ctx: Store,
                            },
                        ),
                        Name(
                            ExprName {
                                node_index: AtomicNodeIndex(..),
                                range: 14..15,
                                id: Name("y"),
                                ctx: Store,
                            },
                        ),
                    ],
                    value: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 17..17,
                            id: Name(""),
                            ctx: Invalid,
                        },
                    ),
                },
            ),
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 18..23,
                    value: BinOp(
                        ExprBinOp {
                            node_index: AtomicNodeIndex(..),
                            range: 18..23,
                            left: NumberLiteral(
                                ExprNumberLiteral {
                                    node_index: AtomicNodeIndex(..),
                                    range: 18..19,
                                    value: Int(
                                        2,
                                    ),
                                },
                            ),
                            op: Add,
                            right: NumberLiteral(
                                ExprNumberLiteral {
                                    node_index: AtomicNodeIndex(..),
                                    range: 22..23,
                                    value: Int(
                                        2,
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
            Assign(
                StmtAssign {
                    node_index: AtomicNodeIndex(..),
                    range: 24..31,
                    targets: [
                        Name(
                            ExprName {
                                node_index: AtomicNodeIndex(..),
                                range: 24..25,
                                id: Name("x"),
                                ctx: Store,
                            },
                        ),
                        Name(
                            ExprName {
                                node_index: AtomicNodeIndex(..),
                                range: 27..27,
                                id: Name(""),
                                ctx: Store,
                            },
                        ),
                    ],
                    value: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 30..31,
                            id: Name("y"),
                            ctx: Load,
                        },
                    ),
                },
            ),
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 32..37,
                    value: BinOp(
                        ExprBinOp {
                            node_index: AtomicNodeIndex(..),
                            range: 32..37,
                            left: NumberLiteral(
                                ExprNumberLiteral {
                                    node_index: AtomicNodeIndex(..),
                                    range: 32..33,
                                    value: Int(
                                        3,
                                    ),
                                },
                            ),
                            op: Add,
                            right: NumberLiteral(
                                ExprNumberLiteral {
                                    node_index: AtomicNodeIndex(..),
                                    range: 36..37,
                                    value: Int(
                                        3,
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | x =
  |    ^ Syntax Error: Expected an expression
2 | 1 + 1
3 | x = y =
4 | 2 + 2
  |


  |
1 | x =
2 | 1 + 1
3 | x = y =
  |        ^ Syntax Error: Expected an expression
4 | 2 + 2
5 | x = = y
6 | 3 + 3
  |


  |
3 | x = y =
4 | 2 + 2
5 | x = = y
  |     ^ Syntax Error: Expected an expression
6 | 3 + 3
  |
