---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/inline/err/f_string_invalid_conversion_flag_other_tok.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..22,
        body: [
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 0..10,
                    value: FString(
                        ExprFString {
                            node_index: AtomicNodeIndex(..),
                            range: 0..10,
                            value: FStringValue {
                                inner: Single(
                                    FString(
                                        FString {
                                            range: 0..10,
                                            node_index: AtomicNodeIndex(..),
                                            elements: [
                                                Interpolation(
                                                    InterpolatedElement {
                                                        range: 2..9,
                                                        node_index: AtomicNodeIndex(..),
                                                        expression: Name(
                                                            ExprName {
                                                                node_index: AtomicNodeIndex(..),
                                                                range: 3..4,
                                                                id: Name("x"),
                                                                ctx: Load,
                                                            },
                                                        ),
                                                        debug_text: None,
                                                        conversion: None,
                                                        format_spec: None,
                                                    },
                                                ),
                                            ],
                                            flags: FStringFlags {
                                                quote_style: Double,
                                                prefix: Regular,
                                                triple_quoted: false,
                                            },
                                        },
                                    ),
                                ),
                            },
                        },
                    ),
                },
            ),
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 11..21,
                    value: FString(
                        ExprFString {
                            node_index: AtomicNodeIndex(..),
                            range: 11..21,
                            value: FStringValue {
                                inner: Single(
                                    FString(
                                        FString {
                                            range: 11..21,
                                            node_index: AtomicNodeIndex(..),
                                            elements: [
                                                Interpolation(
                                                    InterpolatedElement {
                                                        range: 13..20,
                                                        node_index: AtomicNodeIndex(..),
                                                        expression: Name(
                                                            ExprName {
                                                                node_index: AtomicNodeIndex(..),
                                                                range: 14..15,
                                                                id: Name("x"),
                                                                ctx: Load,
                                                            },
                                                        ),
                                                        debug_text: None,
                                                        conversion: None,
                                                        format_spec: None,
                                                    },
                                                ),
                                            ],
                                            flags: FStringFlags {
                                                quote_style: Double,
                                                prefix: Regular,
                                                triple_quoted: false,
                                            },
                                        },
                                    ),
                                ),
                            },
                        },
                    ),
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | f"{x!123}"
  |      ^^^ Syntax Error: f-string: invalid conversion character
2 | f"{x!'a'}"
  |


  |
1 | f"{x!123}"
2 | f"{x!'a'}"
  |      ^^^ Syntax Error: f-string: invalid conversion character
  |
