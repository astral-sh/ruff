---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/invalid/re_lex_logical_token.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..979,
        body: [
            If(
                StmtIf {
                    node_index: AtomicNodeIndex(..),
                    range: 48..59,
                    test: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 51..59,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 51..55,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 55..59,
                                node_index: AtomicNodeIndex(..),
                                args: [
                                    Name(
                                        ExprName {
                                            node_index: AtomicNodeIndex(..),
                                            range: 56..59,
                                            id: Name("foo"),
                                            ctx: Load,
                                        },
                                    ),
                                ],
                                keywords: [],
                            },
                        },
                    ),
                    body: [],
                    elif_else_clauses: [],
                },
            ),
            FunctionDef(
                StmtFunctionDef {
                    node_index: AtomicNodeIndex(..),
                    range: 60..79,
                    is_async: false,
                    decorator_list: [],
                    name: Identifier {
                        id: Name("bar"),
                        range: 64..67,
                        node_index: AtomicNodeIndex(..),
                    },
                    type_params: None,
                    parameters: Parameters {
                        range: 67..69,
                        node_index: AtomicNodeIndex(
                            0,
                        ),
                        posonlyargs: [],
                        args: [],
                        vararg: None,
                        kwonlyargs: [],
                        kwarg: None,
                    },
                    returns: None,
                    body: [
                        Pass(
                            StmtPass {
                                node_index: AtomicNodeIndex(..),
                                range: 75..79,
                            },
                        ),
                    ],
                },
            ),
            If(
                StmtIf {
                    node_index: AtomicNodeIndex(..),
                    range: 113..152,
                    test: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 116..124,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 116..120,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 120..124,
                                node_index: AtomicNodeIndex(..),
                                args: [
                                    Name(
                                        ExprName {
                                            node_index: AtomicNodeIndex(..),
                                            range: 121..124,
                                            id: Name("foo"),
                                            ctx: Load,
                                        },
                                    ),
                                ],
                                keywords: [],
                            },
                        },
                    ),
                    body: [
                        FunctionDef(
                            StmtFunctionDef {
                                node_index: AtomicNodeIndex(..),
                                range: 129..152,
                                is_async: false,
                                decorator_list: [],
                                name: Identifier {
                                    id: Name("bar"),
                                    range: 133..136,
                                    node_index: AtomicNodeIndex(..),
                                },
                                type_params: None,
                                parameters: Parameters {
                                    range: 136..138,
                                    node_index: AtomicNodeIndex(
                                        0,
                                    ),
                                    posonlyargs: [],
                                    args: [],
                                    vararg: None,
                                    kwonlyargs: [],
                                    kwarg: None,
                                },
                                returns: None,
                                body: [
                                    Pass(
                                        StmtPass {
                                            node_index: AtomicNodeIndex(..),
                                            range: 148..152,
                                        },
                                    ),
                                ],
                            },
                        ),
                    ],
                    elif_else_clauses: [],
                },
            ),
            If(
                StmtIf {
                    node_index: AtomicNodeIndex(..),
                    range: 228..269,
                    test: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 231..239,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 231..235,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 235..239,
                                node_index: AtomicNodeIndex(..),
                                args: [
                                    Name(
                                        ExprName {
                                            node_index: AtomicNodeIndex(..),
                                            range: 236..239,
                                            id: Name("foo"),
                                            ctx: Load,
                                        },
                                    ),
                                ],
                                keywords: [],
                            },
                        },
                    ),
                    body: [
                        FunctionDef(
                            StmtFunctionDef {
                                node_index: AtomicNodeIndex(..),
                                range: 246..269,
                                is_async: false,
                                decorator_list: [],
                                name: Identifier {
                                    id: Name("bar"),
                                    range: 250..253,
                                    node_index: AtomicNodeIndex(..),
                                },
                                type_params: None,
                                parameters: Parameters {
                                    range: 253..255,
                                    node_index: AtomicNodeIndex(
                                        0,
                                    ),
                                    posonlyargs: [],
                                    args: [],
                                    vararg: None,
                                    kwonlyargs: [],
                                    kwarg: None,
                                },
                                returns: None,
                                body: [
                                    Pass(
                                        StmtPass {
                                            node_index: AtomicNodeIndex(..),
                                            range: 265..269,
                                        },
                                    ),
                                ],
                            },
                        ),
                    ],
                    elif_else_clauses: [],
                },
            ),
            If(
                StmtIf {
                    node_index: AtomicNodeIndex(..),
                    range: 344..392,
                    test: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 347..355,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 347..351,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 351..355,
                                node_index: AtomicNodeIndex(..),
                                args: [
                                    Name(
                                        ExprName {
                                            node_index: AtomicNodeIndex(..),
                                            range: 352..355,
                                            id: Name("foo"),
                                            ctx: Load,
                                        },
                                    ),
                                ],
                                keywords: [],
                            },
                        },
                    ),
                    body: [
                        FunctionDef(
                            StmtFunctionDef {
                                node_index: AtomicNodeIndex(..),
                                range: 369..392,
                                is_async: false,
                                decorator_list: [],
                                name: Identifier {
                                    id: Name("bar"),
                                    range: 373..376,
                                    node_index: AtomicNodeIndex(..),
                                },
                                type_params: None,
                                parameters: Parameters {
                                    range: 376..378,
                                    node_index: AtomicNodeIndex(
                                        0,
                                    ),
                                    posonlyargs: [],
                                    args: [],
                                    vararg: None,
                                    kwonlyargs: [],
                                    kwarg: None,
                                },
                                returns: None,
                                body: [
                                    Pass(
                                        StmtPass {
                                            node_index: AtomicNodeIndex(..),
                                            range: 388..392,
                                        },
                                    ),
                                ],
                            },
                        ),
                    ],
                    elif_else_clauses: [],
                },
            ),
            If(
                StmtIf {
                    node_index: AtomicNodeIndex(..),
                    range: 453..499,
                    test: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 456..472,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 456..460,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 460..472,
                                node_index: AtomicNodeIndex(..),
                                args: [
                                    Name(
                                        ExprName {
                                            node_index: AtomicNodeIndex(..),
                                            range: 461..464,
                                            id: Name("foo"),
                                            ctx: Load,
                                        },
                                    ),
                                    List(
                                        ExprList {
                                            node_index: AtomicNodeIndex(..),
                                            range: 466..471,
                                            elts: [
                                                Name(
                                                    ExprName {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 467..468,
                                                        id: Name("a"),
                                                        ctx: Load,
                                                    },
                                                ),
                                                Name(
                                                    ExprName {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 470..471,
                                                        id: Name("b"),
                                                        ctx: Load,
                                                    },
                                                ),
                                            ],
                                            ctx: Load,
                                        },
                                    ),
                                ],
                                keywords: [],
                            },
                        },
                    ),
                    body: [
                        FunctionDef(
                            StmtFunctionDef {
                                node_index: AtomicNodeIndex(..),
                                range: 476..499,
                                is_async: false,
                                decorator_list: [],
                                name: Identifier {
                                    id: Name("bar"),
                                    range: 480..483,
                                    node_index: AtomicNodeIndex(..),
                                },
                                type_params: None,
                                parameters: Parameters {
                                    range: 483..485,
                                    node_index: AtomicNodeIndex(
                                        0,
                                    ),
                                    posonlyargs: [],
                                    args: [],
                                    vararg: None,
                                    kwonlyargs: [],
                                    kwarg: None,
                                },
                                returns: None,
                                body: [
                                    Pass(
                                        StmtPass {
                                            node_index: AtomicNodeIndex(..),
                                            range: 495..499,
                                        },
                                    ),
                                ],
                            },
                        ),
                    ],
                    elif_else_clauses: [],
                },
            ),
            If(
                StmtIf {
                    node_index: AtomicNodeIndex(..),
                    range: 564..611,
                    test: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 567..583,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 567..571,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 571..583,
                                node_index: AtomicNodeIndex(..),
                                args: [
                                    Name(
                                        ExprName {
                                            node_index: AtomicNodeIndex(..),
                                            range: 572..575,
                                            id: Name("foo"),
                                            ctx: Load,
                                        },
                                    ),
                                    List(
                                        ExprList {
                                            node_index: AtomicNodeIndex(..),
                                            range: 577..582,
                                            elts: [
                                                Name(
                                                    ExprName {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 578..579,
                                                        id: Name("a"),
                                                        ctx: Load,
                                                    },
                                                ),
                                                Name(
                                                    ExprName {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 581..582,
                                                        id: Name("b"),
                                                        ctx: Load,
                                                    },
                                                ),
                                            ],
                                            ctx: Load,
                                        },
                                    ),
                                ],
                                keywords: [],
                            },
                        },
                    ),
                    body: [
                        FunctionDef(
                            StmtFunctionDef {
                                node_index: AtomicNodeIndex(..),
                                range: 588..611,
                                is_async: false,
                                decorator_list: [],
                                name: Identifier {
                                    id: Name("bar"),
                                    range: 592..595,
                                    node_index: AtomicNodeIndex(..),
                                },
                                type_params: None,
                                parameters: Parameters {
                                    range: 595..597,
                                    node_index: AtomicNodeIndex(
                                        0,
                                    ),
                                    posonlyargs: [],
                                    args: [],
                                    vararg: None,
                                    kwonlyargs: [],
                                    kwarg: None,
                                },
                                returns: None,
                                body: [
                                    Pass(
                                        StmtPass {
                                            node_index: AtomicNodeIndex(..),
                                            range: 607..611,
                                        },
                                    ),
                                ],
                            },
                        ),
                    ],
                    elif_else_clauses: [],
                },
            ),
            If(
                StmtIf {
                    node_index: AtomicNodeIndex(..),
                    range: 772..824,
                    test: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 775..796,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 775..779,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 779..796,
                                node_index: AtomicNodeIndex(..),
                                args: [
                                    Name(
                                        ExprName {
                                            node_index: AtomicNodeIndex(..),
                                            range: 780..783,
                                            id: Name("foo"),
                                            ctx: Load,
                                        },
                                    ),
                                    List(
                                        ExprList {
                                            node_index: AtomicNodeIndex(..),
                                            range: 785..794,
                                            elts: [
                                                Name(
                                                    ExprName {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 786..787,
                                                        id: Name("a"),
                                                        ctx: Load,
                                                    },
                                                ),
                                                Name(
                                                    ExprName {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 793..794,
                                                        id: Name("b"),
                                                        ctx: Load,
                                                    },
                                                ),
                                            ],
                                            ctx: Load,
                                        },
                                    ),
                                ],
                                keywords: [],
                            },
                        },
                    ),
                    body: [
                        FunctionDef(
                            StmtFunctionDef {
                                node_index: AtomicNodeIndex(..),
                                range: 801..824,
                                is_async: false,
                                decorator_list: [],
                                name: Identifier {
                                    id: Name("bar"),
                                    range: 805..808,
                                    node_index: AtomicNodeIndex(..),
                                },
                                type_params: None,
                                parameters: Parameters {
                                    range: 808..810,
                                    node_index: AtomicNodeIndex(
                                        0,
                                    ),
                                    posonlyargs: [],
                                    args: [],
                                    vararg: None,
                                    kwonlyargs: [],
                                    kwarg: None,
                                },
                                returns: None,
                                body: [
                                    Pass(
                                        StmtPass {
                                            node_index: AtomicNodeIndex(..),
                                            range: 820..824,
                                        },
                                    ),
                                ],
                            },
                        ),
                    ],
                    elif_else_clauses: [],
                },
            ),
            If(
                StmtIf {
                    node_index: AtomicNodeIndex(..),
                    range: 887..933,
                    test: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 890..905,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 890..894,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 894..905,
                                node_index: AtomicNodeIndex(..),
                                args: [
                                    FString(
                                        ExprFString {
                                            node_index: AtomicNodeIndex(..),
                                            range: 895..905,
                                            value: FStringValue {
                                                inner: Single(
                                                    FString(
                                                        FString {
                                                            range: 895..905,
                                                            node_index: AtomicNodeIndex(..),
                                                            elements: [
                                                                Literal(
                                                                    InterpolatedStringLiteralElement {
                                                                        range: 897..903,
                                                                        node_index: AtomicNodeIndex(..),
                                                                        value: "hello ",
                                                                    },
                                                                ),
                                                                Interpolation(
                                                                    InterpolatedElement {
                                                                        range: 903..905,
                                                                        node_index: AtomicNodeIndex(..),
                                                                        expression: Name(
                                                                            ExprName {
                                                                                node_index: AtomicNodeIndex(..),
                                                                                range: 904..905,
                                                                                id: Name("x"),
                                                                                ctx: Load,
                                                                            },
                                                                        ),
                                                                        debug_text: None,
                                                                        conversion: None,
                                                                        format_spec: None,
                                                                    },
                                                                ),
                                                            ],
                                                            flags: FStringFlags {
                                                                quote_style: Double,
                                                                prefix: Regular,
                                                                triple_quoted: false,
                                                            },
                                                        },
                                                    ),
                                                ),
                                            },
                                        },
                                    ),
                                ],
                                keywords: [],
                            },
                        },
                    ),
                    body: [
                        FunctionDef(
                            StmtFunctionDef {
                                node_index: AtomicNodeIndex(..),
                                range: 910..933,
                                is_async: false,
                                decorator_list: [],
                                name: Identifier {
                                    id: Name("bar"),
                                    range: 914..917,
                                    node_index: AtomicNodeIndex(..),
                                },
                                type_params: None,
                                parameters: Parameters {
                                    range: 917..919,
                                    node_index: AtomicNodeIndex(
                                        0,
                                    ),
                                    posonlyargs: [],
                                    args: [],
                                    vararg: None,
                                    kwonlyargs: [],
                                    kwarg: None,
                                },
                                returns: None,
                                body: [
                                    Pass(
                                        StmtPass {
                                            node_index: AtomicNodeIndex(..),
                                            range: 929..933,
                                        },
                                    ),
                                ],
                            },
                        ),
                    ],
                    elif_else_clauses: [],
                },
            ),
            If(
                StmtIf {
                    node_index: AtomicNodeIndex(..),
                    range: 936..956,
                    test: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 939..956,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 939..943,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 943..956,
                                node_index: AtomicNodeIndex(..),
                                args: [
                                    FString(
                                        ExprFString {
                                            node_index: AtomicNodeIndex(..),
                                            range: 944..951,
                                            value: FStringValue {
                                                inner: Single(
                                                    FString(
                                                        FString {
                                                            range: 944..951,
                                                            node_index: AtomicNodeIndex(..),
                                                            elements: [],
                                                            flags: FStringFlags {
                                                                quote_style: Double,
                                                                prefix: Regular,
                                                                triple_quoted: false,
                                                            },
                                                        },
                                                    ),
                                                ),
                                            },
                                        },
                                    ),
                                ],
                                keywords: [],
                            },
                        },
                    ),
                    body: [],
                    elif_else_clauses: [],
                },
            ),
            FunctionDef(
                StmtFunctionDef {
                    node_index: AtomicNodeIndex(..),
                    range: 956..979,
                    is_async: false,
                    decorator_list: [],
                    name: Identifier {
                        id: Name("bar"),
                        range: 960..963,
                        node_index: AtomicNodeIndex(..),
                    },
                    type_params: None,
                    parameters: Parameters {
                        range: 963..965,
                        node_index: AtomicNodeIndex(
                            0,
                        ),
                        posonlyargs: [],
                        args: [],
                        vararg: None,
                        kwonlyargs: [],
                        kwarg: None,
                    },
                    returns: None,
                    body: [
                        Pass(
                            StmtPass {
                                node_index: AtomicNodeIndex(..),
                                range: 975..979,
                            },
                        ),
                    ],
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | # No indentation before the function definition
2 | if call(foo
  |            ^ Syntax Error: Expected ')', found newline
3 | def bar():
4 |     pass
  |


  |
1 | # No indentation before the function definition
2 | if call(foo
3 | def bar():
  | ^^^ Syntax Error: Expected an indented block after `if` statement
4 |     pass
  |


   |
 7 | # Indented function definition
 8 | if call(foo
   |            ^ Syntax Error: Expected ')', found newline
 9 |     def bar():
10 |         pass
   |


   |
13 | # There are multiple non-logical newlines (blank lines) in the `if` body
14 | if call(foo
   |            ^ Syntax Error: Expected ')', found newline
15 |
16 |
17 |     def bar():
   |


   |
21 | # There are trailing whitespaces in the blank line inside the `if` body
22 | if call(foo
   |            ^ Syntax Error: Expected ')', found newline
23 |         
24 |     def bar():
25 |         pass
   |


   |
28 | # The lexer is nested with multiple levels of parentheses
29 | if call(foo, [a, b
   |                   ^ Syntax Error: Expected ']', found NonLogicalNewline
30 |     def bar():
31 |         pass
   |


   |
34 | # The outer parenthesis is closed but the inner bracket isn't
35 | if call(foo, [a, b)
   |                   ^ Syntax Error: Expected ']', found ')'
36 |     def bar():
37 |         pass
   |


   |
34 | # The outer parenthesis is closed but the inner bracket isn't
35 | if call(foo, [a, b)
   |                    ^ Syntax Error: Expected ':', found newline
36 |     def bar():
37 |         pass
   |


   |
41 | # test is to make sure it emits a `NonLogicalNewline` token after `b`.
42 | if call(foo, [a,
43 |     b
   |      ^ Syntax Error: Expected ']', found NonLogicalNewline
44 | )
45 |     def bar():
46 |         pass
   |


   |
42 | if call(foo, [a,
43 |     b
44 | )
   |  ^ Syntax Error: Expected ':', found newline
45 |     def bar():
46 |         pass
   |


   |
49 | # F-strings uses normal list parsing, so test those as well
50 | if call(f"hello {x
   |                   ^ Syntax Error: f-string: unterminated string
51 |     def bar():
52 |         pass
   |


   |
49 | # F-strings uses normal list parsing, so test those as well
50 | if call(f"hello {x
51 |     def bar():
   |     ^^^ Syntax Error: f-string: expecting '}'
52 |         pass
   |


   |
49 | # F-strings uses normal list parsing, so test those as well
50 | if call(f"hello {x
   |                   ^ Syntax Error: Expected FStringEnd, found Unknown
51 |     def bar():
52 |         pass
   |


   |
55 | if call(f"hello
   |           ^^^^^ Syntax Error: f-string: unterminated string
56 |     def bar():
57 |         pass
   |


   |
55 | if call(f"hello
   |                ^ Syntax Error: Expected FStringEnd, found newline
56 |     def bar():
57 |         pass
   |


   |
55 | if call(f"hello
56 |     def bar():
   | ^^^^ Syntax Error: Expected ',', found indent
57 |         pass
   |


   |
55 | if call(f"hello
56 |     def bar():
   |     ^^^ Syntax Error: Expected ')', found 'def'
57 |         pass
   |


   |
55 | if call(f"hello
56 |     def bar():
57 |         pass
   |             ^ Syntax Error: Expected a statement
   |
