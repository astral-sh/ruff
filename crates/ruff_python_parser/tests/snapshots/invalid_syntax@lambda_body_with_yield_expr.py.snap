---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/inline/err/lambda_body_with_yield_expr.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..41,
        body: [
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 0..17,
                    value: Lambda(
                        ExprLambda {
                            node_index: AtomicNodeIndex(..),
                            range: 0..17,
                            parameters: Some(
                                Parameters {
                                    range: 7..8,
                                    node_index: AtomicNodeIndex(
                                        0,
                                    ),
                                    posonlyargs: [],
                                    args: [
                                        ParameterWithDefault {
                                            range: 7..8,
                                            node_index: AtomicNodeIndex(..),
                                            parameter: Parameter {
                                                range: 7..8,
                                                node_index: AtomicNodeIndex(..),
                                                name: Identifier {
                                                    id: Name("x"),
                                                    range: 7..8,
                                                    node_index: AtomicNodeIndex(..),
                                                },
                                                annotation: None,
                                            },
                                            default: None,
                                        },
                                    ],
                                    vararg: None,
                                    kwonlyargs: [],
                                    kwarg: None,
                                },
                            ),
                            body: Yield(
                                ExprYield {
                                    node_index: AtomicNodeIndex(..),
                                    range: 10..17,
                                    value: Some(
                                        Name(
                                            ExprName {
                                                node_index: AtomicNodeIndex(..),
                                                range: 16..17,
                                                id: Name("y"),
                                                ctx: Load,
                                            },
                                        ),
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 18..40,
                    value: Lambda(
                        ExprLambda {
                            node_index: AtomicNodeIndex(..),
                            range: 18..40,
                            parameters: Some(
                                Parameters {
                                    range: 25..26,
                                    node_index: AtomicNodeIndex(
                                        0,
                                    ),
                                    posonlyargs: [],
                                    args: [
                                        ParameterWithDefault {
                                            range: 25..26,
                                            node_index: AtomicNodeIndex(..),
                                            parameter: Parameter {
                                                range: 25..26,
                                                node_index: AtomicNodeIndex(..),
                                                name: Identifier {
                                                    id: Name("x"),
                                                    range: 25..26,
                                                    node_index: AtomicNodeIndex(..),
                                                },
                                                annotation: None,
                                            },
                                            default: None,
                                        },
                                    ],
                                    vararg: None,
                                    kwonlyargs: [],
                                    kwarg: None,
                                },
                            ),
                            body: YieldFrom(
                                ExprYieldFrom {
                                    node_index: AtomicNodeIndex(..),
                                    range: 28..40,
                                    value: Name(
                                        ExprName {
                                            node_index: AtomicNodeIndex(..),
                                            range: 39..40,
                                            id: Name("y"),
                                            ctx: Load,
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | lambda x: yield y
  |           ^^^^^^^ Syntax Error: Yield expression cannot be used here
2 | lambda x: yield from y
  |


  |
1 | lambda x: yield y
2 | lambda x: yield from y
  |           ^^^^^^^^^^^^ Syntax Error: Yield expression cannot be used here
  |
