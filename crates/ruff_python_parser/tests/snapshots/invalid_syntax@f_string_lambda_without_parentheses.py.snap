---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/inline/err/f_string_lambda_without_parentheses.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..17,
        body: [
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 0..16,
                    value: FString(
                        ExprFString {
                            node_index: AtomicNodeIndex(..),
                            range: 0..16,
                            value: FStringValue {
                                inner: Single(
                                    FString(
                                        FString {
                                            range: 0..16,
                                            node_index: AtomicNodeIndex(..),
                                            elements: [
                                                Interpolation(
                                                    InterpolatedElement {
                                                        range: 2..12,
                                                        node_index: AtomicNodeIndex(..),
                                                        expression: Lambda(
                                                            ExprLambda {
                                                                node_index: AtomicNodeIndex(..),
                                                                range: 3..12,
                                                                parameters: Some(
                                                                    Parameters {
                                                                        range: 10..11,
                                                                        node_index: AtomicNodeIndex(
                                                                            0,
                                                                        ),
                                                                        posonlyargs: [],
                                                                        args: [
                                                                            ParameterWithDefault {
                                                                                range: 10..11,
                                                                                node_index: AtomicNodeIndex(..),
                                                                                parameter: Parameter {
                                                                                    range: 10..11,
                                                                                    node_index: AtomicNodeIndex(..),
                                                                                    name: Identifier {
                                                                                        id: Name("x"),
                                                                                        range: 10..11,
                                                                                        node_index: AtomicNodeIndex(..),
                                                                                    },
                                                                                    annotation: None,
                                                                                },
                                                                                default: None,
                                                                            },
                                                                        ],
                                                                        vararg: None,
                                                                        kwonlyargs: [],
                                                                        kwarg: None,
                                                                    },
                                                                ),
                                                                body: Name(
                                                                    ExprName {
                                                                        node_index: AtomicNodeIndex(..),
                                                                        range: 12..12,
                                                                        id: Name(""),
                                                                        ctx: Invalid,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        debug_text: None,
                                                        conversion: None,
                                                        format_spec: None,
                                                    },
                                                ),
                                                Literal(
                                                    InterpolatedStringLiteralElement {
                                                        range: 12..14,
                                                        node_index: AtomicNodeIndex(..),
                                                        value: " x",
                                                    },
                                                ),
                                            ],
                                            flags: FStringFlags {
                                                quote_style: Double,
                                                prefix: Regular,
                                                triple_quoted: false,
                                            },
                                        },
                                    ),
                                ),
                            },
                        },
                    ),
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | f"{lambda x: x}"
  |             ^^ Syntax Error: Expected an expression
  |


  |
1 | f"{lambda x: x}"
  |    ^^^^^^^^^ Syntax Error: f-string: lambda expressions are not allowed without parentheses
  |


  |
1 | f"{lambda x: x}"
  |             ^^ Syntax Error: f-string: expecting '}'
  |


  |
1 | f"{lambda x: x}"
  |               ^ Syntax Error: Expected an element of or the end of the f-string
  |
