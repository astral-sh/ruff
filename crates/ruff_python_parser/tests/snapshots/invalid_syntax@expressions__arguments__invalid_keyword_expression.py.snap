---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/invalid/expressions/arguments/invalid_keyword_expression.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..69,
        body: [
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 0..17,
                    value: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 0..17,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 0..4,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 4..17,
                                node_index: AtomicNodeIndex(..),
                                args: [],
                                keywords: [
                                    Keyword {
                                        range: 5..16,
                                        node_index: AtomicNodeIndex(..),
                                        arg: Some(
                                            Identifier {
                                                id: Name("x"),
                                                range: 5..6,
                                                node_index: AtomicNodeIndex(..),
                                            },
                                        ),
                                        value: Yield(
                                            ExprYield {
                                                node_index: AtomicNodeIndex(..),
                                                range: 9..16,
                                                value: Some(
                                                    Name(
                                                        ExprName {
                                                            node_index: AtomicNodeIndex(..),
                                                            range: 15..16,
                                                            id: Name("y"),
                                                            ctx: Load,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                ],
                            },
                        },
                    ),
                },
            ),
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 18..40,
                    value: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 18..40,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 18..22,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 22..40,
                                node_index: AtomicNodeIndex(..),
                                args: [],
                                keywords: [
                                    Keyword {
                                        range: 23..39,
                                        node_index: AtomicNodeIndex(..),
                                        arg: Some(
                                            Identifier {
                                                id: Name("x"),
                                                range: 23..24,
                                                node_index: AtomicNodeIndex(..),
                                            },
                                        ),
                                        value: YieldFrom(
                                            ExprYieldFrom {
                                                node_index: AtomicNodeIndex(..),
                                                range: 27..39,
                                                value: Name(
                                                    ExprName {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 38..39,
                                                        id: Name("y"),
                                                        ctx: Load,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ],
                            },
                        },
                    ),
                },
            ),
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 41..53,
                    value: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 41..53,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 41..45,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 45..53,
                                node_index: AtomicNodeIndex(..),
                                args: [],
                                keywords: [
                                    Keyword {
                                        range: 46..52,
                                        node_index: AtomicNodeIndex(..),
                                        arg: Some(
                                            Identifier {
                                                id: Name("x"),
                                                range: 46..47,
                                                node_index: AtomicNodeIndex(..),
                                            },
                                        ),
                                        value: Starred(
                                            ExprStarred {
                                                node_index: AtomicNodeIndex(..),
                                                range: 50..52,
                                                value: Name(
                                                    ExprName {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 51..52,
                                                        id: Name("y"),
                                                        ctx: Load,
                                                    },
                                                ),
                                                ctx: Load,
                                            },
                                        ),
                                    },
                                ],
                            },
                        },
                    ),
                },
            ),
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 54..68,
                    value: Call(
                        ExprCall {
                            node_index: AtomicNodeIndex(..),
                            range: 54..68,
                            func: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 54..58,
                                    id: Name("call"),
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 58..68,
                                node_index: AtomicNodeIndex(..),
                                args: [],
                                keywords: [
                                    Keyword {
                                        range: 59..67,
                                        node_index: AtomicNodeIndex(..),
                                        arg: Some(
                                            Identifier {
                                                id: Name("x"),
                                                range: 59..60,
                                                node_index: AtomicNodeIndex(..),
                                            },
                                        ),
                                        value: Starred(
                                            ExprStarred {
                                                node_index: AtomicNodeIndex(..),
                                                range: 64..66,
                                                value: Name(
                                                    ExprName {
                                                        node_index: AtomicNodeIndex(..),
                                                        range: 65..66,
                                                        id: Name("y"),
                                                        ctx: Load,
                                                    },
                                                ),
                                                ctx: Load,
                                            },
                                        ),
                                    },
                                ],
                            },
                        },
                    ),
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | call(x = yield y)
  |          ^^^^^^^ Syntax Error: Yield expression cannot be used here
2 | call(x = yield from y)
3 | call(x = *y)
  |


  |
1 | call(x = yield y)
2 | call(x = yield from y)
  |          ^^^^^^^^^^^^ Syntax Error: Yield expression cannot be used here
3 | call(x = *y)
4 | call(x = (*y))
  |


  |
1 | call(x = yield y)
2 | call(x = yield from y)
3 | call(x = *y)
  |          ^^ Syntax Error: Starred expression cannot be used here
4 | call(x = (*y))
  |


  |
2 | call(x = yield from y)
3 | call(x = *y)
4 | call(x = (*y))
  |           ^^ Syntax Error: Starred expression cannot be used here
  |
