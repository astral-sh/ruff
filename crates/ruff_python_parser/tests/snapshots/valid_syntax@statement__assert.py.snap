---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/valid/statement/assert.py
---
## AST

```
Module(
    ModModule {
        range: 0..59,
        body: [
            Assert(
                StmtAssert {
                    range: 0..12,
                    test: Compare(
                        ExprCompare {
                            range: 7..12,
                            left: NumberLiteral(
                                ExprNumberLiteral {
                                    range: 7..8,
                                    value: Int(
                                        1,
                                    ),
                                },
                            ),
                            ops: [
                                Lt,
                            ],
                            comparators: [
                                NumberLiteral(
                                    ExprNumberLiteral {
                                        range: 11..12,
                                        value: Int(
                                            2,
                                        ),
                                    },
                                ),
                            ],
                        },
                    ),
                    msg: None,
                },
            ),
            Assert(
                StmtAssert {
                    range: 13..26,
                    test: Call(
                        ExprCall {
                            range: 20..26,
                            func: Name(
                                ExprName {
                                    range: 20..24,
                                    id: "call",
                                    ctx: Load,
                                },
                            ),
                            arguments: Arguments {
                                range: 24..26,
                                args: [],
                                keywords: [],
                            },
                        },
                    ),
                    msg: None,
                },
            ),
            Assert(
                StmtAssert {
                    range: 27..41,
                    test: BoolOp(
                        ExprBoolOp {
                            range: 34..41,
                            op: And,
                            values: [
                                Name(
                                    ExprName {
                                        range: 34..35,
                                        id: "a",
                                        ctx: Load,
                                    },
                                ),
                                Name(
                                    ExprName {
                                        range: 40..41,
                                        id: "b",
                                        ctx: Load,
                                    },
                                ),
                            ],
                        },
                    ),
                    msg: None,
                },
            ),
            Assert(
                StmtAssert {
                    range: 42..59,
                    test: Name(
                        ExprName {
                            range: 49..50,
                            id: "x",
                            ctx: Load,
                        },
                    ),
                    msg: Some(
                        StringLiteral(
                            ExprStringLiteral {
                                range: 52..59,
                                value: StringLiteralValue {
                                    inner: Single(
                                        StringLiteral {
                                            range: 52..59,
                                            value: "error",
                                            flags: StringLiteralFlags {
                                                quote_style: Double,
                                                prefix: Empty,
                                                triple_quoted: false,
                                            },
                                        },
                                    ),
                                },
                            },
                        ),
                    ),
                },
            ),
        ],
    },
)
```
