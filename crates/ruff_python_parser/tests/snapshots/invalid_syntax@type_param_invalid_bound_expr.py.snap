---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/inline/err/type_param_invalid_bound_expr.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..103,
        body: [
            TypeAlias(
                StmtTypeAlias {
                    node_index: AtomicNodeIndex(..),
                    range: 0..21,
                    name: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 5..6,
                            id: Name("X"),
                            ctx: Store,
                        },
                    ),
                    type_params: Some(
                        TypeParams {
                            range: 6..15,
                            node_index: AtomicNodeIndex(..),
                            type_params: [
                                TypeVar(
                                    TypeParamTypeVar {
                                        range: 7..14,
                                        node_index: AtomicNodeIndex(..),
                                        name: Identifier {
                                            id: Name("T"),
                                            range: 7..8,
                                            node_index: AtomicNodeIndex(..),
                                        },
                                        bound: Some(
                                            Starred(
                                                ExprStarred {
                                                    node_index: AtomicNodeIndex(..),
                                                    range: 10..14,
                                                    value: Name(
                                                        ExprName {
                                                            node_index: AtomicNodeIndex(..),
                                                            range: 11..14,
                                                            id: Name("int"),
                                                            ctx: Load,
                                                        },
                                                    ),
                                                    ctx: Load,
                                                },
                                            ),
                                        ),
                                        default: None,
                                    },
                                ),
                            ],
                        },
                    ),
                    value: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 18..21,
                            id: Name("int"),
                            ctx: Load,
                        },
                    ),
                },
            ),
            TypeAlias(
                StmtTypeAlias {
                    node_index: AtomicNodeIndex(..),
                    range: 22..46,
                    name: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 27..28,
                            id: Name("X"),
                            ctx: Store,
                        },
                    ),
                    type_params: Some(
                        TypeParams {
                            range: 28..40,
                            node_index: AtomicNodeIndex(..),
                            type_params: [
                                TypeVar(
                                    TypeParamTypeVar {
                                        range: 29..39,
                                        node_index: AtomicNodeIndex(..),
                                        name: Identifier {
                                            id: Name("T"),
                                            range: 29..30,
                                            node_index: AtomicNodeIndex(..),
                                        },
                                        bound: Some(
                                            Yield(
                                                ExprYield {
                                                    node_index: AtomicNodeIndex(..),
                                                    range: 32..39,
                                                    value: Some(
                                                        Name(
                                                            ExprName {
                                                                node_index: AtomicNodeIndex(..),
                                                                range: 38..39,
                                                                id: Name("x"),
                                                                ctx: Load,
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        default: None,
                                    },
                                ),
                            ],
                        },
                    ),
                    value: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 43..46,
                            id: Name("int"),
                            ctx: Load,
                        },
                    ),
                },
            ),
            TypeAlias(
                StmtTypeAlias {
                    node_index: AtomicNodeIndex(..),
                    range: 47..76,
                    name: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 52..53,
                            id: Name("X"),
                            ctx: Store,
                        },
                    ),
                    type_params: Some(
                        TypeParams {
                            range: 53..70,
                            node_index: AtomicNodeIndex(..),
                            type_params: [
                                TypeVar(
                                    TypeParamTypeVar {
                                        range: 54..69,
                                        node_index: AtomicNodeIndex(..),
                                        name: Identifier {
                                            id: Name("T"),
                                            range: 54..55,
                                            node_index: AtomicNodeIndex(..),
                                        },
                                        bound: Some(
                                            YieldFrom(
                                                ExprYieldFrom {
                                                    node_index: AtomicNodeIndex(..),
                                                    range: 57..69,
                                                    value: Name(
                                                        ExprName {
                                                            node_index: AtomicNodeIndex(..),
                                                            range: 68..69,
                                                            id: Name("x"),
                                                            ctx: Load,
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        default: None,
                                    },
                                ),
                            ],
                        },
                    ),
                    value: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 73..76,
                            id: Name("int"),
                            ctx: Load,
                        },
                    ),
                },
            ),
            TypeAlias(
                StmtTypeAlias {
                    node_index: AtomicNodeIndex(..),
                    range: 77..102,
                    name: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 82..83,
                            id: Name("X"),
                            ctx: Store,
                        },
                    ),
                    type_params: Some(
                        TypeParams {
                            range: 83..96,
                            node_index: AtomicNodeIndex(..),
                            type_params: [
                                TypeVar(
                                    TypeParamTypeVar {
                                        range: 84..88,
                                        node_index: AtomicNodeIndex(..),
                                        name: Identifier {
                                            id: Name("T"),
                                            range: 84..85,
                                            node_index: AtomicNodeIndex(..),
                                        },
                                        bound: Some(
                                            Name(
                                                ExprName {
                                                    node_index: AtomicNodeIndex(..),
                                                    range: 87..88,
                                                    id: Name("x"),
                                                    ctx: Load,
                                                },
                                            ),
                                        ),
                                        default: None,
                                    },
                                ),
                                TypeVar(
                                    TypeParamTypeVar {
                                        range: 92..95,
                                        node_index: AtomicNodeIndex(..),
                                        name: Identifier {
                                            id: Name("int"),
                                            range: 92..95,
                                            node_index: AtomicNodeIndex(..),
                                        },
                                        bound: None,
                                        default: None,
                                    },
                                ),
                            ],
                        },
                    ),
                    value: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 99..102,
                            id: Name("int"),
                            ctx: Load,
                        },
                    ),
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | type X[T: *int] = int
  |           ^^^^ Syntax Error: Starred expression cannot be used here
2 | type X[T: yield x] = int
3 | type X[T: yield from x] = int
  |


  |
1 | type X[T: *int] = int
2 | type X[T: yield x] = int
  |           ^^^^^^^ Syntax Error: Yield expression cannot be used here
3 | type X[T: yield from x] = int
4 | type X[T: x := int] = int
  |


  |
1 | type X[T: *int] = int
2 | type X[T: yield x] = int
3 | type X[T: yield from x] = int
  |           ^^^^^^^^^^^^ Syntax Error: Yield expression cannot be used here
4 | type X[T: x := int] = int
  |


  |
2 | type X[T: yield x] = int
3 | type X[T: yield from x] = int
4 | type X[T: x := int] = int
  |             ^^ Syntax Error: Expected ',', found ':='
  |


## Semantic Syntax Errors

  |
1 | type X[T: *int] = int
2 | type X[T: yield x] = int
  |           ^^^^^^^ Syntax Error: yield expression cannot be used within a TypeVar bound
3 | type X[T: yield from x] = int
4 | type X[T: x := int] = int
  |


  |
1 | type X[T: *int] = int
2 | type X[T: yield x] = int
3 | type X[T: yield from x] = int
  |           ^^^^^^^^^^^^ Syntax Error: yield expression cannot be used within a TypeVar bound
4 | type X[T: x := int] = int
  |
