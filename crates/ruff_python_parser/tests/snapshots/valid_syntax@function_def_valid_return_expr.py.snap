---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/inline/ok/function_def_valid_return_expr.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..97,
        body: [
            FunctionDef(
                StmtFunctionDef {
                    node_index: AtomicNodeIndex(..),
                    range: 0..27,
                    is_async: false,
                    decorator_list: [],
                    name: Identifier {
                        id: Name("foo"),
                        range: 4..7,
                        node_index: AtomicNodeIndex(..),
                    },
                    type_params: None,
                    parameters: Parameters {
                        range: 7..9,
                        node_index: AtomicNodeIndex(
                            0,
                        ),
                        posonlyargs: [],
                        args: [],
                        vararg: None,
                        kwonlyargs: [],
                        kwarg: None,
                    },
                    returns: Some(
                        BinOp(
                            ExprBinOp {
                                node_index: AtomicNodeIndex(..),
                                range: 13..22,
                                left: Name(
                                    ExprName {
                                        node_index: AtomicNodeIndex(..),
                                        range: 13..16,
                                        id: Name("int"),
                                        ctx: Load,
                                    },
                                ),
                                op: BitOr,
                                right: Name(
                                    ExprName {
                                        node_index: AtomicNodeIndex(..),
                                        range: 19..22,
                                        id: Name("str"),
                                        ctx: Load,
                                    },
                                ),
                            },
                        ),
                    ),
                    body: [
                        Expr(
                            StmtExpr {
                                node_index: AtomicNodeIndex(..),
                                range: 24..27,
                                value: EllipsisLiteral(
                                    ExprEllipsisLiteral {
                                        node_index: AtomicNodeIndex(..),
                                        range: 24..27,
                                    },
                                ),
                            },
                        ),
                    ],
                },
            ),
            FunctionDef(
                StmtFunctionDef {
                    node_index: AtomicNodeIndex(..),
                    range: 28..57,
                    is_async: false,
                    decorator_list: [],
                    name: Identifier {
                        id: Name("foo"),
                        range: 32..35,
                        node_index: AtomicNodeIndex(..),
                    },
                    type_params: None,
                    parameters: Parameters {
                        range: 35..37,
                        node_index: AtomicNodeIndex(
                            0,
                        ),
                        posonlyargs: [],
                        args: [],
                        vararg: None,
                        kwonlyargs: [],
                        kwarg: None,
                    },
                    returns: Some(
                        Lambda(
                            ExprLambda {
                                node_index: AtomicNodeIndex(..),
                                range: 41..52,
                                parameters: Some(
                                    Parameters {
                                        range: 48..49,
                                        node_index: AtomicNodeIndex(
                                            0,
                                        ),
                                        posonlyargs: [],
                                        args: [
                                            ParameterWithDefault {
                                                range: 48..49,
                                                node_index: AtomicNodeIndex(..),
                                                parameter: Parameter {
                                                    range: 48..49,
                                                    node_index: AtomicNodeIndex(..),
                                                    name: Identifier {
                                                        id: Name("x"),
                                                        range: 48..49,
                                                        node_index: AtomicNodeIndex(..),
                                                    },
                                                    annotation: None,
                                                },
                                                default: None,
                                            },
                                        ],
                                        vararg: None,
                                        kwonlyargs: [],
                                        kwarg: None,
                                    },
                                ),
                                body: Name(
                                    ExprName {
                                        node_index: AtomicNodeIndex(..),
                                        range: 51..52,
                                        id: Name("x"),
                                        ctx: Load,
                                    },
                                ),
                            },
                        ),
                    ),
                    body: [
                        Expr(
                            StmtExpr {
                                node_index: AtomicNodeIndex(..),
                                range: 54..57,
                                value: EllipsisLiteral(
                                    ExprEllipsisLiteral {
                                        node_index: AtomicNodeIndex(..),
                                        range: 54..57,
                                    },
                                ),
                            },
                        ),
                    ],
                },
            ),
            FunctionDef(
                StmtFunctionDef {
                    node_index: AtomicNodeIndex(..),
                    range: 58..96,
                    is_async: false,
                    decorator_list: [],
                    name: Identifier {
                        id: Name("foo"),
                        range: 62..65,
                        node_index: AtomicNodeIndex(..),
                    },
                    type_params: None,
                    parameters: Parameters {
                        range: 65..67,
                        node_index: AtomicNodeIndex(
                            0,
                        ),
                        posonlyargs: [],
                        args: [],
                        vararg: None,
                        kwonlyargs: [],
                        kwarg: None,
                    },
                    returns: Some(
                        If(
                            ExprIf {
                                node_index: AtomicNodeIndex(..),
                                range: 71..91,
                                test: BooleanLiteral(
                                    ExprBooleanLiteral {
                                        node_index: AtomicNodeIndex(..),
                                        range: 78..82,
                                        value: true,
                                    },
                                ),
                                body: Name(
                                    ExprName {
                                        node_index: AtomicNodeIndex(..),
                                        range: 71..74,
                                        id: Name("int"),
                                        ctx: Load,
                                    },
                                ),
                                orelse: Name(
                                    ExprName {
                                        node_index: AtomicNodeIndex(..),
                                        range: 88..91,
                                        id: Name("str"),
                                        ctx: Load,
                                    },
                                ),
                            },
                        ),
                    ),
                    body: [
                        Expr(
                            StmtExpr {
                                node_index: AtomicNodeIndex(..),
                                range: 93..96,
                                value: EllipsisLiteral(
                                    ExprEllipsisLiteral {
                                        node_index: AtomicNodeIndex(..),
                                        range: 93..96,
                                    },
                                ),
                            },
                        ),
                    ],
                },
            ),
        ],
    },
)
```
