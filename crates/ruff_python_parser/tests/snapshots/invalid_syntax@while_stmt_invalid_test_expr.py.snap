---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/inline/err/while_stmt_invalid_test_expr.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..70,
        body: [
            While(
                StmtWhile {
                    node_index: AtomicNodeIndex(..),
                    range: 0..13,
                    test: Starred(
                        ExprStarred {
                            node_index: AtomicNodeIndex(..),
                            range: 6..8,
                            value: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 7..8,
                                    id: Name("x"),
                                    ctx: Load,
                                },
                            ),
                            ctx: Load,
                        },
                    ),
                    body: [
                        Expr(
                            StmtExpr {
                                node_index: AtomicNodeIndex(..),
                                range: 10..13,
                                value: EllipsisLiteral(
                                    ExprEllipsisLiteral {
                                        node_index: AtomicNodeIndex(..),
                                        range: 10..13,
                                    },
                                ),
                            },
                        ),
                    ],
                    orelse: [],
                },
            ),
            While(
                StmtWhile {
                    node_index: AtomicNodeIndex(..),
                    range: 14..32,
                    test: Yield(
                        ExprYield {
                            node_index: AtomicNodeIndex(..),
                            range: 20..27,
                            value: Some(
                                Name(
                                    ExprName {
                                        node_index: AtomicNodeIndex(..),
                                        range: 26..27,
                                        id: Name("x"),
                                        ctx: Load,
                                    },
                                ),
                            ),
                        },
                    ),
                    body: [
                        Expr(
                            StmtExpr {
                                node_index: AtomicNodeIndex(..),
                                range: 29..32,
                                value: EllipsisLiteral(
                                    ExprEllipsisLiteral {
                                        node_index: AtomicNodeIndex(..),
                                        range: 29..32,
                                    },
                                ),
                            },
                        ),
                    ],
                    orelse: [],
                },
            ),
            While(
                StmtWhile {
                    node_index: AtomicNodeIndex(..),
                    range: 33..40,
                    test: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 39..40,
                            id: Name("a"),
                            ctx: Load,
                        },
                    ),
                    body: [],
                    orelse: [],
                },
            ),
            AnnAssign(
                StmtAnnAssign {
                    node_index: AtomicNodeIndex(..),
                    range: 42..48,
                    target: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 42..43,
                            id: Name("b"),
                            ctx: Store,
                        },
                    ),
                    annotation: EllipsisLiteral(
                        ExprEllipsisLiteral {
                            node_index: AtomicNodeIndex(..),
                            range: 45..48,
                        },
                    ),
                    value: None,
                    simple: true,
                },
            ),
            While(
                StmtWhile {
                    node_index: AtomicNodeIndex(..),
                    range: 49..61,
                    test: Named(
                        ExprNamed {
                            node_index: AtomicNodeIndex(..),
                            range: 55..61,
                            target: Name(
                                ExprName {
                                    node_index: AtomicNodeIndex(..),
                                    range: 55..56,
                                    id: Name("a"),
                                    ctx: Store,
                                },
                            ),
                            value: NumberLiteral(
                                ExprNumberLiteral {
                                    node_index: AtomicNodeIndex(..),
                                    range: 60..61,
                                    value: Int(
                                        1,
                                    ),
                                },
                            ),
                        },
                    ),
                    body: [],
                    orelse: [],
                },
            ),
            AnnAssign(
                StmtAnnAssign {
                    node_index: AtomicNodeIndex(..),
                    range: 63..69,
                    target: Name(
                        ExprName {
                            node_index: AtomicNodeIndex(..),
                            range: 63..64,
                            id: Name("b"),
                            ctx: Store,
                        },
                    ),
                    annotation: EllipsisLiteral(
                        ExprEllipsisLiteral {
                            node_index: AtomicNodeIndex(..),
                            range: 66..69,
                        },
                    ),
                    value: None,
                    simple: true,
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | while *x: ...
  |       ^^ Syntax Error: Starred expression cannot be used here
2 | while yield x: ...
3 | while a, b: ...
  |


  |
1 | while *x: ...
2 | while yield x: ...
  |       ^^^^^^^ Syntax Error: Yield expression cannot be used here
3 | while a, b: ...
4 | while a := 1, b: ...
  |


  |
1 | while *x: ...
2 | while yield x: ...
3 | while a, b: ...
  |        ^ Syntax Error: Expected ':', found ','
4 | while a := 1, b: ...
  |


  |
2 | while yield x: ...
3 | while a, b: ...
4 | while a := 1, b: ...
  |             ^ Syntax Error: Expected ':', found ','
  |
