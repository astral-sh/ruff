---
source: crates/ruff_python_parser/tests/fixtures.rs
input_file: crates/ruff_python_parser/resources/inline/err/return_stmt_invalid_expr.py
---
## AST

```
Module(
    ModModule {
        node_index: AtomicNodeIndex(..),
        range: 0..74,
        body: [
            Return(
                StmtReturn {
                    node_index: AtomicNodeIndex(..),
                    range: 0..8,
                    value: Some(
                        Starred(
                            ExprStarred {
                                node_index: AtomicNodeIndex(..),
                                range: 7..8,
                                value: Name(
                                    ExprName {
                                        node_index: AtomicNodeIndex(..),
                                        range: 8..8,
                                        id: Name(""),
                                        ctx: Invalid,
                                    },
                                ),
                                ctx: Load,
                            },
                        ),
                    ),
                },
            ),
            Return(
                StmtReturn {
                    node_index: AtomicNodeIndex(..),
                    range: 9..23,
                    value: Some(
                        Yield(
                            ExprYield {
                                node_index: AtomicNodeIndex(..),
                                range: 16..23,
                                value: Some(
                                    Name(
                                        ExprName {
                                            node_index: AtomicNodeIndex(..),
                                            range: 22..23,
                                            id: Name("x"),
                                            ctx: Load,
                                        },
                                    ),
                                ),
                            },
                        ),
                    ),
                },
            ),
            Return(
                StmtReturn {
                    node_index: AtomicNodeIndex(..),
                    range: 24..43,
                    value: Some(
                        YieldFrom(
                            ExprYieldFrom {
                                node_index: AtomicNodeIndex(..),
                                range: 31..43,
                                value: Name(
                                    ExprName {
                                        node_index: AtomicNodeIndex(..),
                                        range: 42..43,
                                        id: Name("x"),
                                        ctx: Load,
                                    },
                                ),
                            },
                        ),
                    ),
                },
            ),
            Return(
                StmtReturn {
                    node_index: AtomicNodeIndex(..),
                    range: 44..52,
                    value: Some(
                        Name(
                            ExprName {
                                node_index: AtomicNodeIndex(..),
                                range: 51..52,
                                id: Name("x"),
                                ctx: Load,
                            },
                        ),
                    ),
                },
            ),
            Expr(
                StmtExpr {
                    node_index: AtomicNodeIndex(..),
                    range: 56..57,
                    value: NumberLiteral(
                        ExprNumberLiteral {
                            node_index: AtomicNodeIndex(..),
                            range: 56..57,
                            value: Int(
                                1,
                            ),
                        },
                    ),
                },
            ),
            Return(
                StmtReturn {
                    node_index: AtomicNodeIndex(..),
                    range: 58..73,
                    value: Some(
                        Starred(
                            ExprStarred {
                                node_index: AtomicNodeIndex(..),
                                range: 65..73,
                                value: BoolOp(
                                    ExprBoolOp {
                                        node_index: AtomicNodeIndex(..),
                                        range: 66..73,
                                        op: And,
                                        values: [
                                            Name(
                                                ExprName {
                                                    node_index: AtomicNodeIndex(..),
                                                    range: 66..67,
                                                    id: Name("x"),
                                                    ctx: Load,
                                                },
                                            ),
                                            Name(
                                                ExprName {
                                                    node_index: AtomicNodeIndex(..),
                                                    range: 72..73,
                                                    id: Name("y"),
                                                    ctx: Load,
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                ctx: Load,
                            },
                        ),
                    ),
                },
            ),
        ],
    },
)
```
## Errors

  |
1 | return *
  |         ^ Syntax Error: Expected an expression
2 | return yield x
3 | return yield from x
4 | return x := 1
  |


  |
1 | return *
2 | return yield x
  |        ^^^^^^^ Syntax Error: Yield expression cannot be used here
3 | return yield from x
4 | return x := 1
  |


  |
1 | return *
2 | return yield x
3 | return yield from x
  |        ^^^^^^^^^^^^ Syntax Error: Yield expression cannot be used here
4 | return x := 1
5 | return *x and y
  |


  |
2 | return yield x
3 | return yield from x
4 | return x := 1
  |          ^^ Syntax Error: Expected a statement
5 | return *x and y
  |


  |
3 | return yield from x
4 | return x := 1
5 | return *x and y
  |         ^^^^^^^ Syntax Error: Boolean expression cannot be used here
  |


## Semantic Syntax Errors

  |
1 | return *
  |        ^ Syntax Error: Starred expression cannot be used here
2 | return yield x
3 | return yield from x
  |


  |
3 | return yield from x
4 | return x := 1
5 | return *x and y
  |        ^^^^^^^^ Syntax Error: Starred expression cannot be used here
  |
