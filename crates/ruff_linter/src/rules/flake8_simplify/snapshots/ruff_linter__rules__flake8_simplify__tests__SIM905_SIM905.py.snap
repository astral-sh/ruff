---
source: crates/ruff_linter/src/rules/flake8_simplify/mod.rs
---
SIM905.py:6:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
 5 |   # positives
 6 | / """
 7 | |     itemA
 8 | |     itemB
 9 | |     itemC
10 | | """.split()
   | |___________^ SIM905
11 |
12 |   """
   |
   = help: Replace with list literal

ℹ Safe fix
3  3  | no_sep = None
4  4  | 
5  5  | # positives
6     |-"""
7     |-	itemA
8     |-	itemB
9     |-	itemC
10    |-""".split()
   6  |+["itemA", "itemB", "itemC"]
11 7  | 
12 8  | """
13 9  | "itemA"

SIM905.py:12:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
10 |   """.split()
11 |
12 | / """
13 | | "itemA"
14 | | 'itemB'
15 | | '''itemC'''
16 | | "'itemD'"
17 | | """.split()
   | |___________^ SIM905
18 |
19 |   "a,b,c,d".split(",")
   |
   = help: Replace with list literal

ℹ Safe fix
9  9  | 	itemC
10 10 | """.split()
11 11 | 
12    |-"""
13    |-"itemA"
14    |-'itemB'
15    |-'''itemC'''
16    |-"'itemD'"
17    |-""".split()
   12 |+['"itemA"', "'itemB'", "'''itemC'''", "\"'itemD'\""]
18 13 | 
19 14 | "a,b,c,d".split(",")
20 15 | "a,b,c,d".split(None)

SIM905.py:19:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
17 | """.split()
18 |
19 | "a,b,c,d".split(",")
   | ^^^^^^^^^^^^^^^^^^^^ SIM905
20 | "a,b,c,d".split(None)
21 | "a,b,c,d".split(",", 1)
   |
   = help: Replace with list literal

ℹ Safe fix
16 16 | "'itemD'"
17 17 | """.split()
18 18 | 
19    |-"a,b,c,d".split(",")
   19 |+["a", "b", "c", "d"]
20 20 | "a,b,c,d".split(None)
21 21 | "a,b,c,d".split(",", 1)
22 22 | "a,b,c,d".split(None, 1)

SIM905.py:20:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
19 | "a,b,c,d".split(",")
20 | "a,b,c,d".split(None)
   | ^^^^^^^^^^^^^^^^^^^^^ SIM905
21 | "a,b,c,d".split(",", 1)
22 | "a,b,c,d".split(None, 1)
   |
   = help: Replace with list literal

ℹ Safe fix
17 17 | """.split()
18 18 | 
19 19 | "a,b,c,d".split(",")
20    |-"a,b,c,d".split(None)
   20 |+["a,b,c,d"]
21 21 | "a,b,c,d".split(",", 1)
22 22 | "a,b,c,d".split(None, 1)
23 23 | "a,b,c,d".split(sep=",")

SIM905.py:21:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
19 | "a,b,c,d".split(",")
20 | "a,b,c,d".split(None)
21 | "a,b,c,d".split(",", 1)
   | ^^^^^^^^^^^^^^^^^^^^^^^ SIM905
22 | "a,b,c,d".split(None, 1)
23 | "a,b,c,d".split(sep=",")
   |
   = help: Replace with list literal

ℹ Safe fix
18 18 | 
19 19 | "a,b,c,d".split(",")
20 20 | "a,b,c,d".split(None)
21    |-"a,b,c,d".split(",", 1)
   21 |+["a", "b,c,d"]
22 22 | "a,b,c,d".split(None, 1)
23 23 | "a,b,c,d".split(sep=",")
24 24 | "a,b,c,d".split(sep=None)

SIM905.py:22:1: SIM905 Consider using a list literal instead of `str.split`
   |
20 | "a,b,c,d".split(None)
21 | "a,b,c,d".split(",", 1)
22 | "a,b,c,d".split(None, 1)
   | ^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
23 | "a,b,c,d".split(sep=",")
24 | "a,b,c,d".split(sep=None)
   |
   = help: Replace with list literal

SIM905.py:23:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
21 | "a,b,c,d".split(",", 1)
22 | "a,b,c,d".split(None, 1)
23 | "a,b,c,d".split(sep=",")
   | ^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
24 | "a,b,c,d".split(sep=None)
25 | "a,b,c,d".split(sep=",", maxsplit=1)
   |
   = help: Replace with list literal

ℹ Safe fix
20 20 | "a,b,c,d".split(None)
21 21 | "a,b,c,d".split(",", 1)
22 22 | "a,b,c,d".split(None, 1)
23    |-"a,b,c,d".split(sep=",")
   23 |+["a", "b", "c", "d"]
24 24 | "a,b,c,d".split(sep=None)
25 25 | "a,b,c,d".split(sep=",", maxsplit=1)
26 26 | "a,b,c,d".split(sep=None, maxsplit=1)

SIM905.py:24:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
22 | "a,b,c,d".split(None, 1)
23 | "a,b,c,d".split(sep=",")
24 | "a,b,c,d".split(sep=None)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
25 | "a,b,c,d".split(sep=",", maxsplit=1)
26 | "a,b,c,d".split(sep=None, maxsplit=1)
   |
   = help: Replace with list literal

ℹ Safe fix
21 21 | "a,b,c,d".split(",", 1)
22 22 | "a,b,c,d".split(None, 1)
23 23 | "a,b,c,d".split(sep=",")
24    |-"a,b,c,d".split(sep=None)
   24 |+["a,b,c,d"]
25 25 | "a,b,c,d".split(sep=",", maxsplit=1)
26 26 | "a,b,c,d".split(sep=None, maxsplit=1)
27 27 | "a,b,c,d".split(maxsplit=1, sep=",")

SIM905.py:25:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
23 | "a,b,c,d".split(sep=",")
24 | "a,b,c,d".split(sep=None)
25 | "a,b,c,d".split(sep=",", maxsplit=1)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
26 | "a,b,c,d".split(sep=None, maxsplit=1)
27 | "a,b,c,d".split(maxsplit=1, sep=",")
   |
   = help: Replace with list literal

ℹ Safe fix
22 22 | "a,b,c,d".split(None, 1)
23 23 | "a,b,c,d".split(sep=",")
24 24 | "a,b,c,d".split(sep=None)
25    |-"a,b,c,d".split(sep=",", maxsplit=1)
   25 |+["a", "b,c,d"]
26 26 | "a,b,c,d".split(sep=None, maxsplit=1)
27 27 | "a,b,c,d".split(maxsplit=1, sep=",")
28 28 | "a,b,c,d".split(maxsplit=1, sep=None)

SIM905.py:26:1: SIM905 Consider using a list literal instead of `str.split`
   |
24 | "a,b,c,d".split(sep=None)
25 | "a,b,c,d".split(sep=",", maxsplit=1)
26 | "a,b,c,d".split(sep=None, maxsplit=1)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
27 | "a,b,c,d".split(maxsplit=1, sep=",")
28 | "a,b,c,d".split(maxsplit=1, sep=None)
   |
   = help: Replace with list literal

SIM905.py:27:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
25 | "a,b,c,d".split(sep=",", maxsplit=1)
26 | "a,b,c,d".split(sep=None, maxsplit=1)
27 | "a,b,c,d".split(maxsplit=1, sep=",")
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
28 | "a,b,c,d".split(maxsplit=1, sep=None)
29 | "a,b,c,d".split(",", maxsplit=1)
   |
   = help: Replace with list literal

ℹ Safe fix
24 24 | "a,b,c,d".split(sep=None)
25 25 | "a,b,c,d".split(sep=",", maxsplit=1)
26 26 | "a,b,c,d".split(sep=None, maxsplit=1)
27    |-"a,b,c,d".split(maxsplit=1, sep=",")
   27 |+["a", "b,c,d"]
28 28 | "a,b,c,d".split(maxsplit=1, sep=None)
29 29 | "a,b,c,d".split(",", maxsplit=1)
30 30 | "a,b,c,d".split(None, maxsplit=1)

SIM905.py:28:1: SIM905 Consider using a list literal instead of `str.split`
   |
26 | "a,b,c,d".split(sep=None, maxsplit=1)
27 | "a,b,c,d".split(maxsplit=1, sep=",")
28 | "a,b,c,d".split(maxsplit=1, sep=None)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
29 | "a,b,c,d".split(",", maxsplit=1)
30 | "a,b,c,d".split(None, maxsplit=1)
   |
   = help: Replace with list literal

SIM905.py:29:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
27 | "a,b,c,d".split(maxsplit=1, sep=",")
28 | "a,b,c,d".split(maxsplit=1, sep=None)
29 | "a,b,c,d".split(",", maxsplit=1)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
30 | "a,b,c,d".split(None, maxsplit=1)
31 | "a,b,c,d".split(maxsplit=1)
   |
   = help: Replace with list literal

ℹ Safe fix
26 26 | "a,b,c,d".split(sep=None, maxsplit=1)
27 27 | "a,b,c,d".split(maxsplit=1, sep=",")
28 28 | "a,b,c,d".split(maxsplit=1, sep=None)
29    |-"a,b,c,d".split(",", maxsplit=1)
   29 |+["a", "b,c,d"]
30 30 | "a,b,c,d".split(None, maxsplit=1)
31 31 | "a,b,c,d".split(maxsplit=1)
32 32 | "a,b,c,d".split(maxsplit=1.0)

SIM905.py:30:1: SIM905 Consider using a list literal instead of `str.split`
   |
28 | "a,b,c,d".split(maxsplit=1, sep=None)
29 | "a,b,c,d".split(",", maxsplit=1)
30 | "a,b,c,d".split(None, maxsplit=1)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
31 | "a,b,c,d".split(maxsplit=1)
32 | "a,b,c,d".split(maxsplit=1.0)
   |
   = help: Replace with list literal

SIM905.py:31:1: SIM905 Consider using a list literal instead of `str.split`
   |
29 | "a,b,c,d".split(",", maxsplit=1)
30 | "a,b,c,d".split(None, maxsplit=1)
31 | "a,b,c,d".split(maxsplit=1)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
32 | "a,b,c,d".split(maxsplit=1.0)
33 | "a,b,c,d".split(maxsplit=1)
   |
   = help: Replace with list literal

SIM905.py:33:1: SIM905 Consider using a list literal instead of `str.split`
   |
31 | "a,b,c,d".split(maxsplit=1)
32 | "a,b,c,d".split(maxsplit=1.0)
33 | "a,b,c,d".split(maxsplit=1)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
34 | "a,b,c,d".split(maxsplit=0)
35 | "VERB AUX PRON ADP DET".split(" ")
   |
   = help: Replace with list literal

SIM905.py:34:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
32 | "a,b,c,d".split(maxsplit=1.0)
33 | "a,b,c,d".split(maxsplit=1)
34 | "a,b,c,d".split(maxsplit=0)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
35 | "VERB AUX PRON ADP DET".split(" ")
36 | '   1   2   3   '.split()
   |
   = help: Replace with list literal

ℹ Safe fix
31 31 | "a,b,c,d".split(maxsplit=1)
32 32 | "a,b,c,d".split(maxsplit=1.0)
33 33 | "a,b,c,d".split(maxsplit=1)
34    |-"a,b,c,d".split(maxsplit=0)
   34 |+["a,b,c,d"]
35 35 | "VERB AUX PRON ADP DET".split(" ")
36 36 | '   1   2   3   '.split()
37 37 | '1<>2<>3<4'.split('<>')

SIM905.py:35:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
33 | "a,b,c,d".split(maxsplit=1)
34 | "a,b,c,d".split(maxsplit=0)
35 | "VERB AUX PRON ADP DET".split(" ")
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
36 | '   1   2   3   '.split()
37 | '1<>2<>3<4'.split('<>')
   |
   = help: Replace with list literal

ℹ Safe fix
32 32 | "a,b,c,d".split(maxsplit=1.0)
33 33 | "a,b,c,d".split(maxsplit=1)
34 34 | "a,b,c,d".split(maxsplit=0)
35    |-"VERB AUX PRON ADP DET".split(" ")
   35 |+["VERB", "AUX", "PRON", "ADP", "DET"]
36 36 | '   1   2   3   '.split()
37 37 | '1<>2<>3<4'.split('<>')
38 38 | 

SIM905.py:36:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
34 | "a,b,c,d".split(maxsplit=0)
35 | "VERB AUX PRON ADP DET".split(" ")
36 | '   1   2   3   '.split()
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
37 | '1<>2<>3<4'.split('<>')
   |
   = help: Replace with list literal

ℹ Safe fix
33 33 | "a,b,c,d".split(maxsplit=1)
34 34 | "a,b,c,d".split(maxsplit=0)
35 35 | "VERB AUX PRON ADP DET".split(" ")
36    |-'   1   2   3   '.split()
   36 |+['1', '2', '3']
37 37 | '1<>2<>3<4'.split('<>')
38 38 | 
39 39 | " a*a a*a a ".split("*", -1)  # [" a", "a a", "a a "]

SIM905.py:37:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
35 | "VERB AUX PRON ADP DET".split(" ")
36 | '   1   2   3   '.split()
37 | '1<>2<>3<4'.split('<>')
   | ^^^^^^^^^^^^^^^^^^^^^^^ SIM905
38 |
39 | " a*a a*a a ".split("*", -1)  # [" a", "a a", "a a "]
   |
   = help: Replace with list literal

ℹ Safe fix
34 34 | "a,b,c,d".split(maxsplit=0)
35 35 | "VERB AUX PRON ADP DET".split(" ")
36 36 | '   1   2   3   '.split()
37    |-'1<>2<>3<4'.split('<>')
   37 |+['1', '2', '3<4']
38 38 | 
39 39 | " a*a a*a a ".split("*", -1)  # [" a", "a a", "a a "]
40 40 | "".split()  # []

SIM905.py:39:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
37 | '1<>2<>3<4'.split('<>')
38 |
39 | " a*a a*a a ".split("*", -1)  # [" a", "a a", "a a "]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
40 | "".split()  # []
41 | """     
   |
   = help: Replace with list literal

ℹ Safe fix
36 36 | '   1   2   3   '.split()
37 37 | '1<>2<>3<4'.split('<>')
38 38 | 
39    |-" a*a a*a a ".split("*", -1)  # [" a", "a a", "a a "]
   39 |+[" a", "a a", "a a "]  # [" a", "a a", "a a "]
40 40 | "".split()  # []
41 41 | """ 	
42 42 | """.split()  # []

SIM905.py:40:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
39 | " a*a a*a a ".split("*", -1)  # [" a", "a a", "a a "]
40 | "".split()  # []
   | ^^^^^^^^^^ SIM905
41 | """     
42 | """.split()  # []
   |
   = help: Replace with list literal

ℹ Safe fix
37 37 | '1<>2<>3<4'.split('<>')
38 38 | 
39 39 | " a*a a*a a ".split("*", -1)  # [" a", "a a", "a a "]
40    |-"".split()  # []
   40 |+[]  # []
41 41 | """ 	
42 42 | """.split()  # []
43 43 | "   	".split()  # []

SIM905.py:41:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
39 |   " a*a a*a a ".split("*", -1)  # [" a", "a a", "a a "]
40 |   "".split()  # []
41 | / """     
42 | | """.split()  # []
   | |___________^ SIM905
43 |   "       ".split()  # []
44 |   "/abc/".split() # ["/abc/"]
   |
   = help: Replace with list literal

ℹ Safe fix
38 38 | 
39 39 | " a*a a*a a ".split("*", -1)  # [" a", "a a", "a a "]
40 40 | "".split()  # []
41    |-""" 	
42    |-""".split()  # []
   41 |+[]  # []
43 42 | "   	".split()  # []
44 43 | "/abc/".split() # ["/abc/"]
45 44 | ("a,b,c"

SIM905.py:43:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
41 | """     
42 | """.split()  # []
43 | "       ".split()  # []
   | ^^^^^^^^^^^^^^^^^ SIM905
44 | "/abc/".split() # ["/abc/"]
45 | ("a,b,c"
   |
   = help: Replace with list literal

ℹ Safe fix
40 40 | "".split()  # []
41 41 | """ 	
42 42 | """.split()  # []
43    |-"   	".split()  # []
   43 |+[]  # []
44 44 | "/abc/".split() # ["/abc/"]
45 45 | ("a,b,c"
46 46 | # comment

SIM905.py:44:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
42 | """.split()  # []
43 | "       ".split()  # []
44 | "/abc/".split() # ["/abc/"]
   | ^^^^^^^^^^^^^^^ SIM905
45 | ("a,b,c"
46 | # comment
   |
   = help: Replace with list literal

ℹ Safe fix
41 41 | """ 	
42 42 | """.split()  # []
43 43 | "   	".split()  # []
44    |-"/abc/".split() # ["/abc/"]
   44 |+["/abc/"] # ["/abc/"]
45 45 | ("a,b,c"
46 46 | # comment
47 47 | .split()

SIM905.py:45:2: SIM905 [*] Consider using a list literal instead of `str.split`
   |
43 |   "       ".split()  # []
44 |   "/abc/".split() # ["/abc/"]
45 |   ("a,b,c"
   |  __^
46 | | # comment
47 | | .split()
   | |________^ SIM905
48 |   )  # ["a,b,c"]
49 |   ("a,b,c"
   |
   = help: Replace with list literal

ℹ Unsafe fix
42 42 | """.split()  # []
43 43 | "   	".split()  # []
44 44 | "/abc/".split() # ["/abc/"]
45    |-("a,b,c"
46    |-# comment
47    |-.split()
   45 |+(["a,b,c"]
48 46 | )  # ["a,b,c"]
49 47 | ("a,b,c"
50 48 | # comment1

SIM905.py:49:2: SIM905 [*] Consider using a list literal instead of `str.split`
   |
47 |   .split()
48 |   )  # ["a,b,c"]
49 |   ("a,b,c"
   |  __^
50 | | # comment1
51 | | .split(",")
   | |___________^ SIM905
52 |   ) # ["a", "b", "c"]
53 |   ("a,"
   |
   = help: Replace with list literal

ℹ Unsafe fix
46 46 | # comment
47 47 | .split()
48 48 | )  # ["a,b,c"]
49    |-("a,b,c"
50    |-# comment1
51    |-.split(",")
   49 |+(["a", "b", "c"]
52 50 | ) # ["a", "b", "c"]
53 51 | ("a,"
54 52 | # comment

SIM905.py:53:2: SIM905 [*] Consider using a list literal instead of `str.split`
   |
51 |   .split(",")
52 |   ) # ["a", "b", "c"]
53 |   ("a,"
   |  __^
54 | | # comment
55 | | "b,"
56 | | "c"
57 | | .split(",")
   | |___________^ SIM905
58 |   ) # ["a", "b", "c"]
   |
   = help: Replace with list literal

ℹ Unsafe fix
50 50 | # comment1
51 51 | .split(",")
52 52 | ) # ["a", "b", "c"]
53    |-("a,"
54    |-# comment
55    |-"b,"
56    |-"c"
57    |-.split(",")
   53 |+(["a", "b", "c"]
58 54 | ) # ["a", "b", "c"]
59 55 | 
60 56 | "hello "\

SIM905.py:60:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
58 |   ) # ["a", "b", "c"]
59 |
60 | / "hello "\
61 | |     "world".split()
   | |___________________^ SIM905
62 |   # ["hello", "world"]
   |
   = help: Replace with list literal

ℹ Safe fix
57 57 | .split(",")
58 58 | ) # ["a", "b", "c"]
59 59 | 
60    |-"hello "\
61    |-	"world".split()
   60 |+["hello", "world"]
62 61 | # ["hello", "world"]
63 62 | 
64 63 | # prefixes and isc

SIM905.py:65:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
64 | # prefixes and isc
65 | u"a b".split()  # [u"a", u"b"]
   | ^^^^^^^^^^^^^^ SIM905
66 | r"a \n b".split()  # [r"a", r"\n", r"b"]
67 | ("a " "b").split()  # ["a", "b"]
   |
   = help: Replace with list literal

ℹ Safe fix
62 62 | # ["hello", "world"]
63 63 | 
64 64 | # prefixes and isc
65    |-u"a b".split()  # [u"a", u"b"]
   65 |+[u"a", u"b"]  # [u"a", u"b"]
66 66 | r"a \n b".split()  # [r"a", r"\n", r"b"]
67 67 | ("a " "b").split()  # ["a", "b"]
68 68 | "a " "b".split()  # ["a", "b"]

SIM905.py:66:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
64 | # prefixes and isc
65 | u"a b".split()  # [u"a", u"b"]
66 | r"a \n b".split()  # [r"a", r"\n", r"b"]
   | ^^^^^^^^^^^^^^^^^ SIM905
67 | ("a " "b").split()  # ["a", "b"]
68 | "a " "b".split()  # ["a", "b"]
   |
   = help: Replace with list literal

ℹ Safe fix
63 63 | 
64 64 | # prefixes and isc
65 65 | u"a b".split()  # [u"a", u"b"]
66    |-r"a \n b".split()  # [r"a", r"\n", r"b"]
   66 |+[r"a", r"\n", r"b"]  # [r"a", r"\n", r"b"]
67 67 | ("a " "b").split()  # ["a", "b"]
68 68 | "a " "b".split()  # ["a", "b"]
69 69 | u"a " "b".split()  # [u"a", u"b"]

SIM905.py:67:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
65 | u"a b".split()  # [u"a", u"b"]
66 | r"a \n b".split()  # [r"a", r"\n", r"b"]
67 | ("a " "b").split()  # ["a", "b"]
   | ^^^^^^^^^^^^^^^^^^ SIM905
68 | "a " "b".split()  # ["a", "b"]
69 | u"a " "b".split()  # [u"a", u"b"]
   |
   = help: Replace with list literal

ℹ Safe fix
64 64 | # prefixes and isc
65 65 | u"a b".split()  # [u"a", u"b"]
66 66 | r"a \n b".split()  # [r"a", r"\n", r"b"]
67    |-("a " "b").split()  # ["a", "b"]
   67 |+["a", "b"]  # ["a", "b"]
68 68 | "a " "b".split()  # ["a", "b"]
69 69 | u"a " "b".split()  # [u"a", u"b"]
70 70 | "a " u"b".split()  # ["a", "b"]

SIM905.py:68:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
66 | r"a \n b".split()  # [r"a", r"\n", r"b"]
67 | ("a " "b").split()  # ["a", "b"]
68 | "a " "b".split()  # ["a", "b"]
   | ^^^^^^^^^^^^^^^^ SIM905
69 | u"a " "b".split()  # [u"a", u"b"]
70 | "a " u"b".split()  # ["a", "b"]
   |
   = help: Replace with list literal

ℹ Safe fix
65 65 | u"a b".split()  # [u"a", u"b"]
66 66 | r"a \n b".split()  # [r"a", r"\n", r"b"]
67 67 | ("a " "b").split()  # ["a", "b"]
68    |-"a " "b".split()  # ["a", "b"]
   68 |+["a", "b"]  # ["a", "b"]
69 69 | u"a " "b".split()  # [u"a", u"b"]
70 70 | "a " u"b".split()  # ["a", "b"]
71 71 | u"a " r"\n".split()  # [u"a", u"\\n"]

SIM905.py:69:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
67 | ("a " "b").split()  # ["a", "b"]
68 | "a " "b".split()  # ["a", "b"]
69 | u"a " "b".split()  # [u"a", u"b"]
   | ^^^^^^^^^^^^^^^^^ SIM905
70 | "a " u"b".split()  # ["a", "b"]
71 | u"a " r"\n".split()  # [u"a", u"\\n"]
   |
   = help: Replace with list literal

ℹ Safe fix
66 66 | r"a \n b".split()  # [r"a", r"\n", r"b"]
67 67 | ("a " "b").split()  # ["a", "b"]
68 68 | "a " "b".split()  # ["a", "b"]
69    |-u"a " "b".split()  # [u"a", u"b"]
   69 |+[u"a", u"b"]  # [u"a", u"b"]
70 70 | "a " u"b".split()  # ["a", "b"]
71 71 | u"a " r"\n".split()  # [u"a", u"\\n"]
72 72 | r"\n " u"\n".split()  # [r"\n"]

SIM905.py:70:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
68 | "a " "b".split()  # ["a", "b"]
69 | u"a " "b".split()  # [u"a", u"b"]
70 | "a " u"b".split()  # ["a", "b"]
   | ^^^^^^^^^^^^^^^^^ SIM905
71 | u"a " r"\n".split()  # [u"a", u"\\n"]
72 | r"\n " u"\n".split()  # [r"\n"]
   |
   = help: Replace with list literal

ℹ Safe fix
67 67 | ("a " "b").split()  # ["a", "b"]
68 68 | "a " "b".split()  # ["a", "b"]
69 69 | u"a " "b".split()  # [u"a", u"b"]
70    |-"a " u"b".split()  # ["a", "b"]
   70 |+["a", "b"]  # ["a", "b"]
71 71 | u"a " r"\n".split()  # [u"a", u"\\n"]
72 72 | r"\n " u"\n".split()  # [r"\n"]
73 73 | r"\n " "\n".split()  # [r"\n"]

SIM905.py:71:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
69 | u"a " "b".split()  # [u"a", u"b"]
70 | "a " u"b".split()  # ["a", "b"]
71 | u"a " r"\n".split()  # [u"a", u"\\n"]
   | ^^^^^^^^^^^^^^^^^^^ SIM905
72 | r"\n " u"\n".split()  # [r"\n"]
73 | r"\n " "\n".split()  # [r"\n"]
   |
   = help: Replace with list literal

ℹ Safe fix
68 68 | "a " "b".split()  # ["a", "b"]
69 69 | u"a " "b".split()  # [u"a", u"b"]
70 70 | "a " u"b".split()  # ["a", "b"]
71    |-u"a " r"\n".split()  # [u"a", u"\\n"]
   71 |+[u"a", u"\\n"]  # [u"a", u"\\n"]
72 72 | r"\n " u"\n".split()  # [r"\n"]
73 73 | r"\n " "\n".split()  # [r"\n"]
74 74 | "a " r"\n".split()  # ["a", "\\n"]

SIM905.py:72:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
70 | "a " u"b".split()  # ["a", "b"]
71 | u"a " r"\n".split()  # [u"a", u"\\n"]
72 | r"\n " u"\n".split()  # [r"\n"]
   | ^^^^^^^^^^^^^^^^^^^^ SIM905
73 | r"\n " "\n".split()  # [r"\n"]
74 | "a " r"\n".split()  # ["a", "\\n"]
   |
   = help: Replace with list literal

ℹ Safe fix
69 69 | u"a " "b".split()  # [u"a", u"b"]
70 70 | "a " u"b".split()  # ["a", "b"]
71 71 | u"a " r"\n".split()  # [u"a", u"\\n"]
72    |-r"\n " u"\n".split()  # [r"\n"]
   72 |+[r"\n"]  # [r"\n"]
73 73 | r"\n " "\n".split()  # [r"\n"]
74 74 | "a " r"\n".split()  # ["a", "\\n"]
75 75 | 

SIM905.py:73:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
71 | u"a " r"\n".split()  # [u"a", u"\\n"]
72 | r"\n " u"\n".split()  # [r"\n"]
73 | r"\n " "\n".split()  # [r"\n"]
   | ^^^^^^^^^^^^^^^^^^^ SIM905
74 | "a " r"\n".split()  # ["a", "\\n"]
   |
   = help: Replace with list literal

ℹ Safe fix
70 70 | "a " u"b".split()  # ["a", "b"]
71 71 | u"a " r"\n".split()  # [u"a", u"\\n"]
72 72 | r"\n " u"\n".split()  # [r"\n"]
73    |-r"\n " "\n".split()  # [r"\n"]
   73 |+[r"\n"]  # [r"\n"]
74 74 | "a " r"\n".split()  # ["a", "\\n"]
75 75 | 
76 76 | "a,b,c".split(',', maxsplit=0) # ["a,b,c"]

SIM905.py:74:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
72 | r"\n " u"\n".split()  # [r"\n"]
73 | r"\n " "\n".split()  # [r"\n"]
74 | "a " r"\n".split()  # ["a", "\\n"]
   | ^^^^^^^^^^^^^^^^^^ SIM905
75 |
76 | "a,b,c".split(',', maxsplit=0) # ["a,b,c"]
   |
   = help: Replace with list literal

ℹ Safe fix
71 71 | u"a " r"\n".split()  # [u"a", u"\\n"]
72 72 | r"\n " u"\n".split()  # [r"\n"]
73 73 | r"\n " "\n".split()  # [r"\n"]
74    |-"a " r"\n".split()  # ["a", "\\n"]
   74 |+["a", "\\n"]  # ["a", "\\n"]
75 75 | 
76 76 | "a,b,c".split(',', maxsplit=0) # ["a,b,c"]
77 77 | "a,b,c".split(',', maxsplit=-1)  # ["a", "b", "c"]

SIM905.py:76:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
74 | "a " r"\n".split()  # ["a", "\\n"]
75 |
76 | "a,b,c".split(',', maxsplit=0) # ["a,b,c"]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
77 | "a,b,c".split(',', maxsplit=-1)  # ["a", "b", "c"]
78 | "a,b,c".split(',', maxsplit=-2)  # ["a", "b", "c"]
   |
   = help: Replace with list literal

ℹ Safe fix
73 73 | r"\n " "\n".split()  # [r"\n"]
74 74 | "a " r"\n".split()  # ["a", "\\n"]
75 75 | 
76    |-"a,b,c".split(',', maxsplit=0) # ["a,b,c"]
   76 |+["a,b,c"] # ["a,b,c"]
77 77 | "a,b,c".split(',', maxsplit=-1)  # ["a", "b", "c"]
78 78 | "a,b,c".split(',', maxsplit=-2)  # ["a", "b", "c"]
79 79 | "a,b,c".split(',', maxsplit=-0)  # ["a,b,c"]

SIM905.py:77:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
76 | "a,b,c".split(',', maxsplit=0) # ["a,b,c"]
77 | "a,b,c".split(',', maxsplit=-1)  # ["a", "b", "c"]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
78 | "a,b,c".split(',', maxsplit=-2)  # ["a", "b", "c"]
79 | "a,b,c".split(',', maxsplit=-0)  # ["a,b,c"]
   |
   = help: Replace with list literal

ℹ Safe fix
74 74 | "a " r"\n".split()  # ["a", "\\n"]
75 75 | 
76 76 | "a,b,c".split(',', maxsplit=0) # ["a,b,c"]
77    |-"a,b,c".split(',', maxsplit=-1)  # ["a", "b", "c"]
   77 |+["a", "b", "c"]  # ["a", "b", "c"]
78 78 | "a,b,c".split(',', maxsplit=-2)  # ["a", "b", "c"]
79 79 | "a,b,c".split(',', maxsplit=-0)  # ["a,b,c"]
80 80 | 

SIM905.py:78:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
76 | "a,b,c".split(',', maxsplit=0) # ["a,b,c"]
77 | "a,b,c".split(',', maxsplit=-1)  # ["a", "b", "c"]
78 | "a,b,c".split(',', maxsplit=-2)  # ["a", "b", "c"]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
79 | "a,b,c".split(',', maxsplit=-0)  # ["a,b,c"]
   |
   = help: Replace with list literal

ℹ Safe fix
75 75 | 
76 76 | "a,b,c".split(',', maxsplit=0) # ["a,b,c"]
77 77 | "a,b,c".split(',', maxsplit=-1)  # ["a", "b", "c"]
78    |-"a,b,c".split(',', maxsplit=-2)  # ["a", "b", "c"]
   78 |+["a", "b", "c"]  # ["a", "b", "c"]
79 79 | "a,b,c".split(',', maxsplit=-0)  # ["a,b,c"]
80 80 | 
81 81 | # negatives

SIM905.py:79:1: SIM905 [*] Consider using a list literal instead of `str.split`
   |
77 | "a,b,c".split(',', maxsplit=-1)  # ["a", "b", "c"]
78 | "a,b,c".split(',', maxsplit=-2)  # ["a", "b", "c"]
79 | "a,b,c".split(',', maxsplit=-0)  # ["a,b,c"]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM905
80 |
81 | # negatives
   |
   = help: Replace with list literal

ℹ Safe fix
76 76 | "a,b,c".split(',', maxsplit=0) # ["a,b,c"]
77 77 | "a,b,c".split(',', maxsplit=-1)  # ["a", "b", "c"]
78 78 | "a,b,c".split(',', maxsplit=-2)  # ["a", "b", "c"]
79    |-"a,b,c".split(',', maxsplit=-0)  # ["a,b,c"]
   79 |+["a,b,c"]  # ["a,b,c"]
80 80 | 
81 81 | # negatives
82 82 |
