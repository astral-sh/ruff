---
source: crates/ruff_linter/src/rules/flake8_simplify/mod.rs
---
SIM103.py:3:5: SIM103 [*] Return the condition `a` directly
  |
1 |   def f():
2 |       # SIM103
3 |       if a:
  |  _____^
4 | |         return True
5 | |     else:
6 | |         return False
  | |____________________^ SIM103
  |
  = help: Replace with `return bool(a)`

ℹ Unsafe fix
1 1 | def f():
2 2 |     # SIM103
3   |-    if a:
4   |-        return True
5   |-    else:
6   |-        return False
  3 |+    return bool(a)
7 4 | 
8 5 | 
9 6 | def f():

SIM103.py:11:5: SIM103 [*] Return the condition `a == b` directly
   |
 9 |   def f():
10 |       # SIM103
11 |       if a == b:
   |  _____^
12 | |         return True
13 | |     else:
14 | |         return False
   | |____________________^ SIM103
   |
   = help: Replace with `return a == b`

ℹ Unsafe fix
8  8  | 
9  9  | def f():
10 10 |     # SIM103
11    |-    if a == b:
12    |-        return True
13    |-    else:
14    |-        return False
   11 |+    return a == b
15 12 | 
16 13 | 
17 14 | def f():

SIM103.py:21:5: SIM103 [*] Return the condition `b` directly
   |
19 |       if a:
20 |           return 1
21 |       elif b:
   |  _____^
22 | |         return True
23 | |     else:
24 | |         return False
   | |____________________^ SIM103
   |
   = help: Replace with `return bool(b)`

ℹ Unsafe fix
18 18 |     # SIM103
19 19 |     if a:
20 20 |         return 1
21    |-    elif b:
22    |-        return True
23    |-    else:
24    |-        return False
   21 |+    return bool(b)
25 22 | 
26 23 | 
27 24 | def f():

SIM103.py:32:9: SIM103 [*] Return the condition `b` directly
   |
30 |           return 1
31 |       else:
32 |           if b:
   |  _________^
33 | |             return True
34 | |         else:
35 | |             return False
   | |________________________^ SIM103
36 |   
37 |   def f():
   |
   = help: Replace with `return bool(b)`

ℹ Unsafe fix
29 29 |     if a:
30 30 |         return 1
31 31 |     else:
32    |-        if b:
33    |-            return True
34    |-        else:
35    |-            return False
   32 |+        return bool(b)
36 33 | 
37 34 | def f():
38 35 |     # SIM103

SIM103.py:39:5: SIM103 [*] Return the condition `a` directly
   |
37 |   def f():
38 |       # SIM103
39 |       if a:
   |  _____^
40 | |         return True
41 | |     return False
   | |________________^ SIM103
42 |   
43 |   def f():
   |
   = help: Replace with `return bool(a)`

ℹ Unsafe fix
36 36 | 
37 37 | def f():
38 38 |     # SIM103
39    |-    if a:
40    |-        return True
41    |-    return False
   39 |+    return bool(a)
42 40 | 
43 41 | def f():
44 42 |     # SIM103

SIM103.py:45:5: SIM103 [*] Return the condition `a` directly
   |
43 |   def f():
44 |       # SIM103
45 |       if a:
   |  _____^
46 | |         return False
47 | |     return True
   | |_______________^ SIM103
48 |   
49 |   def f():
   |
   = help: Replace with `return not a`

ℹ Unsafe fix
42 42 | 
43 43 | def f():
44 44 |     # SIM103
45    |-    if a:
46    |-        return False
47    |-    return True
   45 |+    return not a
48 46 | 
49 47 | def f():
50 48 |     # OK

SIM103.py:68:5: SIM103 [*] Return the condition `a` directly
   |
66 |   def f():
67 |       # SIM103 (but not fixable)
68 |       if a:
   |  _____^
69 | |         return False
70 | |     else:
71 | |         return True
   | |___________________^ SIM103
   |
   = help: Replace with `return not a`

ℹ Unsafe fix
65 65 | 
66 66 | def f():
67 67 |     # SIM103 (but not fixable)
68    |-    if a:
69    |-        return False
70    |-    else:
71    |-        return True
   68 |+    return not a
72 69 | 
73 70 | 
74 71 | def f():

SIM103.py:94:5: SIM103 [*] Return the condition `a` directly
   |
92 |       def bool():
93 |           return False
94 |       if a:
   |  _____^
95 | |         return True
96 | |     else:
97 | |         return False
   | |____________________^ SIM103
   |
   = help: Replace with `return bool(a)`

ℹ Unsafe fix
91 91 |     # OK
92 92 |     def bool():
93 93 |         return False
94    |-    if a:
95    |-        return True
96    |-    else:
97    |-        return False
   94 |+    return bool(a)
98 95 |
