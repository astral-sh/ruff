---
source: crates/ruff_linter/src/rules/flake8_simplify/mod.rs
---
SIM114.py:2:1: SIM114 [*] Combine `if` branches using logical `or` operator
  |
1 |   # Errors
2 | / if a:
3 | |     b
4 | | elif c:
5 | |     b
  | |_____^ SIM114
6 |
7 |   if a:  # we preserve comments, too!
  |
  = help: Combine `if` branches

ℹ Safe fix
1 1 | # Errors
2   |-if a:
3   |-    b
4   |-elif c:
  2 |+if a or c:
5 3 |     b
6 4 | 
7 5 | if a:  # we preserve comments, too!

SIM114.py:7:1: SIM114 [*] Combine `if` branches using logical `or` operator
   |
 5 |       b
 6 |
 7 | / if a:  # we preserve comments, too!
 8 | |     b
 9 | | elif c:  # but not on the second branch
10 | |     b
   | |_____^ SIM114
11 |
12 |   if x == 1:
   |
   = help: Combine `if` branches

ℹ Safe fix
4  4  | elif c:
5  5  |     b
6  6  | 
7     |-if a:  # we preserve comments, too!
8     |-    b
9     |-elif c:  # but not on the second branch
   7  |+if a or c:  # we preserve comments, too!
10 8  |     b
11 9  | 
12 10 | if x == 1:

SIM114.py:12:1: SIM114 [*] Combine `if` branches using logical `or` operator
   |
10 |       b
11 |
12 | / if x == 1:
13 | |     for _ in range(20):
14 | |         print("hello")
15 | | elif x == 2:
16 | |     for _ in range(20):
17 | |         print("hello")
   | |______________________^ SIM114
18 |
19 |   if x == 1:
   |
   = help: Combine `if` branches

ℹ Safe fix
9  9  | elif c:  # but not on the second branch
10 10 |     b
11 11 | 
12    |-if x == 1:
13    |-    for _ in range(20):
14    |-        print("hello")
15    |-elif x == 2:
   12 |+if x == 1 or x == 2:
16 13 |     for _ in range(20):
17 14 |         print("hello")
18 15 | 

SIM114.py:19:1: SIM114 [*] Combine `if` branches using logical `or` operator
   |
17 |           print("hello")
18 |
19 | / if x == 1:
20 | |     if True:
21 | |         for _ in range(20):
22 | |             print("hello")
23 | | elif x == 2:
24 | |     if True:
25 | |         for _ in range(20):
26 | |             print("hello")
   | |__________________________^ SIM114
27 |
28 |   if x == 1:
   |
   = help: Combine `if` branches

ℹ Safe fix
16 16 |     for _ in range(20):
17 17 |         print("hello")
18 18 | 
19    |-if x == 1:
20    |-    if True:
21    |-        for _ in range(20):
22    |-            print("hello")
23    |-elif x == 2:
   19 |+if x == 1 or x == 2:
24 20 |     if True:
25 21 |         for _ in range(20):
26 22 |             print("hello")

SIM114.py:28:1: SIM114 [*] Combine `if` branches using logical `or` operator
   |
26 |               print("hello")
27 |
28 | / if x == 1:
29 | |     if True:
30 | |         for _ in range(20):
31 | |             print("hello")
32 | |     elif False:
33 | |         for _ in range(20):
34 | |             print("hello")
35 | | elif x == 2:
36 | |     if True:
37 | |         for _ in range(20):
38 | |             print("hello")
39 | |     elif False:
40 | |         for _ in range(20):
41 | |             print("hello")
   | |__________________________^ SIM114
42 |
43 |   if (
   |
   = help: Combine `if` branches

ℹ Safe fix
25 25 |         for _ in range(20):
26 26 |             print("hello")
27 27 | 
28    |-if x == 1:
29    |-    if True:
30    |-        for _ in range(20):
31    |-            print("hello")
32    |-    elif False:
33    |-        for _ in range(20):
34    |-            print("hello")
35    |-elif x == 2:
   28 |+if x == 1 or x == 2:
36 29 |     if True:
37 30 |         for _ in range(20):
38 31 |             print("hello")

SIM114.py:29:5: SIM114 [*] Combine `if` branches using logical `or` operator
   |
28 |   if x == 1:
29 | /     if True:
30 | |         for _ in range(20):
31 | |             print("hello")
32 | |     elif False:
33 | |         for _ in range(20):
34 | |             print("hello")
   | |__________________________^ SIM114
35 |   elif x == 2:
36 |       if True:
   |
   = help: Combine `if` branches

ℹ Safe fix
26 26 |             print("hello")
27 27 | 
28 28 | if x == 1:
29    |-    if True:
30    |-        for _ in range(20):
31    |-            print("hello")
32    |-    elif False:
   29 |+    if True or False:
33 30 |         for _ in range(20):
34 31 |             print("hello")
35 32 | elif x == 2:

SIM114.py:36:5: SIM114 [*] Combine `if` branches using logical `or` operator
   |
34 |               print("hello")
35 |   elif x == 2:
36 | /     if True:
37 | |         for _ in range(20):
38 | |             print("hello")
39 | |     elif False:
40 | |         for _ in range(20):
41 | |             print("hello")
   | |__________________________^ SIM114
42 |
43 |   if (
   |
   = help: Combine `if` branches

ℹ Safe fix
33 33 |         for _ in range(20):
34 34 |             print("hello")
35 35 | elif x == 2:
36    |-    if True:
37    |-        for _ in range(20):
38    |-            print("hello")
39    |-    elif False:
   36 |+    if True or False:
40 37 |         for _ in range(20):
41 38 |             print("hello")
42 39 | 

SIM114.py:43:1: SIM114 [*] Combine `if` branches using logical `or` operator
   |
41 |               print("hello")
42 |
43 | / if (
44 | |     x == 1
45 | |     and y == 2
46 | |     and z == 3
47 | |     and a == 4
48 | |     and b == 5
49 | |     and c == 6
50 | |     and d == 7
51 | |     and e == 8
52 | |     and f == 9
53 | |     and g == 10
54 | |     and h == 11
55 | |     and i == 12
56 | |     and j == 13
57 | |     and k == 14
58 | | ):
59 | |     pass
60 | | elif 1 == 2:
61 | |     pass
   | |________^ SIM114
62 |
63 |   if result.eofs == "O":
   |
   = help: Combine `if` branches

ℹ Safe fix
55 55 |     and i == 12
56 56 |     and j == 13
57 57 |     and k == 14
58    |-):
59    |-    pass
60    |-elif 1 == 2:
   58 |+) or 1 == 2:
61 59 |     pass
62 60 | 
63 61 | if result.eofs == "O":

SIM114.py:67:1: SIM114 [*] Combine `if` branches using logical `or` operator
   |
65 |   elif result.eofs == "S":
66 |       skipped = 1
67 | / elif result.eofs == "F":
68 | |     errors = 1
69 | | elif result.eofs == "E":
70 | |     errors = 1
   | |______________^ SIM114
71 |   elif result.eofs == "X":
72 |       errors = 1
   |
   = help: Combine `if` branches

ℹ Safe fix
64 64 |     pass
65 65 | elif result.eofs == "S":
66 66 |     skipped = 1
67    |-elif result.eofs == "F":
68    |-    errors = 1
69    |-elif result.eofs == "E":
   67 |+elif result.eofs == "F" or result.eofs == "E":
70 68 |     errors = 1
71 69 | elif result.eofs == "X":
72 70 |     errors = 1

SIM114.py:69:1: SIM114 [*] Combine `if` branches using logical `or` operator
   |
67 |   elif result.eofs == "F":
68 |       errors = 1
69 | / elif result.eofs == "E":
70 | |     errors = 1
71 | | elif result.eofs == "X":
72 | |     errors = 1
   | |______________^ SIM114
73 |   elif result.eofs == "C":
74 |       errors = 1
   |
   = help: Combine `if` branches

ℹ Safe fix
66 66 |     skipped = 1
67 67 | elif result.eofs == "F":
68 68 |     errors = 1
69    |-elif result.eofs == "E":
70    |-    errors = 1
71    |-elif result.eofs == "X":
   69 |+elif result.eofs == "E" or result.eofs == "X":
72 70 |     errors = 1
73 71 | elif result.eofs == "C":
74 72 |     errors = 1

SIM114.py:71:1: SIM114 [*] Combine `if` branches using logical `or` operator
   |
69 |   elif result.eofs == "E":
70 |       errors = 1
71 | / elif result.eofs == "X":
72 | |     errors = 1
73 | | elif result.eofs == "C":
74 | |     errors = 1
   | |______________^ SIM114
75 |
76 |   if x == 1:
   |
   = help: Combine `if` branches

ℹ Safe fix
68 68 |     errors = 1
69 69 | elif result.eofs == "E":
70 70 |     errors = 1
71    |-elif result.eofs == "X":
72    |-    errors = 1
73    |-elif result.eofs == "C":
   71 |+elif result.eofs == "X" or result.eofs == "C":
74 72 |     errors = 1
75 73 | 
76 74 | if x == 1:

SIM114.py:76:1: SIM114 Combine `if` branches using logical `or` operator
   |
74 |       errors = 1
75 |
76 | / if x == 1:
77 | |     return True
78 | | # This is a standalone comment explaining something important
79 | | elif x == 2:
80 | |     return True
   | |_______________^ SIM114
81 |
82 |   if x == 1:
   |
   = help: Combine `if` branches

SIM114.py:82:1: SIM114 Combine `if` branches using logical `or` operator
   |
80 |       return True
81 |
82 | / if x == 1:
83 | |     return True  # case one
84 | | elif x == 2:
85 | |     return True  # case two
   | |_______________^ SIM114
86 |
87 |   if isinstance(exc, HTTPError) and (
   |
   = help: Combine `if` branches

SIM114.py:87:1: SIM114 Combine `if` branches using logical `or` operator
   |
85 |       return True  # case two
86 |
87 | / if isinstance(exc, HTTPError) and (
88 | |      (500 <= exc.status <= 599)
89 | |      or exc.status == 408  # server errors
90 | |      or exc.status == 429  # request timeout
91 | | ):  # too many requests
92 | |      return True
93 | |
94 | | # Consider all SSL errors as temporary. There are a lot of bug
95 | | # reports from people where various SSL errors cause a crash
96 | | elif isinstance(exc, ssl.SSLError):
97 | |      return True
   | |________________^ SIM114
   |
   = help: Combine `if` branches

SIM114.py:100:1: SIM114 Combine `if` branches using logical `or` operator
    |
100 | / if a:
101 | |     # Ignore branches with diverging comments because it means we're repeating
102 | |     # the bodies because we have different reasons for each branch
103 | |     x = 1
104 | | elif c:
105 | |     x = 1
    | |_________^ SIM114
106 |
107 |   # OK
    |
    = help: Combine `if` branches

SIM114.py:142:5: SIM114 [*] Combine `if` branches using logical `or` operator
    |
140 |       a = True
141 |       b = False
142 | /     if a > b:  # end-of-line
143 | |         return 3
144 | |     elif a == b:
145 | |         return 3
    | |________________^ SIM114
146 |       elif a < b:  # end-of-line
147 |           return 4
    |
    = help: Combine `if` branches

ℹ Safe fix
139 139 | def func():
140 140 |     a = True
141 141 |     b = False
142     |-    if a > b:  # end-of-line
143     |-        return 3
144     |-    elif a == b:
    142 |+    if a > b or a == b:  # end-of-line
145 143 |         return 3
146 144 |     elif a < b:  # end-of-line
147 145 |         return 4

SIM114.py:146:5: SIM114 [*] Combine `if` branches using logical `or` operator
    |
144 |       elif a == b:
145 |           return 3
146 | /     elif a < b:  # end-of-line
147 | |         return 4
148 | |     elif b is None:
149 | |         return 4
    | |________________^ SIM114
    |
    = help: Combine `if` branches

ℹ Safe fix
143 143 |         return 3
144 144 |     elif a == b:
145 145 |         return 3
146     |-    elif a < b:  # end-of-line
147     |-        return 4
148     |-    elif b is None:
    146 |+    elif a < b or b is None:  # end-of-line
149 147 |         return 4
150 148 | 
151 149 | 

SIM114.py:156:5: SIM114 [*] Combine `if` branches using logical `or` operator
    |
154 |       a = True
155 |       b = False
156 | /     if a > b:  # end-of-line
157 | |         return 3
158 | |     elif a := 1:
159 | |         return 3
    | |________________^ SIM114
    |
    = help: Combine `if` branches

ℹ Safe fix
153 153 |     """Ensure that the named expression is parenthesized when merged."""
154 154 |     a = True
155 155 |     b = False
156     |-    if a > b:  # end-of-line
157     |-        return 3
158     |-    elif a := 1:
    156 |+    if a > b or (a := 1):  # end-of-line
159 157 |         return 3
160 158 | 
161 159 | 

SIM114.py:162:1: SIM114 [*] Combine `if` branches using logical `or` operator
    |
162 | / if a:  # we preserve comments, too!
163 | |     b
164 | | elif c:  # but not on the second branch
165 | |     b
    | |_____^ SIM114
    |
    = help: Combine `if` branches

ℹ Safe fix
159 159 |         return 3
160 160 | 
161 161 | 
162     |-if a:  # we preserve comments, too!
163     |-    b
164     |-elif c:  # but not on the second branch
    162 |+if a or c:  # we preserve comments, too!
165 163 |     b
166 164 | 
167 165 | 

SIM114.py:168:1: SIM114 [*] Combine `if` branches using logical `or` operator
    |
168 | / if a: b  # here's a comment
169 | | elif c: b
    | |_________^ SIM114
    |
    = help: Combine `if` branches

ℹ Safe fix
165 165 |     b
166 166 | 
167 167 | 
168     |-if a: b  # here's a comment
169     |-elif c: b
    168 |+if a or c: b  # here's a comment
170 169 | 
171 170 | 
172 171 | if(x > 200): pass

SIM114.py:172:1: SIM114 [*] Combine `if` branches using logical `or` operator
    |
172 | / if(x > 200): pass
173 | | elif(100 < x and x < 200 and 300 < y and y < 800):
174 | |     pass
    | |________^ SIM114
    |
    = help: Combine `if` branches

ℹ Safe fix
169 169 | elif c: b
170 170 | 
171 171 | 
172     |-if(x > 200): pass
173     |-elif(100 < x and x < 200 and 300 < y and y < 800):
174     |-	pass
    172 |+if(x > 200) or (100 < x and x < 200 and 300 < y and y < 800): pass
175 173 | 
176 174 | 
177 175 | # See: https://github.com/astral-sh/ruff/issues/12732

SIM114.py:178:1: SIM114 [*] Combine `if` branches using logical `or` operator
    |
177 |   # See: https://github.com/astral-sh/ruff/issues/12732
178 | / if False if True else False:
179 | |     print(1)
180 | | elif True:
181 | |     print(1)
    | |____________^ SIM114
182 |   else:
183 |       print(2)
    |
    = help: Combine `if` branches

ℹ Safe fix
175 175 | 
176 176 | 
177 177 | # See: https://github.com/astral-sh/ruff/issues/12732
178     |-if False if True else False:
179     |-    print(1)
180     |-elif True:
    178 |+if (False if True else False) or True:
181 179 |     print(1)
182 180 | else:
183 181 |     print(2)

SIM114.py:185:1: SIM114 [*] Combine `if` branches using logical `or` operator
    |
183 |       print(2)
184 |
185 | / if x == 1:  # check for one
186 | |     return True
187 | | elif x == 2:  # check for two  
188 | |     return True
    | |_______________^ SIM114
189 |
190 |   if x == 1:
    |
    = help: Combine `if` branches

ℹ Safe fix
182 182 | else:
183 183 |     print(2)
184 184 | 
185     |-if x == 1:  # check for one
186     |-    return True
187     |-elif x == 2:  # check for two  
    185 |+if x == 1 or x == 2:  # check for one
188 186 |     return True
189 187 | 
190 188 | if x == 1:

SIM114.py:190:1: SIM114 Combine `if` branches using logical `or` operator
    |
188 |       return True
189 |
190 | / if x == 1:
191 | |     return True  # always true
192 | |     # end of branch
193 | | elif x == 2:
194 | |     return True  # always true
    | |_______________^ SIM114
195 |       # end of branch
    |
    = help: Combine `if` branches

SIM114.py:197:1: SIM114 [*] Combine `if` branches using logical `or` operator
    |
195 |       # end of branch
196 |
197 | / if x == 1:
198 | |     return True
199 | |     #
200 | | elif x == 2:
201 | |     return True
    | |_______________^ SIM114
202 |       #
    |
    = help: Combine `if` branches

ℹ Safe fix
194 194 |     return True  # always true
195 195 |     # end of branch
196 196 | 
197     |-if x == 1:
198     |-    return True
199     |-    #
200     |-elif x == 2:
    197 |+if x == 1 or x == 2:
201 198 |     return True
202 199 |     #
203 200 | 

SIM114.py:204:1: SIM114 [*] Combine `if` branches using logical `or` operator
    |
202 |       #
203 |
204 | / if isinstance(obj, str):  # string check
205 | |     process(obj)  # process it
206 | | elif isinstance(obj, int):  # number check
207 | |     process(obj)  # process it
    | |________________^ SIM114
    |
    = help: Combine `if` branches

ℹ Safe fix
201 201 |     return True
202 202 |     #
203 203 | 
204     |-if isinstance(obj, str):  # string check
205     |-    process(obj)  # process it
206     |-elif isinstance(obj, int):  # number check
    204 |+if isinstance(obj, str) or isinstance(obj, int):  # string check
207 205 |     process(obj)  # process it
208 206 |
