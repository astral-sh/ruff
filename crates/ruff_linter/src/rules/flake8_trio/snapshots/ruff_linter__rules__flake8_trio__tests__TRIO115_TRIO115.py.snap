---
source: crates/ruff_linter/src/rules/flake8_trio/mod.rs
---
TRIO115.py:5:11: TRIO115 [*] Use `trio.lowlevel.checkpoint()` instead of `trio.sleep(0)`
  |
3 |     from trio import sleep
4 | 
5 |     await trio.sleep(0)  # TRIO115
  |           ^^^^^^^^^^^^^ TRIO115
6 |     await trio.sleep(1)  # OK
7 |     await trio.sleep(0, 1)  # OK
  |
  = help: Replace with `trio.lowlevel.checkpoint()`

ℹ Safe fix
2 2 |     import trio
3 3 |     from trio import sleep
4 4 | 
5   |-    await trio.sleep(0)  # TRIO115
  5 |+    await trio.lowlevel.checkpoint  # TRIO115
6 6 |     await trio.sleep(1)  # OK
7 7 |     await trio.sleep(0, 1)  # OK
8 8 |     await trio.sleep(...)  # OK

TRIO115.py:11:5: TRIO115 [*] Use `trio.lowlevel.checkpoint()` instead of `trio.sleep(0)`
   |
 9 |     await trio.sleep()  # OK
10 | 
11 |     trio.sleep(0)  # TRIO115
   |     ^^^^^^^^^^^^^ TRIO115
12 |     foo = 0
13 |     trio.sleep(foo)  # TRIO115
   |
   = help: Replace with `trio.lowlevel.checkpoint()`

ℹ Safe fix
8  8  |     await trio.sleep(...)  # OK
9  9  |     await trio.sleep()  # OK
10 10 | 
11    |-    trio.sleep(0)  # TRIO115
   11 |+    trio.lowlevel.checkpoint  # TRIO115
12 12 |     foo = 0
13 13 |     trio.sleep(foo)  # TRIO115
14 14 |     trio.sleep(1)  # OK

TRIO115.py:13:5: TRIO115 [*] Use `trio.lowlevel.checkpoint()` instead of `trio.sleep(0)`
   |
11 |     trio.sleep(0)  # TRIO115
12 |     foo = 0
13 |     trio.sleep(foo)  # TRIO115
   |     ^^^^^^^^^^^^^^^ TRIO115
14 |     trio.sleep(1)  # OK
15 |     time.sleep(0)  # OK
   |
   = help: Replace with `trio.lowlevel.checkpoint()`

ℹ Safe fix
10 10 | 
11 11 |     trio.sleep(0)  # TRIO115
12 12 |     foo = 0
13    |-    trio.sleep(foo)  # TRIO115
   13 |+    trio.lowlevel.checkpoint  # TRIO115
14 14 |     trio.sleep(1)  # OK
15 15 |     time.sleep(0)  # OK
16 16 | 

TRIO115.py:17:5: TRIO115 [*] Use `trio.lowlevel.checkpoint()` instead of `trio.sleep(0)`
   |
15 |     time.sleep(0)  # OK
16 | 
17 |     sleep(0)  # TRIO115
   |     ^^^^^^^^ TRIO115
18 | 
19 |     bar = "bar"
   |
   = help: Replace with `trio.lowlevel.checkpoint()`

ℹ Safe fix
14 14 |     trio.sleep(1)  # OK
15 15 |     time.sleep(0)  # OK
16 16 | 
17    |-    sleep(0)  # TRIO115
   17 |+    trio.lowlevel.checkpoint  # TRIO115
18 18 | 
19 19 |     bar = "bar"
20 20 |     trio.sleep(bar)

TRIO115.py:23:5: TRIO115 [*] Use `trio.lowlevel.checkpoint()` instead of `trio.sleep(0)`
   |
22 |     x, y = 0, 2000
23 |     trio.sleep(x)  # TRIO115
   |     ^^^^^^^^^^^^^ TRIO115
24 |     trio.sleep(y)  # OK
   |
   = help: Replace with `trio.lowlevel.checkpoint()`

ℹ Safe fix
20 20 |     trio.sleep(bar)
21 21 | 
22 22 |     x, y = 0, 2000
23    |-    trio.sleep(x)  # TRIO115
   23 |+    trio.lowlevel.checkpoint  # TRIO115
24 24 |     trio.sleep(y)  # OK
25 25 | 
26 26 |     (a, b, [c, (d, e)]) = (1, 2, (0, [4, 0]))

TRIO115.py:27:5: TRIO115 [*] Use `trio.lowlevel.checkpoint()` instead of `trio.sleep(0)`
   |
26 |     (a, b, [c, (d, e)]) = (1, 2, (0, [4, 0]))
27 |     trio.sleep(c)  # TRIO115
   |     ^^^^^^^^^^^^^ TRIO115
28 |     trio.sleep(d)  # OK
29 |     trio.sleep(e)  # TRIO115
   |
   = help: Replace with `trio.lowlevel.checkpoint()`

ℹ Safe fix
24 24 |     trio.sleep(y)  # OK
25 25 | 
26 26 |     (a, b, [c, (d, e)]) = (1, 2, (0, [4, 0]))
27    |-    trio.sleep(c)  # TRIO115
   27 |+    trio.lowlevel.checkpoint  # TRIO115
28 28 |     trio.sleep(d)  # OK
29 29 |     trio.sleep(e)  # TRIO115
30 30 | 

TRIO115.py:29:5: TRIO115 [*] Use `trio.lowlevel.checkpoint()` instead of `trio.sleep(0)`
   |
27 |     trio.sleep(c)  # TRIO115
28 |     trio.sleep(d)  # OK
29 |     trio.sleep(e)  # TRIO115
   |     ^^^^^^^^^^^^^ TRIO115
30 | 
31 |     m_x, m_y = 0
   |
   = help: Replace with `trio.lowlevel.checkpoint()`

ℹ Safe fix
26 26 |     (a, b, [c, (d, e)]) = (1, 2, (0, [4, 0]))
27 27 |     trio.sleep(c)  # TRIO115
28 28 |     trio.sleep(d)  # OK
29    |-    trio.sleep(e)  # TRIO115
   29 |+    trio.lowlevel.checkpoint  # TRIO115
30 30 | 
31 31 |     m_x, m_y = 0
32 32 |     trio.sleep(m_y)

TRIO115.py:32:5: TRIO115 [*] Use `trio.lowlevel.checkpoint()` instead of `trio.sleep(0)`
   |
31 |     m_x, m_y = 0
32 |     trio.sleep(m_y)
   |     ^^^^^^^^^^^^^^^ TRIO115
33 |     trio.sleep(m_x)
   |
   = help: Replace with `trio.lowlevel.checkpoint()`

ℹ Safe fix
29 29 |     trio.sleep(e)  # TRIO115
30 30 | 
31 31 |     m_x, m_y = 0
32    |-    trio.sleep(m_y)
   32 |+    trio.lowlevel.checkpoint
33 33 |     trio.sleep(m_x)
34 34 | 
35 35 | 

TRIO115.py:33:5: TRIO115 [*] Use `trio.lowlevel.checkpoint()` instead of `trio.sleep(0)`
   |
31 |     m_x, m_y = 0
32 |     trio.sleep(m_y)
33 |     trio.sleep(m_x)
   |     ^^^^^^^^^^^^^^^ TRIO115
   |
   = help: Replace with `trio.lowlevel.checkpoint()`

ℹ Safe fix
30 30 | 
31 31 |     m_x, m_y = 0
32 32 |     trio.sleep(m_y)
33    |-    trio.sleep(m_x)
   33 |+    trio.lowlevel.checkpoint
34 34 | 
35 35 | 
36 36 | 

TRIO115.py:45:5: TRIO115 [*] Use `trio.lowlevel.checkpoint()` instead of `trio.sleep(0)`
   |
44 | def func():
45 |     sleep(0)  # TRIO115
   |     ^^^^^^^^ TRIO115
   |
   = help: Replace with `trio.lowlevel.checkpoint()`

ℹ Safe fix
39 39 |     trio.run(trio.sleep(0))  # TRIO115
40 40 | 
41 41 | 
42    |-from trio import Event, sleep
   42 |+from trio import Event, sleep, lowlevel
43 43 | 
44 44 | def func():
45    |-    sleep(0)  # TRIO115
   45 |+    lowlevel.checkpoint  # TRIO115


