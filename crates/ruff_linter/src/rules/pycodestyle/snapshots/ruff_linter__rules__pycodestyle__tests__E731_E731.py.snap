---
source: crates/ruff_linter/src/rules/pycodestyle/mod.rs
---
E731.py:3:5: E731 [*] Do not assign a `lambda` expression, use a `def`
  |
1 | def scope():
2 |     # E731
3 |     f = lambda x: 2 * x
  |     ^^^^^^^^^^^^^^^^^^^ E731
  |
  = help: Rewrite `f` as a `def`


E731.py:8:5: E731 [*] Do not assign a `lambda` expression, use a `def`
  |
6 | def scope():
7 |     # E731
8 |     f = lambda x: 2 * x
  |     ^^^^^^^^^^^^^^^^^^^ E731
  |
  = help: Rewrite `f` as a `def`


E731.py:14:9: E731 [*] Do not assign a `lambda` expression, use a `def`
   |
12 |     # E731
13 |     while False:
14 |         this = lambda y, z: 2 * x
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ E731
   |
   = help: Rewrite `this` as a `def`


E731.py:19:5: E731 [*] Do not assign a `lambda` expression, use a `def`
   |
17 | def scope():
18 |     # E731
19 |     f = lambda: (yield 1)
   |     ^^^^^^^^^^^^^^^^^^^^^ E731
   |
   = help: Rewrite `f` as a `def`


E731.py:24:5: E731 [*] Do not assign a `lambda` expression, use a `def`
   |
22 | def scope():
23 |     # E731
24 |     f = lambda: (yield from g())
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E731
   |
   = help: Rewrite `f` as a `def`


E731.py:57:5: E731 Do not assign a `lambda` expression, use a `def`
   |
55 | class Scope:
56 |     # E731
57 |     f = lambda x: 2 * x
   |     ^^^^^^^^^^^^^^^^^^^ E731
   |
   = help: Rewrite `f` as a `def`


E731.py:73:9: E731 Do not assign a `lambda` expression, use a `def`
   |
71 |     x: Callable[[int], int]
72 |     if True:
73 |         x = lambda: 1
   |         ^^^^^^^^^^^^^ E731
74 |     else:
75 |         x = lambda: 2
   |
   = help: Rewrite `x` as a `def`


E731.py:75:9: E731 Do not assign a `lambda` expression, use a `def`
   |
73 |         x = lambda: 1
74 |     else:
75 |         x = lambda: 2
   |         ^^^^^^^^^^^^^ E731
76 |     return x
   |
   = help: Rewrite `x` as a `def`


E731.py:86:5: E731 [*] Do not assign a `lambda` expression, use a `def`
   |
84 |     # ParamSpec cannot be used in this context, so do not preserve the annotation.
85 |     P = ParamSpec("P")
86 |     f: Callable[P, int] = lambda *args: len(args)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E731
   |
   = help: Rewrite `f` as a `def`


E731.py:94:5: E731 [*] Do not assign a `lambda` expression, use a `def`
   |
92 |     from typing import Callable
93 | 
94 |     f: Callable[[], None] = lambda: None
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E731
   |
   = help: Rewrite `f` as a `def`


E731.py:102:5: E731 [*] Do not assign a `lambda` expression, use a `def`
    |
100 |     from typing import Callable
101 | 
102 |     f: Callable[..., None] = lambda a, b: None
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E731
    |
    = help: Rewrite `f` as a `def`


E731.py:110:5: E731 [*] Do not assign a `lambda` expression, use a `def`
    |
108 |     from typing import Callable
109 | 
110 |     f: Callable[[int], int] = lambda x: 2 * x
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E731
    |
    = help: Rewrite `f` as a `def`


E731.py:119:5: E731 [*] Do not assign a `lambda` expression, use a `def`
    |
117 |     from collections.abc import Callable
118 | 
119 |     f: Callable[[str, int], str] = lambda a, b: a * b
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E731
    |
    = help: Rewrite `f` as a `def`


E731.py:127:5: E731 [*] Do not assign a `lambda` expression, use a `def`
    |
125 |     from collections.abc import Callable
126 | 
127 |     f: Callable[[str, int], tuple[str, int]] = lambda a, b: (a, b)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E731
    |
    = help: Rewrite `f` as a `def`


E731.py:135:5: E731 [*] Do not assign a `lambda` expression, use a `def`
    |
133 |     from collections.abc import Callable
134 | 
135 |     f: Callable[[str, int, list[str]], list[str]] = lambda a, b, /, c: [*c, a * b]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E731
    |
    = help: Rewrite `f` as a `def`


E731.py:139:5: E731 Do not assign a `lambda` expression, use a `def`
    |
138 | class TemperatureScales(Enum):
139 |     CELSIUS = (lambda deg_c: deg_c)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E731
140 |     FAHRENHEIT = (lambda deg_c: deg_c * 9 / 5 + 32)
    |
    = help: Rewrite `CELSIUS` as a `def`


E731.py:140:5: E731 Do not assign a `lambda` expression, use a `def`
    |
138 | class TemperatureScales(Enum):
139 |     CELSIUS = (lambda deg_c: deg_c)
140 |     FAHRENHEIT = (lambda deg_c: deg_c * 9 / 5 + 32)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E731
    |
    = help: Rewrite `FAHRENHEIT` as a `def`


E731.py:147:5: E731 [*] Do not assign a `lambda` expression, use a `def`
    |
145 |       # E731
146 |   
147 |       f = lambda: (
    |  _____^
148 | |         i := 1,
149 | |     )
    | |_____^ E731
    |
    = help: Rewrite `f` as a `def`
