---
source: crates/ruff_linter/src/rules/pycodestyle/mod.rs
---
I001 [*] Import block is un-sorted or un-formatted
 --> E30_isort.pyi:1:1
  |
1 | / import json
2 | |
3 | |
4 | |
5 | | from typing import Any, Sequence
  | |________________________________^
  |
help: Organize imports
1 | import json
  - 
  - 
  - 
2 | from typing import Any, Sequence
  - 
3 | 
4 | class MissingCommand(TypeError): ...  # noqa: N818
5 | 

E303 [*] Too many blank lines (3)
 --> E30_isort.pyi:5:1
  |
5 | from typing import Any, Sequence
  | ^^^^
  |
help: Remove extraneous blank line(s)
1 | import json
2 | 
  - 
  - 
3 | from typing import Any, Sequence
4 | 
5 | 

E303 [*] Too many blank lines (2)
 --> E30_isort.pyi:8:1
  |
8 | class MissingCommand(TypeError): ...  # noqa: N818
  | ^^^^^
  |
help: Remove extraneous blank line(s)
4 | 
5 | from typing import Any, Sequence
6 | 
  - 
7 | class MissingCommand(TypeError): ...  # noqa: N818
8 | 
9 | 

E303 [*] Too many blank lines (2)
  --> E30_isort.pyi:11:1
   |
11 | class BackendProxy:
   | ^^^^^
12 |     backend_module: str
13 |     backend_object: str | None
   |
help: Remove extraneous blank line(s)
7  | 
8  | class MissingCommand(TypeError): ...  # noqa: N818
9  | 
   - 
10 | class BackendProxy:
11 |     backend_module: str
12 |     backend_object: str | None

E303 [*] Too many blank lines (2)
  --> E30_isort.pyi:17:1
   |
17 | if __name__ == "__main__":
   | ^^
18 |     import abcd
   |
help: Remove extraneous blank line(s)
13 |     backend_object: str | None
14 |     backend: Any
15 | 
   - 
16 | if __name__ == "__main__":
17 |     import abcd
18 | 

E303 [*] Too many blank lines (2)
  --> E30_isort.pyi:21:5
   |
21 |     abcd.foo()
   |     ^^^^
22 |
23 | def __init__(self, backend_module: str, backend_obj: str | None) -> None: ...
   |
help: Remove extraneous blank line(s)
17 | if __name__ == "__main__":
18 |     import abcd
19 | 
   - 
20 |     abcd.foo()
21 | 
22 | def __init__(self, backend_module: str, backend_obj: str | None) -> None: ...

I001 [*] Import block is un-sorted or un-formatted
  --> E30_isort.pyi:26:5
   |
25 |   if TYPE_CHECKING:
26 | /     import os
27 | |
28 | |
29 | |
30 | |     from typing_extensions import TypeAlias
   | |___________________________________________^
   |
help: Organize imports
25 | if TYPE_CHECKING:
26 |     import os
27 | 
   - 
   - 
28 |     from typing_extensions import TypeAlias
29 | 
30 | 

E303 [*] Too many blank lines (3)
  --> E30_isort.pyi:30:5
   |
30 |     from typing_extensions import TypeAlias
   |     ^^^^
   |
help: Remove extraneous blank line(s)
25 | if TYPE_CHECKING:
26 |     import os
27 | 
   - 
   - 
28 |     from typing_extensions import TypeAlias
29 | 
30 | 

E303 [*] Too many blank lines (2)
  --> E30_isort.pyi:33:5
   |
33 |     abcd.foo()
   |     ^^^^
34 |
35 | def __call__(self, name: str, *args: Any, **kwargs: Any) -> Any:
   |
help: Remove extraneous blank line(s)
29 | 
30 |     from typing_extensions import TypeAlias
31 | 
   - 
32 |     abcd.foo()
33 | 
34 | def __call__(self, name: str, *args: Any, **kwargs: Any) -> Any:

E303 [*] Too many blank lines (2)
  --> E30_isort.pyi:45:1
   |
45 | def _exit(self) -> None: ...
   | ^^^
   |
help: Remove extraneous blank line(s)
41 | def __call__2(self, name: str, *args: Any, **kwargs: Any) -> Any:
42 |     ...
43 | 
   - 
44 | def _exit(self) -> None: ...
45 | 
46 | 

E303 [*] Too many blank lines (2)
  --> E30_isort.pyi:48:1
   |
48 | def _optional_commands(self) -> dict[str, bool]: ...
   | ^^^
   |
help: Remove extraneous blank line(s)
44 | 
45 | def _exit(self) -> None: ...
46 | 
   - 
47 | def _optional_commands(self) -> dict[str, bool]: ...
48 | 
49 | 

E303 [*] Too many blank lines (2)
  --> E30_isort.pyi:51:1
   |
51 | def run(argv: Sequence[str]) -> int: ...
   | ^^^
   |
help: Remove extraneous blank line(s)
47 | 
48 | def _optional_commands(self) -> dict[str, bool]: ...
49 | 
   - 
50 | def run(argv: Sequence[str]) -> int: ...
51 | 
52 | 

E303 [*] Too many blank lines (2)
  --> E30_isort.pyi:54:1
   |
54 | def read_line(fd: int = 0) -> bytearray: ...
   | ^^^
   |
help: Remove extraneous blank line(s)
50 | 
51 | def run(argv: Sequence[str]) -> int: ...
52 | 
   - 
53 | def read_line(fd: int = 0) -> bytearray: ...
54 | 
55 | 

E303 [*] Too many blank lines (2)
  --> E30_isort.pyi:57:1
   |
57 | def flush() -> None: ...
   | ^^^
   |
help: Remove extraneous blank line(s)
53 | 
54 | def read_line(fd: int = 0) -> bytearray: ...
55 | 
   - 
56 | def flush() -> None: ...
57 | 
58 | 

E303 [*] Too many blank lines (2)
  --> E30_isort.pyi:60:1
   |
60 | from typing import Any, Sequence
   | ^^^^
61 |
62 | class MissingCommand(TypeError): ...  # noqa: N818
   |
help: Remove extraneous blank line(s)
56 | 
57 | def flush() -> None: ...
58 | 
   - 
59 | from typing import Any, Sequence
60 | 
61 | class MissingCommand(TypeError): ...  # noqa: N818
