---
source: crates/ruff_linter/src/rules/pycodestyle/mod.rs
---
W605 [*] Invalid escape sequence: `\.`
 --> W605_1.py:4:11
  |
3 | #: W605:1:10
4 | regex = f'\.png$'
  |           ^^
5 |
6 | #: W605:2:1
  |
help: Use a raw string literal
1 | # Same as `W605_0.py` but using f-strings and t-strings instead.
2 | 
3 | #: W605:1:10
  - regex = f'\.png$'
4 + regex = rf'\.png$'
5 | 
6 | #: W605:2:1
7 | regex = f'''

W605 [*] Invalid escape sequence: `\.`
 --> W605_1.py:8:1
  |
6 | #: W605:2:1
7 | regex = f'''
8 | \.png$
  | ^^
9 | '''
  |
help: Use a raw string literal
4  | regex = f'\.png$'
5  | 
6  | #: W605:2:1
   - regex = f'''
7  + regex = rf'''
8  | \.png$
9  | '''
10 | 

W605 [*] Invalid escape sequence: `\_`
  --> W605_1.py:13:7
   |
11 | #: W605:2:6
12 | f(
13 |     f'\_'
   |       ^^
14 | )
   |
help: Use a raw string literal
10 | 
11 | #: W605:2:6
12 | f(
   -     f'\_'
13 +     rf'\_'
14 | )
15 | 
16 | #: W605:4:6

W605 [*] Invalid escape sequence: `\_`
  --> W605_1.py:20:6
   |
18 | multi-line
19 | literal
20 | with \_ somewhere
   |      ^^
21 | in the middle
22 | """
   |
help: Use a raw string literal
14 | )
15 | 
16 | #: W605:4:6
   - f"""
17 + rf"""
18 | multi-line
19 | literal
20 | with \_ somewhere

W605 [*] Invalid escape sequence: `\_`
  --> W605_1.py:25:40
   |
24 | #: W605:1:38
25 | value = f'new line\nand invalid escape \_ here'
   |                                        ^^
   |
help: Add backslash to escape sequence
22 | """
23 | 
24 | #: W605:1:38
   - value = f'new line\nand invalid escape \_ here'
25 + value = f'new line\nand invalid escape \\_ here'
26 | 
27 | 
28 | #: Okay

W605 [*] Invalid escape sequence: `\_`
  --> W605_1.py:43:13
   |
41 | '''  # noqa
42 |
43 | regex = f'\\\_'
   |             ^^
44 | value = f'\{{1}}'
45 | value = f'\{1}'
   |
help: Add backslash to escape sequence
40 | \w
41 | '''  # noqa
42 | 
   - regex = f'\\\_'
43 + regex = f'\\\\_'
44 | value = f'\{{1}}'
45 | value = f'\{1}'
46 | value = f'{1:\}'

W605 [*] Invalid escape sequence: `\{`
  --> W605_1.py:44:11
   |
43 | regex = f'\\\_'
44 | value = f'\{{1}}'
   |           ^^
45 | value = f'\{1}'
46 | value = f'{1:\}'
   |
help: Use a raw string literal
41 | '''  # noqa
42 | 
43 | regex = f'\\\_'
   - value = f'\{{1}}'
44 + value = rf'\{{1}}'
45 | value = f'\{1}'
46 | value = f'{1:\}'
47 | value = f"{f"\{1}"}"

W605 [*] Invalid escape sequence: `\{`
  --> W605_1.py:45:11
   |
43 | regex = f'\\\_'
44 | value = f'\{{1}}'
45 | value = f'\{1}'
   |           ^^
46 | value = f'{1:\}'
47 | value = f"{f"\{1}"}"
   |
help: Use a raw string literal
42 | 
43 | regex = f'\\\_'
44 | value = f'\{{1}}'
   - value = f'\{1}'
45 + value = rf'\{1}'
46 | value = f'{1:\}'
47 | value = f"{f"\{1}"}"
48 | value = rf"{f"\{1}"}"

W605 [*] Invalid escape sequence: `\}`
  --> W605_1.py:46:14
   |
44 | value = f'\{{1}}'
45 | value = f'\{1}'
46 | value = f'{1:\}'
   |              ^^
47 | value = f"{f"\{1}"}"
48 | value = rf"{f"\{1}"}"
   |
help: Use a raw string literal
43 | regex = f'\\\_'
44 | value = f'\{{1}}'
45 | value = f'\{1}'
   - value = f'{1:\}'
46 + value = rf'{1:\}'
47 | value = f"{f"\{1}"}"
48 | value = rf"{f"\{1}"}"
49 | 

W605 [*] Invalid escape sequence: `\{`
  --> W605_1.py:47:14
   |
45 | value = f'\{1}'
46 | value = f'{1:\}'
47 | value = f"{f"\{1}"}"
   |              ^^
48 | value = rf"{f"\{1}"}"
   |
help: Use a raw string literal
44 | value = f'\{{1}}'
45 | value = f'\{1}'
46 | value = f'{1:\}'
   - value = f"{f"\{1}"}"
47 + value = f"{rf"\{1}"}"
48 | value = rf"{f"\{1}"}"
49 | 
50 | # Okay

W605 [*] Invalid escape sequence: `\{`
  --> W605_1.py:48:15
   |
46 | value = f'{1:\}'
47 | value = f"{f"\{1}"}"
48 | value = rf"{f"\{1}"}"
   |               ^^
49 |
50 | # Okay
   |
help: Use a raw string literal
45 | value = f'\{1}'
46 | value = f'{1:\}'
47 | value = f"{f"\{1}"}"
   - value = rf"{f"\{1}"}"
48 + value = rf"{rf"\{1}"}"
49 | 
50 | # Okay
51 | value = rf'\{{1}}'

W605 [*] Invalid escape sequence: `\d`
  --> W605_1.py:57:9
   |
56 | # Regression tests for https://github.com/astral-sh/ruff/issues/10434
57 | f"{{}}+-\d"
   |         ^^
58 | f"\n{{}}+-\d+"
59 | f"\n{{}}�+-\d+"
   |
help: Use a raw string literal
54 | value = f"{rf"\{1}"}"
55 | 
56 | # Regression tests for https://github.com/astral-sh/ruff/issues/10434
   - f"{{}}+-\d"
57 + rf"{{}}+-\d"
58 | f"\n{{}}+-\d+"
59 | f"\n{{}}�+-\d+"
60 | 

W605 [*] Invalid escape sequence: `\d`
  --> W605_1.py:58:11
   |
56 | # Regression tests for https://github.com/astral-sh/ruff/issues/10434
57 | f"{{}}+-\d"
58 | f"\n{{}}+-\d+"
   |           ^^
59 | f"\n{{}}�+-\d+"
   |
help: Add backslash to escape sequence
55 | 
56 | # Regression tests for https://github.com/astral-sh/ruff/issues/10434
57 | f"{{}}+-\d"
   - f"\n{{}}+-\d+"
58 + f"\n{{}}+-\\d+"
59 | f"\n{{}}�+-\d+"
60 | 
61 | # See https://github.com/astral-sh/ruff/issues/11491

W605 [*] Invalid escape sequence: `\d`
  --> W605_1.py:59:12
   |
57 | f"{{}}+-\d"
58 | f"\n{{}}+-\d+"
59 | f"\n{{}}�+-\d+"
   |            ^^
60 |
61 | # See https://github.com/astral-sh/ruff/issues/11491
   |
help: Add backslash to escape sequence
56 | # Regression tests for https://github.com/astral-sh/ruff/issues/10434
57 | f"{{}}+-\d"
58 | f"\n{{}}+-\d+"
   - f"\n{{}}�+-\d+"
59 + f"\n{{}}�+-\\d+"
60 | 
61 | # See https://github.com/astral-sh/ruff/issues/11491
62 | total = 10

W605 [*] Invalid escape sequence: `\I`
  --> W605_1.py:65:31
   |
63 | ok = 7
64 | incomplete = 3
65 | s = f"TOTAL: {total}\nOK: {ok}\INCOMPLETE: {incomplete}\n"
   |                               ^^
66 |
67 | # Debug text (should trigger)
   |
help: Add backslash to escape sequence
62 | total = 10
63 | ok = 7
64 | incomplete = 3
   - s = f"TOTAL: {total}\nOK: {ok}\INCOMPLETE: {incomplete}\n"
65 + s = f"TOTAL: {total}\nOK: {ok}\\INCOMPLETE: {incomplete}\n"
66 | 
67 | # Debug text (should trigger)
68 | t = f"{'\InHere'=}"

W605 [*] Invalid escape sequence: `\I`
  --> W605_1.py:68:9
   |
67 | # Debug text (should trigger)
68 | t = f"{'\InHere'=}"
   |         ^^
   |
help: Use a raw string literal
65 | s = f"TOTAL: {total}\nOK: {ok}\INCOMPLETE: {incomplete}\n"
66 | 
67 | # Debug text (should trigger)
   - t = f"{'\InHere'=}"
68 + t = f"{r'\InHere'=}"
69 | 
70 | 
71 | 

W605 [*] Invalid escape sequence: `\.`
  --> W605_1.py:73:11
   |
72 | #: W605:1:10
73 | regex = t'\.png$'
   |           ^^
74 |
75 | #: W605:2:1
   |
help: Use a raw string literal
70 | 
71 | 
72 | #: W605:1:10
   - regex = t'\.png$'
73 + regex = rt'\.png$'
74 | 
75 | #: W605:2:1
76 | regex = t'''

W605 [*] Invalid escape sequence: `\.`
  --> W605_1.py:77:1
   |
75 | #: W605:2:1
76 | regex = t'''
77 | \.png$
   | ^^
78 | '''
   |
help: Use a raw string literal
73 | regex = t'\.png$'
74 | 
75 | #: W605:2:1
   - regex = t'''
76 + regex = rt'''
77 | \.png$
78 | '''
79 | 

W605 [*] Invalid escape sequence: `\_`
  --> W605_1.py:82:7
   |
80 | #: W605:2:6
81 | f(
82 |     t'\_'
   |       ^^
83 | )
   |
help: Use a raw string literal
79 | 
80 | #: W605:2:6
81 | f(
   -     t'\_'
82 +     rt'\_'
83 | )
84 | 
85 | #: W605:4:6

W605 [*] Invalid escape sequence: `\_`
  --> W605_1.py:89:6
   |
87 | multi-line
88 | literal
89 | with \_ somewhere
   |      ^^
90 | in the middle
91 | """
   |
help: Use a raw string literal
83 | )
84 | 
85 | #: W605:4:6
   - t"""
86 + rt"""
87 | multi-line
88 | literal
89 | with \_ somewhere

W605 [*] Invalid escape sequence: `\_`
  --> W605_1.py:94:40
   |
93 | #: W605:1:38
94 | value = t'new line\nand invalid escape \_ here'
   |                                        ^^
   |
help: Add backslash to escape sequence
91 | """
92 | 
93 | #: W605:1:38
   - value = t'new line\nand invalid escape \_ here'
94 + value = t'new line\nand invalid escape \\_ here'
95 | 
96 | 
97 | #: Okay

W605 [*] Invalid escape sequence: `\w`
   --> W605_1.py:109:1
    |
107 | regex = t'\w'  # noqa
108 | regex = t'''
109 | \w
    | ^^
110 | '''  # noqa
    |
help: Use a raw string literal
105 | '''
106 | s = t'\\'
107 | regex = t'\w'  # noqa
    - regex = t'''
108 + regex = rt'''
109 | \w
110 | '''  # noqa
111 | 

W605 [*] Invalid escape sequence: `\_`
   --> W605_1.py:112:13
    |
110 | '''  # noqa
111 |
112 | regex = t'\\\_'
    |             ^^
113 | value = t'\{{1}}'
114 | value = t'\{1}'
    |
help: Add backslash to escape sequence
109 | \w
110 | '''  # noqa
111 | 
    - regex = t'\\\_'
112 + regex = t'\\\\_'
113 | value = t'\{{1}}'
114 | value = t'\{1}'
115 | value = t'{1:\}'

W605 [*] Invalid escape sequence: `\{`
   --> W605_1.py:113:11
    |
112 | regex = t'\\\_'
113 | value = t'\{{1}}'
    |           ^^
114 | value = t'\{1}'
115 | value = t'{1:\}'
    |
help: Use a raw string literal
110 | '''  # noqa
111 | 
112 | regex = t'\\\_'
    - value = t'\{{1}}'
113 + value = rt'\{{1}}'
114 | value = t'\{1}'
115 | value = t'{1:\}'
116 | value = t"{t"\{1}"}"

W605 [*] Invalid escape sequence: `\{`
   --> W605_1.py:114:11
    |
112 | regex = t'\\\_'
113 | value = t'\{{1}}'
114 | value = t'\{1}'
    |           ^^
115 | value = t'{1:\}'
116 | value = t"{t"\{1}"}"
    |
help: Use a raw string literal
111 | 
112 | regex = t'\\\_'
113 | value = t'\{{1}}'
    - value = t'\{1}'
114 + value = rt'\{1}'
115 | value = t'{1:\}'
116 | value = t"{t"\{1}"}"
117 | value = rt"{t"\{1}"}"

W605 [*] Invalid escape sequence: `\}`
   --> W605_1.py:115:14
    |
113 | value = t'\{{1}}'
114 | value = t'\{1}'
115 | value = t'{1:\}'
    |              ^^
116 | value = t"{t"\{1}"}"
117 | value = rt"{t"\{1}"}"
    |
help: Use a raw string literal
112 | regex = t'\\\_'
113 | value = t'\{{1}}'
114 | value = t'\{1}'
    - value = t'{1:\}'
115 + value = rt'{1:\}'
116 | value = t"{t"\{1}"}"
117 | value = rt"{t"\{1}"}"
118 | 

W605 [*] Invalid escape sequence: `\{`
   --> W605_1.py:116:14
    |
114 | value = t'\{1}'
115 | value = t'{1:\}'
116 | value = t"{t"\{1}"}"
    |              ^^
117 | value = rt"{t"\{1}"}"
    |
help: Use a raw string literal
113 | value = t'\{{1}}'
114 | value = t'\{1}'
115 | value = t'{1:\}'
    - value = t"{t"\{1}"}"
116 + value = t"{rt"\{1}"}"
117 | value = rt"{t"\{1}"}"
118 | 
119 | # Okay

W605 [*] Invalid escape sequence: `\{`
   --> W605_1.py:117:15
    |
115 | value = t'{1:\}'
116 | value = t"{t"\{1}"}"
117 | value = rt"{t"\{1}"}"
    |               ^^
118 |
119 | # Okay
    |
help: Use a raw string literal
114 | value = t'\{1}'
115 | value = t'{1:\}'
116 | value = t"{t"\{1}"}"
    - value = rt"{t"\{1}"}"
117 + value = rt"{rt"\{1}"}"
118 | 
119 | # Okay
120 | value = rt'\{{1}}'

W605 [*] Invalid escape sequence: `\d`
   --> W605_1.py:126:9
    |
125 | # Regression tests for https://github.com/astral-sh/ruff/issues/10434
126 | t"{{}}+-\d"
    |         ^^
127 | t"\n{{}}+-\d+"
128 | t"\n{{}}�+-\d+"
    |
help: Use a raw string literal
123 | value = t"{rt"\{1}"}"
124 | 
125 | # Regression tests for https://github.com/astral-sh/ruff/issues/10434
    - t"{{}}+-\d"
126 + rt"{{}}+-\d"
127 | t"\n{{}}+-\d+"
128 | t"\n{{}}�+-\d+"
129 | 

W605 [*] Invalid escape sequence: `\d`
   --> W605_1.py:127:11
    |
125 | # Regression tests for https://github.com/astral-sh/ruff/issues/10434
126 | t"{{}}+-\d"
127 | t"\n{{}}+-\d+"
    |           ^^
128 | t"\n{{}}�+-\d+"
    |
help: Add backslash to escape sequence
124 | 
125 | # Regression tests for https://github.com/astral-sh/ruff/issues/10434
126 | t"{{}}+-\d"
    - t"\n{{}}+-\d+"
127 + t"\n{{}}+-\\d+"
128 | t"\n{{}}�+-\d+"
129 | 
130 | # See https://github.com/astral-sh/ruff/issues/11491

W605 [*] Invalid escape sequence: `\d`
   --> W605_1.py:128:12
    |
126 | t"{{}}+-\d"
127 | t"\n{{}}+-\d+"
128 | t"\n{{}}�+-\d+"
    |            ^^
129 |
130 | # See https://github.com/astral-sh/ruff/issues/11491
    |
help: Add backslash to escape sequence
125 | # Regression tests for https://github.com/astral-sh/ruff/issues/10434
126 | t"{{}}+-\d"
127 | t"\n{{}}+-\d+"
    - t"\n{{}}�+-\d+"
128 + t"\n{{}}�+-\\d+"
129 | 
130 | # See https://github.com/astral-sh/ruff/issues/11491
131 | total = 10

W605 [*] Invalid escape sequence: `\I`
   --> W605_1.py:134:31
    |
132 | ok = 7
133 | incomplete = 3
134 | s = t"TOTAL: {total}\nOK: {ok}\INCOMPLETE: {incomplete}\n"
    |                               ^^
135 |
136 | # Debug text (should trigger)
    |
help: Add backslash to escape sequence
131 | total = 10
132 | ok = 7
133 | incomplete = 3
    - s = t"TOTAL: {total}\nOK: {ok}\INCOMPLETE: {incomplete}\n"
134 + s = t"TOTAL: {total}\nOK: {ok}\\INCOMPLETE: {incomplete}\n"
135 | 
136 | # Debug text (should trigger)
137 | t = t"{'\InHere'=}"

W605 [*] Invalid escape sequence: `\I`
   --> W605_1.py:137:9
    |
136 | # Debug text (should trigger)
137 | t = t"{'\InHere'=}"
    |         ^^
    |
help: Use a raw string literal
134 | s = t"TOTAL: {total}\nOK: {ok}\INCOMPLETE: {incomplete}\n"
135 | 
136 | # Debug text (should trigger)
    - t = t"{'\InHere'=}"
137 + t = t"{r'\InHere'=}"
