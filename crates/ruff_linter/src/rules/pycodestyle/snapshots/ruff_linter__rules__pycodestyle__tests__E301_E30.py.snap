---
source: crates/ruff_linter/src/rules/pycodestyle/mod.rs
---
E30.py:486:5: E301 [*] Expected 1 blank line, found 0
    |
484 |     def func1():
485 |         pass
486 |     def func2():
    |     ^^^ E301
487 |         pass
488 | # end
    |
    = help: Add missing blank line

ℹ Safe fix
483 483 | 
484 484 |     def func1():
485 485 |         pass
    486 |+
486 487 |     def func2():
487 488 |         pass
488 489 | # end

E30.py:497:5: E301 [*] Expected 1 blank line, found 0
    |
495 |         pass
496 |     # comment
497 |     def fn2():
    |     ^^^ E301
498 |         pass
499 | # end
    |
    = help: Add missing blank line

ℹ Safe fix
493 493 | 
494 494 |     def fn1():
495 495 |         pass
    496 |+
496 497 |     # comment
497 498 |     def fn2():
498 499 |         pass

E30.py:507:5: E301 [*] Expected 1 blank line, found 0
    |
506 |     columns = []
507 |     @classmethod
    |     ^ E301
508 |     def cls_method(cls) -> None:
509 |         pass
    |
    = help: Add missing blank line

ℹ Safe fix
504 504 |     """Class for minimal repo."""
505 505 | 
506 506 |     columns = []
    507 |+
507 508 |     @classmethod
508 509 |     def cls_method(cls) -> None:
509 510 |         pass

E30.py:519:5: E301 [*] Expected 1 blank line, found 0
    |
517 |     def method(cls) -> None:
518 |         pass
519 |     @classmethod
    |     ^ E301
520 |     def cls_method(cls) -> None:
521 |         pass
    |
    = help: Add missing blank line

ℹ Safe fix
516 516 | 
517 517 |     def method(cls) -> None:
518 518 |         pass
    519 |+
519 520 |     @classmethod
520 521 |     def cls_method(cls) -> None:
521 522 |         pass

E30.py:534:5: E301 [*] Expected 1 blank line, found 0
    |
532 |     def bar(self, x: str) -> str:
533 |         ...
534 |     def bar(self, x: int | str) -> int | str:
    |     ^^^ E301
535 |         return x
536 | # end
    |
    = help: Add missing blank line

ℹ Safe fix
531 531 |     @overload
532 532 |     def bar(self, x: str) -> str:
533 533 |         ...
    534 |+
534 535 |     def bar(self, x: int | str) -> int | str:
535 536 |         return x
536 537 | # end
