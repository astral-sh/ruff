---
source: crates/ruff_linter/src/rules/pycodestyle/mod.rs
---
E301 [*] Expected 1 blank line, found 0
   --> E30.py:478:5
    |
476 |     def func1():
477 |         pass
478 |     def func2():
    |     ^^^
479 |         pass
480 | # end
    |
help: Add missing blank line
475 | 
476 |     def func1():
477 |         pass
478 + 
479 |     def func2():
480 |         pass
481 | # end

E301 [*] Expected 1 blank line, found 0
   --> E30.py:489:5
    |
487 |         pass
488 |     # comment
489 |     def fn2():
    |     ^^^
490 |         pass
491 | # end
    |
help: Add missing blank line
485 | 
486 |     def fn1():
487 |         pass
488 + 
489 |     # comment
490 |     def fn2():
491 |         pass

E301 [*] Expected 1 blank line, found 0
   --> E30.py:499:5
    |
498 |     columns = []
499 |     @classmethod
    |     ^
500 |     def cls_method(cls) -> None:
501 |         pass
    |
help: Add missing blank line
496 |     """Class for minimal repo."""
497 | 
498 |     columns = []
499 + 
500 |     @classmethod
501 |     def cls_method(cls) -> None:
502 |         pass

E301 [*] Expected 1 blank line, found 0
   --> E30.py:511:5
    |
509 |     def method(cls) -> None:
510 |         pass
511 |     @classmethod
    |     ^
512 |     def cls_method(cls) -> None:
513 |         pass
    |
help: Add missing blank line
508 | 
509 |     def method(cls) -> None:
510 |         pass
511 + 
512 |     @classmethod
513 |     def cls_method(cls) -> None:
514 |         pass

E301 [*] Expected 1 blank line, found 0
   --> E30.py:526:5
    |
524 |     def bar(self, x: str) -> str:
525 |         ...
526 |     def bar(self, x: int | str) -> int | str:
    |     ^^^
527 |         return x
528 | # end
    |
help: Add missing blank line
523 |     @overload
524 |     def bar(self, x: str) -> str:
525 |         ...
526 + 
527 |     def bar(self, x: int | str) -> int | str:
528 |         return x
529 | # end

E301 [*] Expected 1 blank line, found 0
   --> E30.py:983:9
    |
981 |     async def recv(self, *, length=65536):
982 |         loop = asyncio.get_event_loop()
983 |         def callback():
    |         ^^^
984 |             loop.remove_reader(self._fd)
985 |         loop.add_reader(self._fd, callback)
    |
help: Add missing blank line
980 | class foo:
981 |     async def recv(self, *, length=65536):
982 |         loop = asyncio.get_event_loop()
983 + 
984 |         def callback():
985 |             loop.remove_reader(self._fd)
986 |         loop.add_reader(self._fd, callback)

E301 [*] Expected 1 blank line, found 0
   --> E30.py:993:9
    |
991 |     if True:
992 |         print("conditional")
993 |         def test():
    |         ^^^
994 |             pass
995 | # end
    |
help: Add missing blank line
990 | class Foo:
991 |     if True:
992 |         print("conditional")
993 + 
994 |         def test():
995 |             pass
996 | # end

E301 [*] Expected 1 blank line, found 0
    --> E30.py:1002:9
     |
1000 |     def f():
1001 |         x = 1
1002 |         def g():
     |         ^^^
1003 |             return 1
1004 |         return 2
     |
help: Add missing blank line
999  | class Bar:
1000 |     def f():
1001 |         x = 1
1002 + 
1003 |         def g():
1004 |             return 1
1005 |         return 2

E301 [*] Expected 1 blank line, found 0
    --> E30.py:1009:13
     |
1007 |         class Baz:
1008 |             x = 1
1009 |             def g():
     |             ^^^
1010 |                 return 1
1011 |             return 2
     |
help: Add missing blank line
1006 |     def f():
1007 |         class Baz:
1008 |             x = 1
1009 + 
1010 |             def g():
1011 |                 return 1
1012 |             return 2
