---
source: crates/ruff_linter/src/rules/flake8_type_checking/mod.rs
---
TC001 [*] Move application import `.first_party` into a type-checking block
 --> TC001_future.py:2:19
  |
1 | def f():
2 |     from . import first_party
  |                   ^^^^^^^^^^^
3 |
4 |     def f(x: first_party.foo): ...
  |
help: Move into type-checking block
  - def f():
1 + from __future__ import annotations
2 + from typing import TYPE_CHECKING
3 + 
4 + if TYPE_CHECKING:
5 |     from . import first_party
6 + def f():
7 | 
8 |     def f(x: first_party.foo): ...
9 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

TC001 [*] Move application import `.foo` into a type-checking block
  --> TC001_future.py:57:19
   |
56 | def n():
57 |     from . import foo
   |                   ^^^
58 |
59 |     def f(x: Union[foo.Ty, int]): ...
   |
help: Move into type-checking block
1  + from __future__ import annotations
2  | def f():
3  |     from . import first_party
4  | 
--------------------------------------------------------------------------------
51 | 
52 | 
53 | # unions
   - from typing import Union
54 + from typing import Union, TYPE_CHECKING
55 | 
56 + if TYPE_CHECKING:
57 +     from . import foo
58 + 
59 | 
60 | def n():
   -     from . import foo
61 | 
62 |     def f(x: Union[foo.Ty, int]): ...
63 |     def g(x: foo.Ty | int): ...
note: This is an unsafe fix and may remove comments or change runtime behavior
