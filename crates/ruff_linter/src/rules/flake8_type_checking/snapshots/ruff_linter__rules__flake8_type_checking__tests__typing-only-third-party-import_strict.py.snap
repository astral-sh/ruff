---
source: crates/ruff_linter/src/rules/flake8_type_checking/mod.rs
---
TC002 [*] Move third-party import `pkg.bar.A` into a type-checking block
  --> strict.py:54:25
   |
52 |     # In un-strict mode, this _should_ raise an error, since `pkg.bar` isn't used at runtime
53 |     import pkg
54 |     from pkg.bar import A
   |                         ^
55 |
56 |     def test(value: A):
   |
help: Move into type-checking block
1  | from __future__ import annotations
2  + from typing import TYPE_CHECKING
3  + 
4  + if TYPE_CHECKING:
5  +     from pkg.bar import A
6  | 
7  | 
8  | def f():
--------------------------------------------------------------------------------
55 | def f():
56 |     # In un-strict mode, this _should_ raise an error, since `pkg.bar` isn't used at runtime
57 |     import pkg
   -     from pkg.bar import A
58 | 
59 |     def test(value: A):
60 |         return pkg.B()
note: This is an unsafe fix and may remove comments or change runtime behavior

TC002 [*] Move third-party import `pkg` into a type-checking block
  --> strict.py:91:12
   |
89 |     # Note that `pkg` is a prefix of `pkgfoo` which are both different modules. This is
90 |     # testing the implementation.
91 |     import pkg
   |            ^^^
92 |     import pkgfoo.bar as B
   |
help: Move into type-checking block
1  | from __future__ import annotations
2  + from typing import TYPE_CHECKING
3  + 
4  + if TYPE_CHECKING:
5  +     import pkg
6  | 
7  | 
8  | def f():
--------------------------------------------------------------------------------
92 |     # In un-strict mode, this _should_ raise an error, since `pkg` isn't used at runtime.
93 |     # Note that `pkg` is a prefix of `pkgfoo` which are both different modules. This is
94 |     # testing the implementation.
   -     import pkg
95 |     import pkgfoo.bar as B
96 | 
97 |     def test(value: pkg.A):
note: This is an unsafe fix and may remove comments or change runtime behavior
