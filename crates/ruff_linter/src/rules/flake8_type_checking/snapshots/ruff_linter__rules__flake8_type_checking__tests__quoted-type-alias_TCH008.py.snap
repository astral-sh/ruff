---
source: crates/ruff_linter/src/rules/flake8_type_checking/mod.rs
---
TCH008.py:15:16: TCH008 [*] Remove quotes from type alias
   |
13 |     Bar = Foo
14 | 
15 | a: TypeAlias = 'int'  # TCH008
   |                ^^^^^ TCH008
16 | b: TypeAlias = 'Dict'  # OK
17 | c: TypeAlias = 'Foo'   # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
12 12 | else:
13 13 |     Bar = Foo
14 14 | 
15    |-a: TypeAlias = 'int'  # TCH008
   15 |+a: TypeAlias = int  # TCH008
16 16 | b: TypeAlias = 'Dict'  # OK
17 17 | c: TypeAlias = 'Foo'   # TCH008
18 18 | d: TypeAlias = 'Foo[str]'  # OK

TCH008.py:17:16: TCH008 [*] Remove quotes from type alias
   |
15 | a: TypeAlias = 'int'  # TCH008
16 | b: TypeAlias = 'Dict'  # OK
17 | c: TypeAlias = 'Foo'   # TCH008
   |                ^^^^^ TCH008
18 | d: TypeAlias = 'Foo[str]'  # OK
19 | e: TypeAlias = 'Foo.bar'  # OK
   |
   = help: Remove quotes

ℹ Safe fix
14 14 | 
15 15 | a: TypeAlias = 'int'  # TCH008
16 16 | b: TypeAlias = 'Dict'  # OK
17    |-c: TypeAlias = 'Foo'   # TCH008
   17 |+c: TypeAlias = Foo   # TCH008
18 18 | d: TypeAlias = 'Foo[str]'  # OK
19 19 | e: TypeAlias = 'Foo.bar'  # OK
20 20 | f: TypeAlias = 'Foo | None'  # TCH008

TCH008.py:20:16: TCH008 [*] Remove quotes from type alias
   |
18 | d: TypeAlias = 'Foo[str]'  # OK
19 | e: TypeAlias = 'Foo.bar'  # OK
20 | f: TypeAlias = 'Foo | None'  # TCH008
   |                ^^^^^^^^^^^^ TCH008
21 | g: TypeAlias = 'OptStr'   # OK
22 | h: TypeAlias = 'Bar'   # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
17 17 | c: TypeAlias = 'Foo'   # TCH008
18 18 | d: TypeAlias = 'Foo[str]'  # OK
19 19 | e: TypeAlias = 'Foo.bar'  # OK
20    |-f: TypeAlias = 'Foo | None'  # TCH008
   20 |+f: TypeAlias = Foo | None  # TCH008
21 21 | g: TypeAlias = 'OptStr'   # OK
22 22 | h: TypeAlias = 'Bar'   # TCH008
23 23 | i: TypeAlias = Foo['str']   # TCH008

TCH008.py:22:16: TCH008 [*] Remove quotes from type alias
   |
20 | f: TypeAlias = 'Foo | None'  # TCH008
21 | g: TypeAlias = 'OptStr'   # OK
22 | h: TypeAlias = 'Bar'   # TCH008
   |                ^^^^^ TCH008
23 | i: TypeAlias = Foo['str']   # TCH008
24 | j: TypeAlias = 'Baz'   # OK
   |
   = help: Remove quotes

ℹ Safe fix
19 19 | e: TypeAlias = 'Foo.bar'  # OK
20 20 | f: TypeAlias = 'Foo | None'  # TCH008
21 21 | g: TypeAlias = 'OptStr'   # OK
22    |-h: TypeAlias = 'Bar'   # TCH008
   22 |+h: TypeAlias = Bar   # TCH008
23 23 | i: TypeAlias = Foo['str']   # TCH008
24 24 | j: TypeAlias = 'Baz'   # OK
25 25 | k: TypeAlias = 'k | None'  # OK

TCH008.py:23:20: TCH008 [*] Remove quotes from type alias
   |
21 | g: TypeAlias = 'OptStr'   # OK
22 | h: TypeAlias = 'Bar'   # TCH008
23 | i: TypeAlias = Foo['str']   # TCH008
   |                    ^^^^^ TCH008
24 | j: TypeAlias = 'Baz'   # OK
25 | k: TypeAlias = 'k | None'  # OK
   |
   = help: Remove quotes

ℹ Safe fix
20 20 | f: TypeAlias = 'Foo | None'  # TCH008
21 21 | g: TypeAlias = 'OptStr'   # OK
22 22 | h: TypeAlias = 'Bar'   # TCH008
23    |-i: TypeAlias = Foo['str']   # TCH008
   23 |+i: TypeAlias = Foo[str]   # TCH008
24 24 | j: TypeAlias = 'Baz'   # OK
25 25 | k: TypeAlias = 'k | None'  # OK
26 26 | l: TypeAlias = 'int' | None  # TCH008 (because TCH010 is not enabled)

TCH008.py:26:16: TCH008 [*] Remove quotes from type alias
   |
24 | j: TypeAlias = 'Baz'   # OK
25 | k: TypeAlias = 'k | None'  # OK
26 | l: TypeAlias = 'int' | None  # TCH008 (because TCH010 is not enabled)
   |                ^^^^^ TCH008
27 | m: TypeAlias = ('int'  # TCH008
28 |     | None)
   |
   = help: Remove quotes

ℹ Safe fix
23 23 | i: TypeAlias = Foo['str']   # TCH008
24 24 | j: TypeAlias = 'Baz'   # OK
25 25 | k: TypeAlias = 'k | None'  # OK
26    |-l: TypeAlias = 'int' | None  # TCH008 (because TCH010 is not enabled)
   26 |+l: TypeAlias = int | None  # TCH008 (because TCH010 is not enabled)
27 27 | m: TypeAlias = ('int'  # TCH008
28 28 |     | None)
29 29 | n: TypeAlias = ('int'  # TCH008 (fix removes comment currently)

TCH008.py:27:17: TCH008 [*] Remove quotes from type alias
   |
25 | k: TypeAlias = 'k | None'  # OK
26 | l: TypeAlias = 'int' | None  # TCH008 (because TCH010 is not enabled)
27 | m: TypeAlias = ('int'  # TCH008
   |                 ^^^^^ TCH008
28 |     | None)
29 | n: TypeAlias = ('int'  # TCH008 (fix removes comment currently)
   |
   = help: Remove quotes

ℹ Safe fix
24 24 | j: TypeAlias = 'Baz'   # OK
25 25 | k: TypeAlias = 'k | None'  # OK
26 26 | l: TypeAlias = 'int' | None  # TCH008 (because TCH010 is not enabled)
27    |-m: TypeAlias = ('int'  # TCH008
   27 |+m: TypeAlias = (int  # TCH008
28 28 |     | None)
29 29 | n: TypeAlias = ('int'  # TCH008 (fix removes comment currently)
30 30 |     ' | None')

TCH008.py:29:17: TCH008 [*] Remove quotes from type alias
   |
27 |   m: TypeAlias = ('int'  # TCH008
28 |       | None)
29 |   n: TypeAlias = ('int'  # TCH008 (fix removes comment currently)
   |  _________________^
30 | |     ' | None')
   | |_____________^ TCH008
31 |   
32 |   type B = 'Dict'  # TCH008
   |
   = help: Remove quotes

ℹ Unsafe fix
26 26 | l: TypeAlias = 'int' | None  # TCH008 (because TCH010 is not enabled)
27 27 | m: TypeAlias = ('int'  # TCH008
28 28 |     | None)
29    |-n: TypeAlias = ('int'  # TCH008 (fix removes comment currently)
30    |-    ' | None')
   29 |+n: TypeAlias = (int | None)
31 30 | 
32 31 | type B = 'Dict'  # TCH008
33 32 | type D = 'Foo[str]'  # TCH008

TCH008.py:32:10: TCH008 [*] Remove quotes from type alias
   |
30 |     ' | None')
31 | 
32 | type B = 'Dict'  # TCH008
   |          ^^^^^^ TCH008
33 | type D = 'Foo[str]'  # TCH008
34 | type E = 'Foo.bar'  # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
29 29 | n: TypeAlias = ('int'  # TCH008 (fix removes comment currently)
30 30 |     ' | None')
31 31 | 
32    |-type B = 'Dict'  # TCH008
   32 |+type B = Dict  # TCH008
33 33 | type D = 'Foo[str]'  # TCH008
34 34 | type E = 'Foo.bar'  # TCH008
35 35 | type G = 'OptStr'  # TCH008

TCH008.py:33:10: TCH008 [*] Remove quotes from type alias
   |
32 | type B = 'Dict'  # TCH008
33 | type D = 'Foo[str]'  # TCH008
   |          ^^^^^^^^^^ TCH008
34 | type E = 'Foo.bar'  # TCH008
35 | type G = 'OptStr'  # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
30 30 |     ' | None')
31 31 | 
32 32 | type B = 'Dict'  # TCH008
33    |-type D = 'Foo[str]'  # TCH008
   33 |+type D = Foo[str]  # TCH008
34 34 | type E = 'Foo.bar'  # TCH008
35 35 | type G = 'OptStr'  # TCH008
36 36 | type I = Foo['str']  # TCH008

TCH008.py:34:10: TCH008 [*] Remove quotes from type alias
   |
32 | type B = 'Dict'  # TCH008
33 | type D = 'Foo[str]'  # TCH008
34 | type E = 'Foo.bar'  # TCH008
   |          ^^^^^^^^^ TCH008
35 | type G = 'OptStr'  # TCH008
36 | type I = Foo['str']  # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
31 31 | 
32 32 | type B = 'Dict'  # TCH008
33 33 | type D = 'Foo[str]'  # TCH008
34    |-type E = 'Foo.bar'  # TCH008
   34 |+type E = Foo.bar  # TCH008
35 35 | type G = 'OptStr'  # TCH008
36 36 | type I = Foo['str']  # TCH008
37 37 | type J = 'Baz'  # TCH008

TCH008.py:35:10: TCH008 [*] Remove quotes from type alias
   |
33 | type D = 'Foo[str]'  # TCH008
34 | type E = 'Foo.bar'  # TCH008
35 | type G = 'OptStr'  # TCH008
   |          ^^^^^^^^ TCH008
36 | type I = Foo['str']  # TCH008
37 | type J = 'Baz'  # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
32 32 | type B = 'Dict'  # TCH008
33 33 | type D = 'Foo[str]'  # TCH008
34 34 | type E = 'Foo.bar'  # TCH008
35    |-type G = 'OptStr'  # TCH008
   35 |+type G = OptStr  # TCH008
36 36 | type I = Foo['str']  # TCH008
37 37 | type J = 'Baz'  # TCH008
38 38 | type K = 'K | None'  # TCH008

TCH008.py:36:14: TCH008 [*] Remove quotes from type alias
   |
34 | type E = 'Foo.bar'  # TCH008
35 | type G = 'OptStr'  # TCH008
36 | type I = Foo['str']  # TCH008
   |              ^^^^^ TCH008
37 | type J = 'Baz'  # TCH008
38 | type K = 'K | None'  # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
33 33 | type D = 'Foo[str]'  # TCH008
34 34 | type E = 'Foo.bar'  # TCH008
35 35 | type G = 'OptStr'  # TCH008
36    |-type I = Foo['str']  # TCH008
   36 |+type I = Foo[str]  # TCH008
37 37 | type J = 'Baz'  # TCH008
38 38 | type K = 'K | None'  # TCH008
39 39 | type L = 'int' | None  # TCH008 (because TCH010 is not enabled)

TCH008.py:37:10: TCH008 [*] Remove quotes from type alias
   |
35 | type G = 'OptStr'  # TCH008
36 | type I = Foo['str']  # TCH008
37 | type J = 'Baz'  # TCH008
   |          ^^^^^ TCH008
38 | type K = 'K | None'  # TCH008
39 | type L = 'int' | None  # TCH008 (because TCH010 is not enabled)
   |
   = help: Remove quotes

ℹ Safe fix
34 34 | type E = 'Foo.bar'  # TCH008
35 35 | type G = 'OptStr'  # TCH008
36 36 | type I = Foo['str']  # TCH008
37    |-type J = 'Baz'  # TCH008
   37 |+type J = Baz  # TCH008
38 38 | type K = 'K | None'  # TCH008
39 39 | type L = 'int' | None  # TCH008 (because TCH010 is not enabled)
40 40 | type M = ('int'  # TCH008

TCH008.py:38:10: TCH008 [*] Remove quotes from type alias
   |
36 | type I = Foo['str']  # TCH008
37 | type J = 'Baz'  # TCH008
38 | type K = 'K | None'  # TCH008
   |          ^^^^^^^^^^ TCH008
39 | type L = 'int' | None  # TCH008 (because TCH010 is not enabled)
40 | type M = ('int'  # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
35 35 | type G = 'OptStr'  # TCH008
36 36 | type I = Foo['str']  # TCH008
37 37 | type J = 'Baz'  # TCH008
38    |-type K = 'K | None'  # TCH008
   38 |+type K = K | None  # TCH008
39 39 | type L = 'int' | None  # TCH008 (because TCH010 is not enabled)
40 40 | type M = ('int'  # TCH008
41 41 |     | None)

TCH008.py:39:10: TCH008 [*] Remove quotes from type alias
   |
37 | type J = 'Baz'  # TCH008
38 | type K = 'K | None'  # TCH008
39 | type L = 'int' | None  # TCH008 (because TCH010 is not enabled)
   |          ^^^^^ TCH008
40 | type M = ('int'  # TCH008
41 |     | None)
   |
   = help: Remove quotes

ℹ Safe fix
36 36 | type I = Foo['str']  # TCH008
37 37 | type J = 'Baz'  # TCH008
38 38 | type K = 'K | None'  # TCH008
39    |-type L = 'int' | None  # TCH008 (because TCH010 is not enabled)
   39 |+type L = int | None  # TCH008 (because TCH010 is not enabled)
40 40 | type M = ('int'  # TCH008
41 41 |     | None)
42 42 | type N = ('int'  # TCH008 (fix removes comment currently)

TCH008.py:40:11: TCH008 [*] Remove quotes from type alias
   |
38 | type K = 'K | None'  # TCH008
39 | type L = 'int' | None  # TCH008 (because TCH010 is not enabled)
40 | type M = ('int'  # TCH008
   |           ^^^^^ TCH008
41 |     | None)
42 | type N = ('int'  # TCH008 (fix removes comment currently)
   |
   = help: Remove quotes

ℹ Safe fix
37 37 | type J = 'Baz'  # TCH008
38 38 | type K = 'K | None'  # TCH008
39 39 | type L = 'int' | None  # TCH008 (because TCH010 is not enabled)
40    |-type M = ('int'  # TCH008
   40 |+type M = (int  # TCH008
41 41 |     | None)
42 42 | type N = ('int'  # TCH008 (fix removes comment currently)
43 43 |     ' | None')

TCH008.py:42:11: TCH008 [*] Remove quotes from type alias
   |
40 |   type M = ('int'  # TCH008
41 |       | None)
42 |   type N = ('int'  # TCH008 (fix removes comment currently)
   |  ___________^
43 | |     ' | None')
   | |_____________^ TCH008
   |
   = help: Remove quotes

ℹ Unsafe fix
39 39 | type L = 'int' | None  # TCH008 (because TCH010 is not enabled)
40 40 | type M = ('int'  # TCH008
41 41 |     | None)
42    |-type N = ('int'  # TCH008 (fix removes comment currently)
43    |-    ' | None')
   42 |+type N = (int | None)
44 43 | 
45 44 | 
46 45 | class Baz:

TCH008.py:48:14: TCH008 [*] Remove quotes from type alias
   |
46 | class Baz:
47 |     a: TypeAlias = 'Baz'  # OK
48 |     type A = 'Baz'  # TCH008
   |              ^^^^^ TCH008
49 | 
50 |     class Nested:
   |
   = help: Remove quotes

ℹ Safe fix
45 45 | 
46 46 | class Baz:
47 47 |     a: TypeAlias = 'Baz'  # OK
48    |-    type A = 'Baz'  # TCH008
   48 |+    type A = Baz  # TCH008
49 49 | 
50 50 |     class Nested:
51 51 |         a: TypeAlias = 'Baz'  # OK

TCH008.py:52:18: TCH008 [*] Remove quotes from type alias
   |
50 |     class Nested:
51 |         a: TypeAlias = 'Baz'  # OK
52 |         type A = 'Baz'  # TCH008
   |                  ^^^^^ TCH008
   |
   = help: Remove quotes

ℹ Safe fix
49 49 | 
50 50 |     class Nested:
51 51 |         a: TypeAlias = 'Baz'  # OK
52    |-        type A = 'Baz'  # TCH008
   52 |+        type A = Baz  # TCH008
