---
source: crates/ruff_linter/src/rules/pyupgrade/mod.rs
snapshot_kind: text
---
UP045.py:5:10: UP007 [*] Use `X | Y` for type annotations
  |
5 | def f(x: Optional[str]) -> None:
  |          ^^^^^^^^^^^^^ UP007
6 |     ...
  |
  = help: Convert to `X | Y`

ℹ Safe fix
2 2 | from typing import Optional
3 3 | 
4 4 | 
5   |-def f(x: Optional[str]) -> None:
  5 |+def f(x: str | None) -> None:
6 6 |     ...
7 7 | 
8 8 | 

UP045.py:9:10: UP007 [*] Use `X | Y` for type annotations
   |
 9 | def f(x: typing.Optional[str]) -> None:
   |          ^^^^^^^^^^^^^^^^^^^^ UP007
10 |     ...
   |
   = help: Convert to `X | Y`

ℹ Safe fix
6  6  |     ...
7  7  | 
8  8  | 
9     |-def f(x: typing.Optional[str]) -> None:
   9  |+def f(x: str | None) -> None:
10 10 |     ...
11 11 | 
12 12 | 

UP045.py:14:8: UP007 [*] Use `X | Y` for type annotations
   |
13 | def f() -> None:
14 |     x: Optional[str]
   |        ^^^^^^^^^^^^^ UP007
15 |     x = Optional[str]
   |
   = help: Convert to `X | Y`

ℹ Safe fix
11 11 | 
12 12 | 
13 13 | def f() -> None:
14    |-    x: Optional[str]
   14 |+    x: str | None
15 15 |     x = Optional[str]
16 16 | 
17 17 | 

UP045.py:15:9: UP007 Use `X | Y` for type annotations
   |
13 | def f() -> None:
14 |     x: Optional[str]
15 |     x = Optional[str]
   |         ^^^^^^^^^^^^^ UP007
   |
   = help: Convert to `X | Y`

UP045.py:18:15: UP007 [*] Use `X | Y` for type annotations
   |
18 | def f(x: list[Optional[int]]) -> None:
   |               ^^^^^^^^^^^^^ UP007
19 |     ...
   |
   = help: Convert to `X | Y`

ℹ Safe fix
15 15 |     x = Optional[str]
16 16 | 
17 17 | 
18    |-def f(x: list[Optional[int]]) -> None:
   18 |+def f(x: list[int | None]) -> None:
19 19 |     ...
20 20 | 
21 21 | 

UP045.py:22:10: UP007 Use `X | Y` for type annotations
   |
22 | def f(x: Optional[int : float]) -> None:
   |          ^^^^^^^^^^^^^^^^^^^^^ UP007
23 |     ...
   |
   = help: Convert to `X | Y`

UP045.py:26:10: UP007 Use `X | Y` for type annotations
   |
26 | def f(x: Optional[str, int : float]) -> None:
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^ UP007
27 |     ...
   |
   = help: Convert to `X | Y`

UP045.py:30:10: UP007 Use `X | Y` for type annotations
   |
30 | def f(x: Optional[int, float]) -> None:
   |          ^^^^^^^^^^^^^^^^^^^^ UP007
31 |     ...
   |
   = help: Convert to `X | Y`

UP045.py:36:28: UP007 [*] Use `X | Y` for type annotations
   |
34 |   # Regression test for: https://github.com/astral-sh/ruff/issues/7131
35 |   class ServiceRefOrValue:
36 |       service_specification: Optional[
   |  ____________________________^
37 | |         list[ServiceSpecificationRef]
38 | |         | list[ServiceSpecification]
39 | |     ] = None
   | |_____^ UP007
   |
   = help: Convert to `X | Y`

ℹ Safe fix
33 33 | 
34 34 | # Regression test for: https://github.com/astral-sh/ruff/issues/7131
35 35 | class ServiceRefOrValue:
36    |-    service_specification: Optional[
37    |-        list[ServiceSpecificationRef]
38    |-        | list[ServiceSpecification]
39    |-    ] = None
   36 |+    service_specification: list[ServiceSpecificationRef] | list[ServiceSpecification] | None = None
40 37 | 
41 38 | 
42 39 | # Regression test for: https://github.com/astral-sh/ruff/issues/7201

UP045.py:44:28: UP007 [*] Use `X | Y` for type annotations
   |
42 | # Regression test for: https://github.com/astral-sh/ruff/issues/7201
43 | class ServiceRefOrValue:
44 |     service_specification: Optional[str]is not True = None
   |                            ^^^^^^^^^^^^^ UP007
   |
   = help: Convert to `X | Y`

ℹ Safe fix
41 41 | 
42 42 | # Regression test for: https://github.com/astral-sh/ruff/issues/7201
43 43 | class ServiceRefOrValue:
44    |-    service_specification: Optional[str]is not True = None
   44 |+    service_specification: str | None is not True = None
