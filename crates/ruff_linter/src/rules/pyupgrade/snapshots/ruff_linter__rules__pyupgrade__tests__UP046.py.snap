---
source: crates/ruff_linter/src/rules/pyupgrade/mod.rs
snapshot_kind: text
---
UP046.py:9:9: UP046 [*] Generic class `A` uses `Generic` subclass instead of type parameters
   |
 9 | class A(Generic[T]):
   |         ^^^^^^^^^^ UP046
10 |     # Comments in a class body are preserved
11 |     pass
   |
   = help: Use type parameters

ℹ Unsafe fix
6  6  | P = ParamSpec("P")
7  7  | 
8  8  | 
9     |-class A(Generic[T]):
   9  |+class A[T: float]:
10 10 |     # Comments in a class body are preserved
11 11 |     pass
12 12 | 

UP046.py:14:9: UP046 [*] Generic class `B` uses `Generic` subclass instead of type parameters
   |
14 | class B(Generic[*Ts]):
   |         ^^^^^^^^^^^^ UP046
15 |     pass
   |
   = help: Use type parameters

ℹ Unsafe fix
11 11 |     pass
12 12 | 
13 13 | 
14    |-class B(Generic[*Ts]):
   14 |+class B[*Ts]:
15 15 |     pass
16 16 | 
17 17 | 

UP046.py:18:9: UP046 [*] Generic class `C` uses `Generic` subclass instead of type parameters
   |
18 | class C(Generic[P]):
   |         ^^^^^^^^^^ UP046
19 |     pass
   |
   = help: Use type parameters

ℹ Unsafe fix
15 15 |     pass
16 16 | 
17 17 | 
18    |-class C(Generic[P]):
   18 |+class C[**P]:
19 19 |     pass
20 20 | 
21 21 | 

UP046.py:22:19: UP046 [*] Generic class `Constrained` uses `Generic` subclass instead of type parameters
   |
22 | class Constrained(Generic[S]):
   |                   ^^^^^^^^^^ UP046
23 |     pass
   |
   = help: Use type parameters

ℹ Unsafe fix
19 19 |     pass
20 20 | 
21 21 | 
22    |-class Constrained(Generic[S]):
   22 |+class Constrained[S: (str, bytes)]:
23 23 |     pass
24 24 | 
25 25 | 

UP046.py:28:20: UP046 Generic class `ExternalType` uses `Generic` subclass instead of type parameters
   |
26 | # This case gets a diagnostic but not a fix because we can't look up the bounds
27 | # or constraints on the generic type from another module
28 | class ExternalType(Generic[T, SupportsRichComparisonT]):
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP046
29 |     pass
   |
   = help: Use type parameters

UP046.py:34:13: UP046 [*] Generic class `MyStr` uses `Generic` subclass instead of type parameters
   |
32 | # typing.AnyStr is a common external type variable, so treat it specially as a
33 | # known TypeVar
34 | class MyStr(Generic[AnyStr]):
   |             ^^^^^^^^^^^^^^^ UP046
35 |     pass
   |
   = help: Use type parameters

ℹ Unsafe fix
31 31 | 
32 32 | # typing.AnyStr is a common external type variable, so treat it specially as a
33 33 | # known TypeVar
34    |-class MyStr(Generic[AnyStr]):
   34 |+class MyStr[AnyStr: (bytes, str)]:
35 35 |     pass
36 36 | 
37 37 |
