---
source: crates/ruff_linter/src/rules/pyupgrade/mod.rs
snapshot_kind: text
---
UP007.py:5:10: UP007 [*] Use `X | Y` for type annotations
  |
5 | def f(x: Union[str, int, Union[float, bytes]]) -> None:
  |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP007
6 |     ...
  |
  = help: Convert to `X | Y`

ℹ Safe fix
2 2 | from typing import Union
3 3 | 
4 4 | 
5   |-def f(x: Union[str, int, Union[float, bytes]]) -> None:
  5 |+def f(x: str | int | Union[float, bytes]) -> None:
6 6 |     ...
7 7 | 
8 8 | 

UP007.py:5:26: UP007 [*] Use `X | Y` for type annotations
  |
5 | def f(x: Union[str, int, Union[float, bytes]]) -> None:
  |                          ^^^^^^^^^^^^^^^^^^^ UP007
6 |     ...
  |
  = help: Convert to `X | Y`

ℹ Safe fix
2 2 | from typing import Union
3 3 | 
4 4 | 
5   |-def f(x: Union[str, int, Union[float, bytes]]) -> None:
  5 |+def f(x: Union[str, int, float | bytes]) -> None:
6 6 |     ...
7 7 | 
8 8 | 

UP007.py:9:10: UP007 [*] Use `X | Y` for type annotations
   |
 9 | def f(x: typing.Union[str, int]) -> None:
   |          ^^^^^^^^^^^^^^^^^^^^^^ UP007
10 |     ...
   |
   = help: Convert to `X | Y`

ℹ Safe fix
6  6  |     ...
7  7  | 
8  8  | 
9     |-def f(x: typing.Union[str, int]) -> None:
   9  |+def f(x: str | int) -> None:
10 10 |     ...
11 11 | 
12 12 | 

UP007.py:13:10: UP007 [*] Use `X | Y` for type annotations
   |
13 | def f(x: typing.Union[(str, int)]) -> None:
   |          ^^^^^^^^^^^^^^^^^^^^^^^^ UP007
14 |     ...
   |
   = help: Convert to `X | Y`

ℹ Safe fix
10 10 |     ...
11 11 | 
12 12 | 
13    |-def f(x: typing.Union[(str, int)]) -> None:
   13 |+def f(x: str | int) -> None:
14 14 |     ...
15 15 | 
16 16 | 

UP007.py:17:10: UP007 [*] Use `X | Y` for type annotations
   |
17 | def f(x: typing.Union[(str, int), float]) -> None:
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP007
18 |     ...
   |
   = help: Convert to `X | Y`

ℹ Safe fix
14 14 |     ...
15 15 | 
16 16 | 
17    |-def f(x: typing.Union[(str, int), float]) -> None:
   17 |+def f(x: str | int | float) -> None:
18 18 |     ...
19 19 | 
20 20 | 

UP007.py:21:10: UP007 [*] Use `X | Y` for type annotations
   |
21 | def f(x: typing.Union[(int,)]) -> None:
   |          ^^^^^^^^^^^^^^^^^^^^ UP007
22 |     ...
   |
   = help: Convert to `X | Y`

ℹ Safe fix
18 18 |     ...
19 19 | 
20 20 | 
21    |-def f(x: typing.Union[(int,)]) -> None:
   21 |+def f(x: int) -> None:
22 22 |     ...
23 23 | 
24 24 | 

UP007.py:25:10: UP007 [*] Use `X | Y` for type annotations
   |
25 | def f(x: typing.Union[()]) -> None:
   |          ^^^^^^^^^^^^^^^^ UP007
26 |     ...
   |
   = help: Convert to `X | Y`

ℹ Safe fix
22 22 |     ...
23 23 | 
24 24 | 
25    |-def f(x: typing.Union[()]) -> None:
   25 |+def f(x: ()) -> None:
26 26 |     ...
27 27 | 
28 28 | 

UP007.py:29:11: UP007 [*] Use `X | Y` for type annotations
   |
29 | def f(x: "Union[str, int, Union[float, bytes]]") -> None:
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP007
30 |     ...
   |
   = help: Convert to `X | Y`

ℹ Safe fix
26 26 |     ...
27 27 | 
28 28 | 
29    |-def f(x: "Union[str, int, Union[float, bytes]]") -> None:
   29 |+def f(x: "str | int | Union[float, bytes]") -> None:
30 30 |     ...
31 31 | 
32 32 | 

UP007.py:29:27: UP007 [*] Use `X | Y` for type annotations
   |
29 | def f(x: "Union[str, int, Union[float, bytes]]") -> None:
   |                           ^^^^^^^^^^^^^^^^^^^ UP007
30 |     ...
   |
   = help: Convert to `X | Y`

ℹ Safe fix
26 26 |     ...
27 27 | 
28 28 | 
29    |-def f(x: "Union[str, int, Union[float, bytes]]") -> None:
   29 |+def f(x: "Union[str, int, float | bytes]") -> None:
30 30 |     ...
31 31 | 
32 32 | 

UP007.py:33:11: UP007 [*] Use `X | Y` for type annotations
   |
33 | def f(x: "typing.Union[str, int]") -> None:
   |           ^^^^^^^^^^^^^^^^^^^^^^ UP007
34 |     ...
   |
   = help: Convert to `X | Y`

ℹ Safe fix
30 30 |     ...
31 31 | 
32 32 | 
33    |-def f(x: "typing.Union[str, int]") -> None:
   33 |+def f(x: "str | int") -> None:
34 34 |     ...
35 35 | 
36 36 | 

UP007.py:46:9: UP007 Use `X | Y` for type annotations
   |
45 | def f() -> None:
46 |     x = Union[str, int]
   |         ^^^^^^^^^^^^^^^ UP007
47 |     x = Union["str", "int"]
48 |     x: Union[str, int]
   |
   = help: Convert to `X | Y`

UP007.py:48:8: UP007 [*] Use `X | Y` for type annotations
   |
46 |     x = Union[str, int]
47 |     x = Union["str", "int"]
48 |     x: Union[str, int]
   |        ^^^^^^^^^^^^^^^ UP007
49 |     x: Union["str", "int"]
   |
   = help: Convert to `X | Y`

ℹ Safe fix
45 45 | def f() -> None:
46 46 |     x = Union[str, int]
47 47 |     x = Union["str", "int"]
48    |-    x: Union[str, int]
   48 |+    x: str | int
49 49 |     x: Union["str", "int"]
50 50 | 
51 51 | 

UP007.py:49:8: UP007 [*] Use `X | Y` for type annotations
   |
47 |     x = Union["str", "int"]
48 |     x: Union[str, int]
49 |     x: Union["str", "int"]
   |        ^^^^^^^^^^^^^^^^^^^ UP007
   |
   = help: Convert to `X | Y`

ℹ Safe fix
46 46 |     x = Union[str, int]
47 47 |     x = Union["str", "int"]
48 48 |     x: Union[str, int]
49    |-    x: Union["str", "int"]
   49 |+    x: "str" | "int"
50 50 | 
51 51 | 
52 52 | def f(x: Union[int : float]) -> None:

UP007.py:52:10: UP007 Use `X | Y` for type annotations
   |
52 | def f(x: Union[int : float]) -> None:
   |          ^^^^^^^^^^^^^^^^^^ UP007
53 |     ...
   |
   = help: Convert to `X | Y`

UP007.py:56:10: UP007 Use `X | Y` for type annotations
   |
56 | def f(x: Union[str, int : float]) -> None:
   |          ^^^^^^^^^^^^^^^^^^^^^^^ UP007
57 |     ...
   |
   = help: Convert to `X | Y`

UP007.py:60:10: UP007 Use `X | Y` for type annotations
   |
60 | def f(x: Union[x := int]) -> None:
   |          ^^^^^^^^^^^^^^^ UP007
61 |     ...
   |
   = help: Convert to `X | Y`

UP007.py:64:10: UP007 Use `X | Y` for type annotations
   |
64 | def f(x: Union[str, x := int]) -> None:
   |          ^^^^^^^^^^^^^^^^^^^^ UP007
65 |     ...
   |
   = help: Convert to `X | Y`

UP007.py:68:10: UP007 Use `X | Y` for type annotations
   |
68 | def f(x: Union[lambda: int]) -> None:
   |          ^^^^^^^^^^^^^^^^^^ UP007
69 |     ...
   |
   = help: Convert to `X | Y`

UP007.py:72:10: UP007 Use `X | Y` for type annotations
   |
72 | def f(x: Union[str, lambda: int]) -> None:
   |          ^^^^^^^^^^^^^^^^^^^^^^^ UP007
73 |     ...
   |
   = help: Convert to `X | Y`

UP007.py:83:10: UP007 [*] Use `X | Y` for type annotations
   |
82 | # Regression test for: https://github.com/astral-sh/ruff/issues/8609
83 | def f(x: Union[int, str, bytes]) -> None:
   |          ^^^^^^^^^^^^^^^^^^^^^^ UP007
84 |     ...
   |
   = help: Convert to `X | Y`

ℹ Safe fix
80 80 | 
81 81 | 
82 82 | # Regression test for: https://github.com/astral-sh/ruff/issues/8609
83    |-def f(x: Union[int, str, bytes]) -> None:
   83 |+def f(x: int | str | bytes) -> None:
84 84 |     ...
