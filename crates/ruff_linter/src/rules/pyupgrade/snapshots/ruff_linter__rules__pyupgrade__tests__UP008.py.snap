---
source: crates/ruff_linter/src/rules/pyupgrade/mod.rs
---
UP008 [*] Use `super()` instead of `super(__class__, self)`
  --> UP008.py:17:23
   |
16 |     def wrong(self):
17 |         parent = super(Child, self)  # wrong
   |                       ^^^^^^^^^^^^^
18 |         super(Child, self).method  # wrong
19 |         super(
   |
help: Remove `super()` parameters

ℹ Unsafe fix
14 14 |         Parent.super(1, 2)  # ok
15 15 | 
16 16 |     def wrong(self):
17    |-        parent = super(Child, self)  # wrong
   17 |+        parent = super()  # wrong
18 18 |         super(Child, self).method  # wrong
19 19 |         super(
20 20 |             Child,

UP008 [*] Use `super()` instead of `super(__class__, self)`
  --> UP008.py:18:14
   |
16 |     def wrong(self):
17 |         parent = super(Child, self)  # wrong
18 |         super(Child, self).method  # wrong
   |              ^^^^^^^^^^^^^
19 |         super(
20 |             Child,
   |
help: Remove `super()` parameters

ℹ Unsafe fix
15 15 | 
16 16 |     def wrong(self):
17 17 |         parent = super(Child, self)  # wrong
18    |-        super(Child, self).method  # wrong
   18 |+        super().method  # wrong
19 19 |         super(
20 20 |             Child,
21 21 |             self,

UP008 [*] Use `super()` instead of `super(__class__, self)`
  --> UP008.py:19:14
   |
17 |           parent = super(Child, self)  # wrong
18 |           super(Child, self).method  # wrong
19 |           super(
   |  ______________^
20 | |             Child,
21 | |             self,
22 | |         ).method()  # wrong
   | |_________^
   |
help: Remove `super()` parameters

ℹ Unsafe fix
16 16 |     def wrong(self):
17 17 |         parent = super(Child, self)  # wrong
18 18 |         super(Child, self).method  # wrong
19    |-        super(
20    |-            Child,
21    |-            self,
22    |-        ).method()  # wrong
   19 |+        super().method()  # wrong
23 20 | 
24 21 | 
25 22 | class BaseClass:

UP008 [*] Use `super()` instead of `super(__class__, self)`
  --> UP008.py:36:14
   |
34 | class MyClass(BaseClass):
35 |     def normal(self):
36 |         super(MyClass, self).f()  # can use super()
   |              ^^^^^^^^^^^^^^^
37 |         super().f()
   |
help: Remove `super()` parameters

ℹ Unsafe fix
33 33 | 
34 34 | class MyClass(BaseClass):
35 35 |     def normal(self):
36    |-        super(MyClass, self).f()  # can use super()
   36 |+        super().f()  # can use super()
37 37 |         super().f()
38 38 | 
39 39 |     def different_argument(self, other):

UP008 [*] Use `super()` instead of `super(__class__, self)`
  --> UP008.py:50:18
   |
49 |         def inner_argument(self):
50 |             super(MyClass, self).f()  # can use super()
   |                  ^^^^^^^^^^^^^^^
51 |             super().f()
   |
help: Remove `super()` parameters

ℹ Unsafe fix
47 47 |             super(MyClass, self).f()  # CANNOT use super()
48 48 | 
49 49 |         def inner_argument(self):
50    |-            super(MyClass, self).f()  # can use super()
   50 |+            super().f()  # can use super()
51 51 |             super().f()
52 52 | 
53 53 |         outer_argument()

UP008 [*] Use `super()` instead of `super(__class__, self)`
  --> UP008.py:74:14
   |
72 | class DataClass:
73 |     def normal(self):
74 |         super(DataClass, self).f()  # Error
   |              ^^^^^^^^^^^^^^^^^
75 |         super().f()  # OK
   |
help: Remove `super()` parameters

ℹ Unsafe fix
71 71 | @dataclass
72 72 | class DataClass:
73 73 |     def normal(self):
74    |-        super(DataClass, self).f()  # Error
   74 |+        super().f()  # Error
75 75 |         super().f()  # OK
76 76 | 
77 77 | 

UP008 [*] Use `super()` instead of `super(__class__, self)`
  --> UP008.py:92:14
   |
90 | class B(A):
91 |     def bar(self):
92 |         super(__class__, self).foo()
   |              ^^^^^^^^^^^^^^^^^
   |
help: Remove `super()` parameters

ℹ Unsafe fix
89 89 | 
90 90 | class B(A):
91 91 |     def bar(self):
92    |-        super(__class__, self).foo()
   92 |+        super().foo()
93 93 | 
94 94 | 
95 95 | # see: https://github.com/astral-sh/ruff/issues/18684

UP008 [*] Use `super()` instead of `super(__class__, self)`
   --> UP008.py:107:23
    |
105 | class C:
106 |     def f(self):
107 |         builtins.super(C, self)
    |                       ^^^^^^^^^
    |
help: Remove `super()` parameters

ℹ Unsafe fix
104 104 | 
105 105 | class C:
106 106 |     def f(self):
107     |-        builtins.super(C, self)
    107 |+        builtins.super()
108 108 | 
109 109 | 
110 110 | # see: https://github.com/astral-sh/ruff/issues/18533

UP008 [*] Use `super()` instead of `super(__class__, self)`
   --> UP008.py:113:14
    |
111 |   class ClassForCommentEnthusiasts(BaseClass):
112 |       def with_comments(self):
113 |           super(
    |  ______________^
114 | |             # super helpful comment
115 | |             ClassForCommentEnthusiasts,
116 | |             self
117 | |         ).f()
    | |_________^
118 |           super(
119 |               ClassForCommentEnthusiasts,
    |
help: Remove `super()` parameters

ℹ Unsafe fix
110 110 | # see: https://github.com/astral-sh/ruff/issues/18533
111 111 | class ClassForCommentEnthusiasts(BaseClass):
112 112 |     def with_comments(self):
113     |-        super(
114     |-            # super helpful comment
115     |-            ClassForCommentEnthusiasts,
116     |-            self
117     |-        ).f()
    113 |+        super().f()
118 114 |         super(
119 115 |             ClassForCommentEnthusiasts,
120 116 |             # even more helpful comment

UP008 [*] Use `super()` instead of `super(__class__, self)`
   --> UP008.py:118:14
    |
116 |               self
117 |           ).f()
118 |           super(
    |  ______________^
119 | |             ClassForCommentEnthusiasts,
120 | |             # even more helpful comment
121 | |             self
122 | |         ).f()
    | |_________^
123 |           super(
124 |               ClassForCommentEnthusiasts,
    |
help: Remove `super()` parameters

ℹ Unsafe fix
115 115 |             ClassForCommentEnthusiasts,
116 116 |             self
117 117 |         ).f()
118     |-        super(
119     |-            ClassForCommentEnthusiasts,
120     |-            # even more helpful comment
121     |-            self
122     |-        ).f()
    118 |+        super().f()
123 119 |         super(
124 120 |             ClassForCommentEnthusiasts,
125 121 |             self

UP008 [*] Use `super()` instead of `super(__class__, self)`
   --> UP008.py:123:14
    |
121 |               self
122 |           ).f()
123 |           super(
    |  ______________^
124 | |             ClassForCommentEnthusiasts,
125 | |             self
126 | |             # also a comment
127 | |         ).f()
    | |_________^
    |
help: Remove `super()` parameters

ℹ Unsafe fix
120 120 |             # even more helpful comment
121 121 |             self
122 122 |         ).f()
123     |-        super(
124     |-            ClassForCommentEnthusiasts,
125     |-            self
126     |-            # also a comment
127     |-        ).f()
    123 |+        super().f()
128 124 | 
129 125 | 
130 126 | # Issue #19096: super calls with keyword arguments should emit diagnostic but not be fixed

UP008 Use `super()` instead of `super(__class__, self)`
   --> UP008.py:133:21
    |
131 | class Ord(int):
132 |     def __len__(self):
133 |         return super(Ord, self, uhoh=True, **{"error": True}).bit_length()
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
134 |
135 | class ExampleWithKeywords:
    |
help: Remove `super()` parameters

UP008 Use `super()` instead of `super(__class__, self)`
   --> UP008.py:137:14
    |
135 | class ExampleWithKeywords:
136 |     def method1(self):
137 |         super(ExampleWithKeywords, self, invalid=True).some_method()  # Should emit diagnostic but NOT be fixed
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
138 |     
139 |     def method2(self):
    |
help: Remove `super()` parameters

UP008 Use `super()` instead of `super(__class__, self)`
   --> UP008.py:140:14
    |
139 |     def method2(self):
140 |         super(ExampleWithKeywords, self, **{"kwarg": "value"}).some_method()  # Should emit diagnostic but NOT be fixed
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
141 |     
142 |     def method3(self):
    |
help: Remove `super()` parameters

UP008 [*] Use `super()` instead of `super(__class__, self)`
   --> UP008.py:143:14
    |
142 |     def method3(self):
143 |         super(ExampleWithKeywords, self).some_method()  # Should be fixed - no keywords
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: Remove `super()` parameters

ℹ Unsafe fix
140 140 |         super(ExampleWithKeywords, self, **{"kwarg": "value"}).some_method()  # Should emit diagnostic but NOT be fixed
141 141 |     
142 142 |     def method3(self):
143     |-        super(ExampleWithKeywords, self).some_method()  # Should be fixed - no keywords
    143 |+        super().some_method()  # Should be fixed - no keywords
