---
source: crates/ruff_linter/src/rules/flake8_pyi/mod.rs
---
PYI041.pyi:21:14: PYI041 Use `float` instead of `int | float`
   |
21 | def f0(arg1: float | int) -> None: ...  # PYI041
   |              ^^^^^^^^^^^ PYI041
   |
   = help: Remove redundant type

PYI041.pyi:24:30: PYI041 Use `complex` instead of `float | complex`
   |
24 | def f1(arg1: float, *, arg2: float | list[str] | type[bool] | complex) -> None: ...  # PYI041
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
   |
   = help: Remove redundant type

PYI041.pyi:27:28: PYI041 Use `float` instead of `int | float`
   |
27 | def f2(arg1: int, /, arg2: int | int | float) -> None: ...  # PYI041
   |                            ^^^^^^^^^^^^^^^^^ PYI041
   |
   = help: Remove redundant type

PYI041.pyi:33:24: PYI041 Use `float` instead of `int | float`
   |
33 | async def f4(**kwargs: int | int | float) -> None: ...  # PYI041
   |                        ^^^^^^^^^^^^^^^^^ PYI041
34 | 
35 | def f5(
   |
   = help: Remove redundant type

PYI041.pyi:36:10: PYI041 Use `complex` instead of `int | float | complex`
   |
35 |   def f5(
36 |       arg: Union[  # comment 
   |  __________^
37 | |         float, # another
38 | |         complex, int]
   | |_____________________^ PYI041
39 |       ) -> None: ...  # PYI041
   |
   = help: Remove redundant type

PYI041.pyi:43:9: PYI041 Use `complex` instead of `int | float | complex`
   |
41 |   def f6(
42 |       arg: (
43 |           int | # comment
   |  _________^
44 | |         float |  # another
45 | |         complex
   | |_______________^ PYI041
46 |       )    
47 |       ) -> None: ... # PYI041
   |
   = help: Remove redundant type

PYI041.pyi:52:24: PYI041 Use `complex` instead of `int | float | complex`
   |
50 |     def good(self, arg: int) -> None: ...
51 | 
52 |     def bad(self, arg: int | float | complex) -> None: ...  # PYI041
   |                        ^^^^^^^^^^^^^^^^^^^^^ PYI041
53 | 
54 |     def bad2(self, arg: int | Union[float, complex]) -> None: ...  # PYI041
   |
   = help: Remove redundant type

PYI041.pyi:54:25: PYI041 Use `complex` instead of `int | float | complex`
   |
52 |     def bad(self, arg: int | float | complex) -> None: ...  # PYI041
53 | 
54 |     def bad2(self, arg: int | Union[float, complex]) -> None: ...  # PYI041
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
55 | 
56 |     def bad3(self, arg: Union[Union[float, complex], int]) -> None: ...  # PYI041
   |
   = help: Remove redundant type

PYI041.pyi:56:25: PYI041 Use `complex` instead of `int | float | complex`
   |
54 |     def bad2(self, arg: int | Union[float, complex]) -> None: ...  # PYI041
55 | 
56 |     def bad3(self, arg: Union[Union[float, complex], int]) -> None: ...  # PYI041
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
57 | 
58 |     def bad4(self, arg: Union[float | complex, int]) -> None: ...  # PYI041
   |
   = help: Remove redundant type

PYI041.pyi:58:25: PYI041 Use `complex` instead of `int | float | complex`
   |
56 |     def bad3(self, arg: Union[Union[float, complex], int]) -> None: ...  # PYI041
57 | 
58 |     def bad4(self, arg: Union[float | complex, int]) -> None: ...  # PYI041
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
59 | 
60 |     def bad5(self, arg: int | (float | complex)) -> None: ...  # PYI041
   |
   = help: Remove redundant type

PYI041.pyi:60:25: PYI041 Use `complex` instead of `int | float | complex`
   |
58 |     def bad4(self, arg: Union[float | complex, int]) -> None: ...  # PYI041
59 | 
60 |     def bad5(self, arg: int | (float | complex)) -> None: ...  # PYI041
   |                         ^^^^^^^^^^^^^^^^^^^^^^^ PYI041
   |
   = help: Remove redundant type
