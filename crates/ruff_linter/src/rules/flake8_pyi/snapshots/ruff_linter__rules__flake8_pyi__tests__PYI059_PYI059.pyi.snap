---
source: crates/ruff_linter/src/rules/flake8_pyi/mod.rs
---
PYI059.pyi:8:17: PYI059 [*] `Generic[]` should always be the last base class
   |
 6 | V = TypeVar('V')
 7 | 
 8 | class LinkedList(Generic[T], Sized):  # PYI059
   |                 ^^^^^^^^^^^^^^^^^^^ PYI059
 9 |     def __init__(self) -> None: ...
10 |     def push(self, item: T) -> None: ...
   |
   = help: Move `Generic[]` to the end

ℹ Safe fix
5 5 | K = TypeVar('K')
6 6 | V = TypeVar('V')
7 7 | 
8   |-class LinkedList(Generic[T], Sized):  # PYI059
  8 |+class LinkedList(Sized, Generic[T]):  # PYI059
9 9 |     def __init__(self) -> None: ...
10 10 |     def push(self, item: T) -> None: ...
11 11 | 

PYI059.pyi:12:16: PYI059 [*] `Generic[]` should always be the last base class
   |
10 |       def push(self, item: T) -> None: ...
11 |   
12 |   class MyMapping(  # PYI059
   |  ________________^
13 | |     t.Generic[K, V],
14 | |     Iterable[Tuple[K, V]],
15 | |     Container[Tuple[K, V]],
16 | | ):
   | |_^ PYI059
17 |       ...
   |
   = help: Move `Generic[]` to the end

ℹ Safe fix
10 10 |     def push(self, item: T) -> None: ...
11 11 | 
12 12 | class MyMapping(  # PYI059
13    |-    t.Generic[K, V],
14 13 |     Iterable[Tuple[K, V]],
15    |-    Container[Tuple[K, V]],
   14 |+    Container[Tuple[K, V]], t.Generic[K, V],
16 15 | ):
17 16 |     ...
18 17 | 

PYI059.pyi:22:10: PYI059 [*] `Generic[]` should always be the last base class
   |
20 | # to flag this issue in this case as well, since after fixing the error
21 | # the Generic's position issue persists.
22 | class Foo(Generic, LinkedList): ...  # PYI059
   |          ^^^^^^^^^^^^^^^^^^^^^ PYI059
   |
   = help: Move `Generic[]` to the end

ℹ Safe fix
19 19 | # Inheriting from just `Generic` is a TypeError, but it's probably fine
20 20 | # to flag this issue in this case as well, since after fixing the error
21 21 | # the Generic's position issue persists.
22    |-class Foo(Generic, LinkedList): ...  # PYI059
   22 |+class Foo(LinkedList, Generic): ...  # PYI059
23 23 | 
24 24 | 
25 25 | class Foo(  # comment about the bracket

PYI059.pyi:25:10: PYI059 [*] `Generic[]` should always be the last base class
   |
25 |   class Foo(  # comment about the bracket
   |  __________^
26 | |     # Part 1 of multiline comment 1
27 | |     # Part 2 of multiline comment 1
28 | |     Generic[T]  # comment about Generic[T]  # PYI059
29 | |     # another comment?
30 | |     ,  # comment about the comma?
31 | |     # part 1 of multiline comment 2
32 | |     # part 2 of multiline comment 2
33 | |     int,  # comment about int
34 | |     # yet another comment?
35 | | ):  # and another one for good measure
   | |_^ PYI059
36 |       ...
   |
   = help: Move `Generic[]` to the end

ℹ Safe fix
25 25 | class Foo(  # comment about the bracket
26 26 |     # Part 1 of multiline comment 1
27 27 |     # Part 2 of multiline comment 1
28    |-    Generic[T]  # comment about Generic[T]  # PYI059
29    |-    # another comment?
30    |-    ,  # comment about the comma?
   28 |+    # comment about the comma?
31 29 |     # part 1 of multiline comment 2
32 30 |     # part 2 of multiline comment 2
33    |-    int,  # comment about int
   31 |+    int, Generic[T],  # comment about int
34 32 |     # yet another comment?
35 33 | ):  # and another one for good measure
36 34 |     ...

PYI059.pyi:40:8: PYI059 `Generic[]` should always be the last base class
   |
39 | # in case of multiple Generic[] inheritance, don't fix it.
40 | class C(Generic[T], Generic[K, V]): ...  # PYI059
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI059
   |
   = help: Move `Generic[]` to the end
