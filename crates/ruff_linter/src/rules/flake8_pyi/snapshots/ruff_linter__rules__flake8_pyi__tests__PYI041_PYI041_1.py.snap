---
source: crates/ruff_linter/src/rules/flake8_pyi/mod.rs
---
PYI041_1.py:23:14: PYI041 [*] Use `float` instead of `int | float`
   |
23 | def f0(arg1: float | int) -> None:
   |              ^^^^^^^^^^^ PYI041
24 |     ...
   |
   = help: Remove redundant type

ℹ Safe fix
20 20 |     ...
21 21 | 
22 22 | 
23    |-def f0(arg1: float | int) -> None:
   23 |+def f0(arg1: float) -> None:
24 24 |     ...
25 25 | 
26 26 | 

PYI041_1.py:27:30: PYI041 [*] Use `complex` instead of `float | complex`
   |
27 | def f1(arg1: float, *, arg2: float | list[str] | type[bool] | complex) -> None:
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
28 |     ...
   |
   = help: Remove redundant type

ℹ Safe fix
24 24 |     ...
25 25 | 
26 26 | 
27    |-def f1(arg1: float, *, arg2: float | list[str] | type[bool] | complex) -> None:
   27 |+def f1(arg1: float, *, arg2: list[str] | type[bool] | complex) -> None:
28 28 |     ...
29 29 | 
30 30 | 

PYI041_1.py:31:28: PYI041 [*] Use `float` instead of `int | float`
   |
31 | def f2(arg1: int, /, arg2: int | int | float) -> None:
   |                            ^^^^^^^^^^^^^^^^^ PYI041
32 |     ...
   |
   = help: Remove redundant type

ℹ Safe fix
28 28 |     ...
29 29 | 
30 30 | 
31    |-def f2(arg1: int, /, arg2: int | int | float) -> None:
   31 |+def f2(arg1: int, /, arg2: float) -> None:
32 32 |     ...
33 33 | 
34 34 | 

PYI041_1.py:35:26: PYI041 [*] Use `float` instead of `int | float`
   |
35 | def f3(arg1: int, *args: Union[int | int | float]) -> None:
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
36 |     ...
   |
   = help: Remove redundant type

ℹ Safe fix
32 32 |     ...
33 33 | 
34 34 | 
35    |-def f3(arg1: int, *args: Union[int | int | float]) -> None:
   35 |+def f3(arg1: int, *args: float) -> None:
36 36 |     ...
37 37 | 
38 38 | 

PYI041_1.py:39:24: PYI041 [*] Use `float` instead of `int | float`
   |
39 | async def f4(**kwargs: int | int | float) -> None:
   |                        ^^^^^^^^^^^^^^^^^ PYI041
40 |     ...
   |
   = help: Remove redundant type

ℹ Safe fix
36 36 |     ...
37 37 | 
38 38 | 
39    |-async def f4(**kwargs: int | int | float) -> None:
   39 |+async def f4(**kwargs: float) -> None:
40 40 |     ...
41 41 | 
42 42 | 

PYI041_1.py:43:26: PYI041 [*] Use `float` instead of `int | float`
   |
43 | def f5(arg1: int, *args: Union[int, int, float]) -> None: 
   |                          ^^^^^^^^^^^^^^^^^^^^^^ PYI041
44 |     ...
   |
   = help: Remove redundant type

ℹ Safe fix
40 40 |     ...
41 41 | 
42 42 | 
43    |-def f5(arg1: int, *args: Union[int, int, float]) -> None: 
   43 |+def f5(arg1: int, *args: float) -> None: 
44 44 |     ...
45 45 | 
46 46 | 

PYI041_1.py:47:26: PYI041 [*] Use `float` instead of `int | float`
   |
47 | def f6(arg1: int, *args: Union[Union[int, int, float]]) -> None: 
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
48 |     ...
   |
   = help: Remove redundant type

ℹ Safe fix
44 44 |     ...
45 45 | 
46 46 | 
47    |-def f6(arg1: int, *args: Union[Union[int, int, float]]) -> None: 
   47 |+def f6(arg1: int, *args: float) -> None: 
48 48 |     ...
49 49 | 
50 50 | 

PYI041_1.py:51:26: PYI041 [*] Use `float` instead of `int | float`
   |
51 | def f7(arg1: int, *args: Union[Union[Union[int, int, float]]]) -> None: 
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
52 |     ...
   |
   = help: Remove redundant type

ℹ Safe fix
48 48 |     ...
49 49 | 
50 50 | 
51    |-def f7(arg1: int, *args: Union[Union[Union[int, int, float]]]) -> None: 
   51 |+def f7(arg1: int, *args: float) -> None: 
52 52 |     ...
53 53 | 
54 54 | 

PYI041_1.py:55:26: PYI041 [*] Use `float` instead of `int | float`
   |
55 | def f8(arg1: int, *args: Union[Union[Union[int | int | float]]]) -> None: 
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
56 |     ...
   |
   = help: Remove redundant type

ℹ Safe fix
52 52 |     ...
53 53 | 
54 54 | 
55    |-def f8(arg1: int, *args: Union[Union[Union[int | int | float]]]) -> None: 
   55 |+def f8(arg1: int, *args: float) -> None: 
56 56 |     ...
57 57 | 
58 58 | 

PYI041_1.py:60:10: PYI041 [*] Use `complex` instead of `int | float | complex`
   |
59 |   def f9(
60 |       arg: Union[  # comment 
   |  __________^
61 | |         float, # another
62 | |         complex, int]
   | |_____________________^ PYI041
63 |       ) -> None: 
64 |       ...
   |
   = help: Remove redundant type

ℹ Unsafe fix
57 57 | 
58 58 | 
59 59 | def f9(
60    |-    arg: Union[  # comment 
61    |-        float, # another
62    |-        complex, int]
   60 |+    arg: complex
63 61 |     ) -> None: 
64 62 |     ...
65 63 | 

PYI041_1.py:68:9: PYI041 [*] Use `complex` instead of `int | float | complex`
   |
66 |   def f10(
67 |       arg: (
68 | /         int | # comment
69 | |         float |  # another
70 | |         complex
   | |_______________^ PYI041
71 |       )    
72 |       ) -> None: 
   |
   = help: Remove redundant type

ℹ Unsafe fix
65 65 | 
66 66 | def f10(
67 67 |     arg: (
68    |-        int | # comment
69    |-        float |  # another
70 68 |         complex
71 69 |     )    
72 70 |     ) -> None: 

PYI041_1.py:80:24: PYI041 [*] Use `complex` instead of `int | float | complex`
   |
78 |         ...
79 |
80 |     def bad(self, arg: int | float | complex) -> None:
   |                        ^^^^^^^^^^^^^^^^^^^^^ PYI041
81 |         ...
   |
   = help: Remove redundant type

ℹ Safe fix
77 77 |     def good(self, arg: int) -> None:
78 78 |         ...
79 79 | 
80    |-    def bad(self, arg: int | float | complex) -> None:
   80 |+    def bad(self, arg: complex) -> None:
81 81 |         ...
82 82 | 
83 83 |     def bad2(self, arg: int | Union[float, complex]) -> None: 

PYI041_1.py:83:25: PYI041 [*] Use `complex` instead of `int | float | complex`
   |
81 |         ...
82 |
83 |     def bad2(self, arg: int | Union[float, complex]) -> None: 
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
84 |         ...
   |
   = help: Remove redundant type

ℹ Safe fix
80 80 |     def bad(self, arg: int | float | complex) -> None:
81 81 |         ...
82 82 | 
83    |-    def bad2(self, arg: int | Union[float, complex]) -> None: 
   83 |+    def bad2(self, arg: complex) -> None: 
84 84 |         ...
85 85 | 
86 86 |     def bad3(self, arg: Union[Union[float, complex], int]) -> None: 

PYI041_1.py:86:25: PYI041 [*] Use `complex` instead of `int | float | complex`
   |
84 |         ...
85 |
86 |     def bad3(self, arg: Union[Union[float, complex], int]) -> None: 
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
87 |         ...
   |
   = help: Remove redundant type

ℹ Safe fix
83 83 |     def bad2(self, arg: int | Union[float, complex]) -> None: 
84 84 |         ...
85 85 | 
86    |-    def bad3(self, arg: Union[Union[float, complex], int]) -> None: 
   86 |+    def bad3(self, arg: complex) -> None: 
87 87 |         ...
88 88 | 
89 89 |     def bad4(self, arg: Union[float | complex, int]) -> None: 

PYI041_1.py:89:25: PYI041 [*] Use `complex` instead of `int | float | complex`
   |
87 |         ...
88 |
89 |     def bad4(self, arg: Union[float | complex, int]) -> None: 
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
90 |         ...
   |
   = help: Remove redundant type

ℹ Safe fix
86 86 |     def bad3(self, arg: Union[Union[float, complex], int]) -> None: 
87 87 |         ...
88 88 | 
89    |-    def bad4(self, arg: Union[float | complex, int]) -> None: 
   89 |+    def bad4(self, arg: complex) -> None: 
90 90 |         ...
91 91 | 
92 92 |     def bad5(self, arg: int | (float | complex)) -> None: 

PYI041_1.py:92:25: PYI041 [*] Use `complex` instead of `int | float | complex`
   |
90 |         ...
91 |
92 |     def bad5(self, arg: int | (float | complex)) -> None: 
   |                         ^^^^^^^^^^^^^^^^^^^^^^^ PYI041
93 |         ...
   |
   = help: Remove redundant type

ℹ Safe fix
89 89 |     def bad4(self, arg: Union[float | complex, int]) -> None: 
90 90 |         ...
91 91 | 
92    |-    def bad5(self, arg: int | (float | complex)) -> None: 
   92 |+    def bad5(self, arg: complex) -> None: 
93 93 |         ...
94 94 | 
95 95 | 

PYI041_1.py:99:23: PYI041 Use `float` instead of `int | float`
    |
 97 | # fix must not yield runtime `None | None | ...` (TypeError)
 98 | class Issue18298:
 99 |     def f1(self, arg: None | int | None | float = None) -> None:  # PYI041 - no fix
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
100 |         pass
    |
    = help: Remove redundant type

PYI041_1.py:104:27: PYI041 [*] Use `float` instead of `int | float`
    |
102 |     if TYPE_CHECKING:
103 |
104 |         def f2(self, arg: None | int | None | float = None) -> None: ...  # PYI041 - with fix
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
105 |
106 |     else:
    |
    = help: Remove redundant type

ℹ Safe fix
101 101 | 
102 102 |     if TYPE_CHECKING:
103 103 | 
104     |-        def f2(self, arg: None | int | None | float = None) -> None: ...  # PYI041 - with fix
    104 |+        def f2(self, arg: None | None | float = None) -> None: ...  # PYI041 - with fix
105 105 | 
106 106 |     else:
107 107 | 

PYI041_1.py:111:23: PYI041 [*] Use `float` instead of `int | float`
    |
109 |             pass
110 |
111 |     def f3(self, arg: None | float | None | int | None = None) -> None:  # PYI041 - with fix
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PYI041
112 |         pass
    |
    = help: Remove redundant type

ℹ Safe fix
108 108 |         def f2(self, arg=None) -> None:
109 109 |             pass
110 110 | 
111     |-    def f3(self, arg: None | float | None | int | None = None) -> None:  # PYI041 - with fix
    111 |+    def f3(self, arg: None | float | None | None = None) -> None:  # PYI041 - with fix
112 112 |         pass
