---
source: crates/ruff_linter/src/rules/flake8_pyi/mod.rs
---
PYI051.pyi:4:18: PYI051 `Literal["foo"]` is redundant in a union with `str`
  |
2 | from typing import Literal, TypeAlias, Union
3 |
4 | A: str | Literal["foo"]
  |                  ^^^^^ PYI051
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
  |
  = help: Replace `Literal["foo"] | str` with `str`

PYI051.pyi:5:37: PYI051 `Literal[b"bar"]` is redundant in a union with `bytes`
  |
4 | A: str | Literal["foo"]
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
  |                                     ^^^^^^ PYI051
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
  |
  = help: Replace `typing.Union[Literal[b"bar"], bytes]` with `bytes`

PYI051.pyi:5:45: PYI051 `Literal[b"foo"]` is redundant in a union with `bytes`
  |
4 | A: str | Literal["foo"]
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
  |                                             ^^^^^^ PYI051
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
  |
  = help: Replace `typing.Union[Literal[b"foo"], bytes]` with `bytes`

PYI051.pyi:6:37: PYI051 `Literal[5]` is redundant in a union with `int`
  |
4 | A: str | Literal["foo"]
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
  |                                     ^ PYI051
7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
8 | E: TypeAlias = typing.Union[typing.Union[typing.Union[typing.Union[Literal["foo"], str]]]]
  |
  = help: Replace `typing.Union[Literal[5], int]` with `int`

PYI051.pyi:6:67: PYI051 `Literal["foo"]` is redundant in a union with `str`
  |
4 | A: str | Literal["foo"]
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
  |                                                                   ^^^^^ PYI051
7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
8 | E: TypeAlias = typing.Union[typing.Union[typing.Union[typing.Union[Literal["foo"], str]]]]
  |
  = help: Replace `typing.Union[Literal["foo"], str]` with `str`

PYI051.pyi:7:37: PYI051 `Literal[b"str_bytes"]` is redundant in a union with `bytes`
  |
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
  |                                     ^^^^^^^^^^^^ PYI051
8 | E: TypeAlias = typing.Union[typing.Union[typing.Union[typing.Union[Literal["foo"], str]]]]
9 | F: TypeAlias = typing.Union[str, typing.Union[typing.Union[typing.Union[Literal["foo"], int]]]]
  |
  = help: Replace `typing.Union[Literal[b"str_bytes"], bytes]` with `bytes`

PYI051.pyi:7:51: PYI051 `Literal[42]` is redundant in a union with `int`
  |
5 | B: TypeAlias = typing.Union[Literal[b"bar", b"foo"], bytes, str]
6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
  |                                                   ^^ PYI051
8 | E: TypeAlias = typing.Union[typing.Union[typing.Union[typing.Union[Literal["foo"], str]]]]
9 | F: TypeAlias = typing.Union[str, typing.Union[typing.Union[typing.Union[Literal["foo"], int]]]]
  |
  = help: Replace `typing.Union[Literal[42], int]` with `int`

PYI051.pyi:8:76: PYI051 `Literal["foo"]` is redundant in a union with `str`
   |
 6 | C: TypeAlias = typing.Union[Literal[5], int, typing.Union[Literal["foo"], str]]
 7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
 8 | E: TypeAlias = typing.Union[typing.Union[typing.Union[typing.Union[Literal["foo"], str]]]]
   |                                                                            ^^^^^ PYI051
 9 | F: TypeAlias = typing.Union[str, typing.Union[typing.Union[typing.Union[Literal["foo"], int]]]]
10 | G: typing.Union[str, typing.Union[typing.Union[typing.Union[Literal["foo"], int]]]]
   |
   = help: Replace `typing.Union[Literal["foo"], str]` with `str`

PYI051.pyi:9:81: PYI051 `Literal["foo"]` is redundant in a union with `str`
   |
 7 | D: TypeAlias = typing.Union[Literal[b"str_bytes", 42], bytes, int]
 8 | E: TypeAlias = typing.Union[typing.Union[typing.Union[typing.Union[Literal["foo"], str]]]]
 9 | F: TypeAlias = typing.Union[str, typing.Union[typing.Union[typing.Union[Literal["foo"], int]]]]
   |                                                                                 ^^^^^ PYI051
10 | G: typing.Union[str, typing.Union[typing.Union[typing.Union[Literal["foo"], int]]]]
   |
   = help: Replace `typing.Union[Literal["foo"], str]` with `str`

PYI051.pyi:10:69: PYI051 `Literal["foo"]` is redundant in a union with `str`
   |
 8 | E: TypeAlias = typing.Union[typing.Union[typing.Union[typing.Union[Literal["foo"], str]]]]
 9 | F: TypeAlias = typing.Union[str, typing.Union[typing.Union[typing.Union[Literal["foo"], int]]]]
10 | G: typing.Union[str, typing.Union[typing.Union[typing.Union[Literal["foo"], int]]]]
   |                                                                     ^^^^^ PYI051
11 |
12 | def func(x: complex | Literal[1J], y: Union[Literal[3.14], float]): ...
   |
   = help: Replace `typing.Union[Literal["foo"], str]` with `str`

PYI051.pyi:12:31: PYI051 `Literal[1J]` is redundant in a union with `complex`
   |
10 | G: typing.Union[str, typing.Union[typing.Union[typing.Union[Literal["foo"], int]]]]
11 |
12 | def func(x: complex | Literal[1J], y: Union[Literal[3.14], float]): ...
   |                               ^^ PYI051
13 |
14 | # OK
   |
   = help: Replace `Literal[1J] | complex` with `complex`

PYI051.pyi:12:53: PYI051 `Literal[3.14]` is redundant in a union with `float`
   |
10 | G: typing.Union[str, typing.Union[typing.Union[typing.Union[Literal["foo"], int]]]]
11 |
12 | def func(x: complex | Literal[1J], y: Union[Literal[3.14], float]): ...
   |                                                     ^^^^ PYI051
13 |
14 | # OK
   |
   = help: Replace `typing.Union[Literal[3.14], float]` with `float`
