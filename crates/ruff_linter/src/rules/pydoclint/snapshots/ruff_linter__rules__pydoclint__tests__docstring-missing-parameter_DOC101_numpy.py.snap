---
source: crates/ruff_linter/src/rules/pydoclint/mod.rs
---
DOC101 Parameter `b` missing from the docstring
   --> DOC101_numpy.py:265:5
    |
263 |     Adds two numbers and returns the result.
264 |
265 |     Parameters
    |     ^^^^^^^^^^
266 |     ----------
267 |     a : int
    |
help: Add the missing parameter to the docstring

DOC101 Parameter `multiplier` missing from the docstring
   --> DOC101_numpy.py:283:5
    |
281 |     Multiplies each element in a list by a given multiplier.
282 |
283 |     Parameters
    |     ^^^^^^^^^^
284 |     ----------
285 |     lst : list of int
    |
help: Add the missing parameter to the docstring

DOC101 Parameter `numbers` missing from the docstring
   --> DOC101_numpy.py:298:5
    |
296 |   # DOC101
297 |   def find_max_value(numbers):
298 | /     """
299 | |     Finds the maximum value in a list of numbers.
300 | |
301 | |     Returns
302 | |     -------
303 | |     int
304 | |         The maximum value found in the list.
305 | |     """
    | |_______^
306 |       return max(numbers)
    |
help: Add the missing parameter to the docstring

DOC101 These parameters are missing from the docstring: `name`, `age`
   --> DOC101_numpy.py:314:5
    |
312 |     Creates a user profile with basic information.
313 |
314 |     Parameters
    |     ^^^^^^^^^^
315 |     ----------
316 |     email : str
    |
help: Add the missing parameters to the docstring

DOC101 These parameters are missing from the docstring: `tax_rate`, `discount`
   --> DOC101_numpy.py:339:5
    |
337 |     Calculates the total price after applying tax and a discount.
338 |
339 |     Parameters
    |     ^^^^^^^^^^
340 |     ----------
341 |     item_prices : list of float
    |
help: Add the missing parameters to the docstring

DOC101 These parameters are missing from the docstring: `cc_address`, `bcc_address`
   --> DOC101_numpy.py:360:5
    |
358 |     Sends an email to the specified recipients.
359 |
360 |     Parameters
    |     ^^^^^^^^^^
361 |     ----------
362 |     subject : str
    |
help: Add the missing parameters to the docstring

DOC101 Parameter `args` missing from the docstring
   --> DOC101_numpy.py:382:5
    |
380 |     Concatenates multiple strings with a specified separator.
381 |
382 |     Parameters
    |     ^^^^^^^^^^
383 |     ----------
384 |     separator : str
    |
help: Add the missing parameter to the docstring

DOC101 These parameters are missing from the docstring: `items`, `details`
   --> DOC101_numpy.py:400:5
    |
398 |     Processes an order with a list of items and optional order details.
399 |
400 |     Parameters
    |     ^^^^^^^^^^
401 |     ----------
402 |     order_id : int
    |
help: Add the missing parameters to the docstring

DOC101 Parameter `value` missing from the docstring
   --> DOC101_numpy.py:424:9
    |
422 |       # DOC101
423 |       def __init__(self, value=0):
424 | /         """
425 | |         Initializes the calculator with an initial value.
426 | |
427 | |         """
    | |___________^
428 |           self.value = value
    |
help: Add the missing parameter to the docstring

DOC101 Parameter `number2` missing from the docstring
   --> DOC101_numpy.py:435:9
    |
433 |         Adds two numbers to the current value.
434 |
435 |         Parameters
    |         ^^^^^^^^^^
436 |         ----------
437 |         number : int or float
    |
help: Add the missing parameter to the docstring

DOC101 Parameter `value_str` missing from the docstring
   --> DOC101_numpy.py:451:9
    |
449 |       @classmethod
450 |       def from_string(cls, value_str):
451 | /         """
452 | |         Creates a Calculator instance from a string representation of a number.
453 | |
454 | |         Returns
455 | |         -------
456 | |         Calculator
457 | |             A new instance of Calculator initialized with the value from the string.
458 | |         """
    | |___________^
459 |           value = float(value_str)
460 |           return cls(value)
    |
help: Add the missing parameter to the docstring

DOC101 Parameter `number` missing from the docstring
   --> DOC101_numpy.py:465:9
    |
463 |       @staticmethod
464 |       def is_valid_number(number):
465 | /         """
466 | |         Checks if a given number is valid (int or float).
467 | |
468 | |         Returns
469 | |         -------
470 | |         bool
471 | |             True if the number is valid, False otherwise.
472 | |         """
    | |___________^
473 |           return isinstance(number, (int, float))
    |
help: Add the missing parameter to the docstring
