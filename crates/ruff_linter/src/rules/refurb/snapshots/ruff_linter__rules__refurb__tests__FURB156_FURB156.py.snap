---
source: crates/ruff_linter/src/rules/refurb/mod.rs
---
FURB156 [*] Use of hardcoded string charset
 --> FURB156.py:3:5
  |
1 | # Errors
2 |
3 | _ = "0123456789"
  |     ^^^^^^^^^^^^
4 | _ = "01234567"
5 | _ = "0123456789abcdefABCDEF"
  |
help: Replace hardcoded charset with `string.digits`
1 | # Errors
2 + import string
3 | 
  - _ = "0123456789"
4 + _ = string.digits
5 | _ = "01234567"
6 | _ = "0123456789abcdefABCDEF"
7 | _ = "abcdefghijklmnopqrstuvwxyz"

FURB156 [*] Use of hardcoded string charset
 --> FURB156.py:4:5
  |
3 | _ = "0123456789"
4 | _ = "01234567"
  |     ^^^^^^^^^^
5 | _ = "0123456789abcdefABCDEF"
6 | _ = "abcdefghijklmnopqrstuvwxyz"
  |
help: Replace hardcoded charset with `string.octdigits`
1 | # Errors
2 + import string
3 | 
4 | _ = "0123456789"
  - _ = "01234567"
5 + _ = string.octdigits
6 | _ = "0123456789abcdefABCDEF"
7 | _ = "abcdefghijklmnopqrstuvwxyz"
8 | _ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

FURB156 [*] Use of hardcoded string charset
 --> FURB156.py:5:5
  |
3 | _ = "0123456789"
4 | _ = "01234567"
5 | _ = "0123456789abcdefABCDEF"
  |     ^^^^^^^^^^^^^^^^^^^^^^^^
6 | _ = "abcdefghijklmnopqrstuvwxyz"
7 | _ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  |
help: Replace hardcoded charset with `string.hexdigits`
1 | # Errors
2 + import string
3 | 
4 | _ = "0123456789"
5 | _ = "01234567"
  - _ = "0123456789abcdefABCDEF"
6 + _ = string.hexdigits
7 | _ = "abcdefghijklmnopqrstuvwxyz"
8 | _ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
9 | _ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"

FURB156 [*] Use of hardcoded string charset
 --> FURB156.py:6:5
  |
4 | _ = "01234567"
5 | _ = "0123456789abcdefABCDEF"
6 | _ = "abcdefghijklmnopqrstuvwxyz"
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
7 | _ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
8 | _ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
  |
help: Replace hardcoded charset with `string.ascii_lowercase`
1  | # Errors
2  + import string
3  | 
4  | _ = "0123456789"
5  | _ = "01234567"
6  | _ = "0123456789abcdefABCDEF"
   - _ = "abcdefghijklmnopqrstuvwxyz"
7  + _ = string.ascii_lowercase
8  | _ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
9  | _ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
10 | _ = r"""!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"""

FURB156 [*] Use of hardcoded string charset
 --> FURB156.py:7:5
  |
5 | _ = "0123456789abcdefABCDEF"
6 | _ = "abcdefghijklmnopqrstuvwxyz"
7 | _ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 | _ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
9 | _ = r"""!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"""
  |
help: Replace hardcoded charset with `string.ascii_uppercase`
1  | # Errors
2  + import string
3  | 
4  | _ = "0123456789"
5  | _ = "01234567"
6  | _ = "0123456789abcdefABCDEF"
7  | _ = "abcdefghijklmnopqrstuvwxyz"
   - _ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
8  + _ = string.ascii_uppercase
9  | _ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
10 | _ = r"""!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"""
11 | _ = " \t\n\r\v\f"

FURB156 [*] Use of hardcoded string charset
  --> FURB156.py:8:5
   |
 6 | _ = "abcdefghijklmnopqrstuvwxyz"
 7 | _ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
 8 | _ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 9 | _ = r"""!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"""
10 | _ = " \t\n\r\v\f"
   |
help: Replace hardcoded charset with `string.ascii_letters`
1  | # Errors
2  + import string
3  | 
4  | _ = "0123456789"
5  | _ = "01234567"
6  | _ = "0123456789abcdefABCDEF"
7  | _ = "abcdefghijklmnopqrstuvwxyz"
8  | _ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
   - _ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
9  + _ = string.ascii_letters
10 | _ = r"""!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"""
11 | _ = " \t\n\r\v\f"
12 | 

FURB156 [*] Use of hardcoded string charset
  --> FURB156.py:9:5
   |
 7 | _ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
 8 | _ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
 9 | _ = r"""!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"""
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
10 | _ = " \t\n\r\v\f"
   |
help: Replace hardcoded charset with `string.punctuation`
1  | # Errors
2  + import string
3  | 
4  | _ = "0123456789"
5  | _ = "01234567"
--------------------------------------------------------------------------------
7  | _ = "abcdefghijklmnopqrstuvwxyz"
8  | _ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
9  | _ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
   - _ = r"""!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"""
10 + _ = string.punctuation
11 | _ = " \t\n\r\v\f"
12 | 
13 | _ = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c'

FURB156 [*] Use of hardcoded string charset
  --> FURB156.py:10:5
   |
 8 | _ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
 9 | _ = r"""!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"""
10 | _ = " \t\n\r\v\f"
   |     ^^^^^^^^^^^^^
11 |
12 | _ = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c'
   |
help: Replace hardcoded charset with `string.whitespace`
1  | # Errors
2  + import string
3  | 
4  | _ = "0123456789"
5  | _ = "01234567"
--------------------------------------------------------------------------------
8  | _ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
9  | _ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
10 | _ = r"""!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"""
   - _ = " \t\n\r\v\f"
11 + _ = string.whitespace
12 | 
13 | _ = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c'
14 | _ = (

FURB156 [*] Use of hardcoded string charset
  --> FURB156.py:12:5
   |
10 | _ = " \t\n\r\v\f"
11 |
12 | _ = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c'
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 | _ = (
14 |     '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&'
   |
help: Replace hardcoded charset with `string.printable`
1  | # Errors
2  + import string
3  | 
4  | _ = "0123456789"
5  | _ = "01234567"
--------------------------------------------------------------------------------
10 | _ = r"""!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"""
11 | _ = " \t\n\r\v\f"
12 | 
   - _ = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c'
13 + _ = string.printable
14 | _ = (
15 |     '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&'
16 |     "'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c"

FURB156 [*] Use of hardcoded string charset
  --> FURB156.py:14:5
   |
12 |   _ = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c'
13 |   _ = (
14 | /     '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&'
15 | |     "'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c"
   | |________________________________________________^
16 |   )
17 |   _ = id("0123"
   |
help: Replace hardcoded charset with `string.printable`
1  | # Errors
2  + import string
3  | 
4  | _ = "0123456789"
5  | _ = "01234567"
--------------------------------------------------------------------------------
12 | 
13 | _ = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c'
14 | _ = (
   -     '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&'
   -     "'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c"
15 +     string.printable
16 | )
17 | _ = id("0123"
18 |        "4567"

FURB156 [*] Use of hardcoded string charset
  --> FURB156.py:17:8
   |
15 |       "'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c"
16 |   )
17 |   _ = id("0123"
   |  ________^
18 | |        "4567"
19 | |        "89")
   | |___________^
20 |
21 |   _ = (
   |
help: Replace hardcoded charset with `string.digits`
1  | # Errors
2  + import string
3  | 
4  | _ = "0123456789"
5  | _ = "01234567"
--------------------------------------------------------------------------------
15 |     '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&'
16 |     "'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c"
17 | )
   - _ = id("0123"
   -        "4567"
   -        "89")
18 + _ = id(string.digits)
19 | 
20 | _ = (
21 |     "0123456789"

FURB156 [*] Use of hardcoded string charset
  --> FURB156.py:22:5
   |
21 | _ = (
22 |     "0123456789"
   |     ^^^^^^^^^^^^
23 | ).capitalize()
   |
help: Replace hardcoded charset with `string.digits`
1  | # Errors
2  + import string
3  | 
4  | _ = "0123456789"
5  | _ = "01234567"
--------------------------------------------------------------------------------
20 |        "89")
21 | 
22 | _ = (
   -     "0123456789"
23 +     string.digits
24 | ).capitalize()
25 | 
26 | _ = (

FURB156 [*] Use of hardcoded string charset
  --> FURB156.py:26:5
   |
25 | _ = (
26 |     "0123456789"
   |     ^^^^^^^^^^^^
27 |     # with comment
28 | ).capitalize()
   |
help: Replace hardcoded charset with `string.digits`
1  | # Errors
2  + import string
3  | 
4  | _ = "0123456789"
5  | _ = "01234567"
--------------------------------------------------------------------------------
24 | ).capitalize()
25 | 
26 | _ = (
   -     "0123456789"
27 +     string.digits
28 |     # with comment
29 | ).capitalize()
30 | 

FURB156 [*] Use of hardcoded string charset
  --> FURB156.py:31:6
   |
30 | # example with augmented assignment
31 | _ += "0123456789"
   |      ^^^^^^^^^^^^
32 |
33 | # OK
   |
help: Replace hardcoded charset with `string.digits`
1  | # Errors
2  + import string
3  | 
4  | _ = "0123456789"
5  | _ = "01234567"
--------------------------------------------------------------------------------
29 | ).capitalize()
30 | 
31 | # example with augmented assignment
   - _ += "0123456789"
32 + _ += string.digits
33 | 
34 | # OK
35 |
