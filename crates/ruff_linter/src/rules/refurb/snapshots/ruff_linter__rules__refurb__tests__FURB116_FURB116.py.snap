---
source: crates/ruff_linter/src/rules/refurb/mod.rs
---
FURB116.py:9:7: FURB116 [*] Replace `oct` call with `f"{num:o}"`
   |
 7 |     return num
 8 |
 9 | print(oct(num)[2:])  # FURB116
   |       ^^^^^^^^^^^^ FURB116
10 | print(hex(num)[2:])  # FURB116
11 | print(bin(num)[2:])  # FURB116
   |
   = help: Replace with `f"{num:o}"`

ℹ Unsafe fix
6  6  | def return_num() -> int:
7  7  |     return num
8  8  | 
9     |-print(oct(num)[2:])  # FURB116
   9  |+print(f"{num:o}")  # FURB116
10 10 | print(hex(num)[2:])  # FURB116
11 11 | print(bin(num)[2:])  # FURB116
12 12 | 

FURB116.py:10:7: FURB116 [*] Replace `hex` call with `f"{num:x}"`
   |
 9 | print(oct(num)[2:])  # FURB116
10 | print(hex(num)[2:])  # FURB116
   |       ^^^^^^^^^^^^ FURB116
11 | print(bin(num)[2:])  # FURB116
   |
   = help: Replace with `f"{num:x}"`

ℹ Unsafe fix
7  7  |     return num
8  8  | 
9  9  | print(oct(num)[2:])  # FURB116
10    |-print(hex(num)[2:])  # FURB116
   10 |+print(f"{num:x}")  # FURB116
11 11 | print(bin(num)[2:])  # FURB116
12 12 | 
13 13 | print(oct(1337)[2:])  # FURB116

FURB116.py:11:7: FURB116 [*] Replace `bin` call with `f"{num:b}"`
   |
 9 | print(oct(num)[2:])  # FURB116
10 | print(hex(num)[2:])  # FURB116
11 | print(bin(num)[2:])  # FURB116
   |       ^^^^^^^^^^^^ FURB116
12 |
13 | print(oct(1337)[2:])  # FURB116
   |
   = help: Replace with `f"{num:b}"`

ℹ Unsafe fix
8  8  | 
9  9  | print(oct(num)[2:])  # FURB116
10 10 | print(hex(num)[2:])  # FURB116
11    |-print(bin(num)[2:])  # FURB116
   11 |+print(f"{num:b}")  # FURB116
12 12 | 
13 13 | print(oct(1337)[2:])  # FURB116
14 14 | print(hex(1337)[2:])  # FURB116

FURB116.py:13:7: FURB116 [*] Replace `oct` call with `f"{1337:o}"`
   |
11 | print(bin(num)[2:])  # FURB116
12 |
13 | print(oct(1337)[2:])  # FURB116
   |       ^^^^^^^^^^^^^ FURB116
14 | print(hex(1337)[2:])  # FURB116
15 | print(bin(1337)[2:])  # FURB116
   |
   = help: Replace with `f"{1337:o}"`

ℹ Safe fix
10 10 | print(hex(num)[2:])  # FURB116
11 11 | print(bin(num)[2:])  # FURB116
12 12 | 
13    |-print(oct(1337)[2:])  # FURB116
   13 |+print(f"{1337:o}")  # FURB116
14 14 | print(hex(1337)[2:])  # FURB116
15 15 | print(bin(1337)[2:])  # FURB116
16 16 | 

FURB116.py:14:7: FURB116 [*] Replace `hex` call with `f"{1337:x}"`
   |
13 | print(oct(1337)[2:])  # FURB116
14 | print(hex(1337)[2:])  # FURB116
   |       ^^^^^^^^^^^^^ FURB116
15 | print(bin(1337)[2:])  # FURB116
   |
   = help: Replace with `f"{1337:x}"`

ℹ Safe fix
11 11 | print(bin(num)[2:])  # FURB116
12 12 | 
13 13 | print(oct(1337)[2:])  # FURB116
14    |-print(hex(1337)[2:])  # FURB116
   14 |+print(f"{1337:x}")  # FURB116
15 15 | print(bin(1337)[2:])  # FURB116
16 16 | 
17 17 | print(bin(return_num())[2:])  # FURB116 (no autofix)

FURB116.py:15:7: FURB116 [*] Replace `bin` call with `f"{1337:b}"`
   |
13 | print(oct(1337)[2:])  # FURB116
14 | print(hex(1337)[2:])  # FURB116
15 | print(bin(1337)[2:])  # FURB116
   |       ^^^^^^^^^^^^^ FURB116
16 |
17 | print(bin(return_num())[2:])  # FURB116 (no autofix)
   |
   = help: Replace with `f"{1337:b}"`

ℹ Safe fix
12 12 | 
13 13 | print(oct(1337)[2:])  # FURB116
14 14 | print(hex(1337)[2:])  # FURB116
15    |-print(bin(1337)[2:])  # FURB116
   15 |+print(f"{1337:b}")  # FURB116
16 16 | 
17 17 | print(bin(return_num())[2:])  # FURB116 (no autofix)
18 18 | print(bin(int(f"{num}"))[2:])  # FURB116 (no autofix)

FURB116.py:17:7: FURB116 Replace `bin` call with f-string
   |
15 | print(bin(1337)[2:])  # FURB116
16 |
17 | print(bin(return_num())[2:])  # FURB116 (no autofix)
   |       ^^^^^^^^^^^^^^^^^^^^^ FURB116
18 | print(bin(int(f"{num}"))[2:])  # FURB116 (no autofix)
   |
   = help: Replace with f-string

FURB116.py:18:7: FURB116 Replace `bin` call with f-string
   |
17 | print(bin(return_num())[2:])  # FURB116 (no autofix)
18 | print(bin(int(f"{num}"))[2:])  # FURB116 (no autofix)
   |       ^^^^^^^^^^^^^^^^^^^^^^ FURB116
19 |
20 | ## invalid
   |
   = help: Replace with f-string

FURB116.py:27:7: FURB116 [*] Replace `bin` call with `f"{d:b}"`
   |
25 | d = datetime.datetime.now(tz=datetime.UTC)
26 | # autofix is unsafe
27 | print(bin(d)[2:])
   |       ^^^^^^^^^^ FURB116
28 | print(bin(len("xyz").numerator)[2:])
   |
   = help: Replace with `f"{d:b}"`

ℹ Unsafe fix
24 24 | # https://github.com/astral-sh/ruff/issues/16472
25 25 | d = datetime.datetime.now(tz=datetime.UTC)
26 26 | # autofix is unsafe
27    |-print(bin(d)[2:])
   27 |+print(f"{d:b}")
28 28 | print(bin(len("xyz").numerator)[2:])
29 29 | 
30 30 | # no autofix, as it introduces a syntax error

FURB116.py:28:7: FURB116 [*] Replace `bin` call with `f"{len("xyz").numerator:b}"`
   |
26 | # autofix is unsafe
27 | print(bin(d)[2:])
28 | print(bin(len("xyz").numerator)[2:])
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ FURB116
29 |
30 | # no autofix, as it introduces a syntax error
   |
   = help: Replace with `f"{len("xyz").numerator:b}"`

ℹ Unsafe fix
25 25 | d = datetime.datetime.now(tz=datetime.UTC)
26 26 | # autofix is unsafe
27 27 | print(bin(d)[2:])
28    |-print(bin(len("xyz").numerator)[2:])
   28 |+print(f"{len("xyz").numerator:b}")
29 29 | 
30 30 | # no autofix, as it introduces a syntax error
31 31 | print(bin({0: 1}[0].numerator)[2:])

FURB116.py:31:7: FURB116 Replace `bin` call with f-string
   |
30 | # no autofix, as it introduces a syntax error
31 | print(bin({0: 1}[0].numerator)[2:])
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ FURB116
32 | # no autofix for Python 3.11 and earlier, as it introduces a syntax error
33 | print(bin(ord("\\").numerator)[2:])
   |
   = help: Replace with f-string

FURB116.py:33:7: FURB116 [*] Replace `bin` call with `f"{ord("\\").numerator:b}"`
   |
31 | print(bin({0: 1}[0].numerator)[2:])
32 | # no autofix for Python 3.11 and earlier, as it introduces a syntax error
33 | print(bin(ord("\\").numerator)[2:])
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ FURB116
34 | print(hex(sys
35 | .maxunicode)[2:])
   |
   = help: Replace with `f"{ord("\\").numerator:b}"`

ℹ Unsafe fix
30 30 | # no autofix, as it introduces a syntax error
31 31 | print(bin({0: 1}[0].numerator)[2:])
32 32 | # no autofix for Python 3.11 and earlier, as it introduces a syntax error
33    |-print(bin(ord("\\").numerator)[2:])
   33 |+print(f"{ord("\\").numerator:b}")
34 34 | print(hex(sys
35 35 | .maxunicode)[2:])

FURB116.py:34:7: FURB116 [*] Replace `hex` call with f-string
   |
32 |   # no autofix for Python 3.11 and earlier, as it introduces a syntax error
33 |   print(bin(ord("\\").numerator)[2:])
34 |   print(hex(sys
   |  _______^
35 | | .maxunicode)[2:])
   | |________________^ FURB116
   |
   = help: Replace with f-string

ℹ Unsafe fix
31 31 | print(bin({0: 1}[0].numerator)[2:])
32 32 | # no autofix for Python 3.11 and earlier, as it introduces a syntax error
33 33 | print(bin(ord("\\").numerator)[2:])
34    |-print(hex(sys
35    |-.maxunicode)[2:])
   34 |+print(f"{sys
   35 |+.maxunicode:x}")
