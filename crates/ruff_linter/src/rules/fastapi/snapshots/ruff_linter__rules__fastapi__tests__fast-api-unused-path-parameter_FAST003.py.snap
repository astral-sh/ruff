---
source: crates/ruff_linter/src/rules/fastapi/mod.rs
---
FAST003 [*] Parameter `thing_id` appears in route path, but not in `read_thing` signature
  --> FAST003.py:9:19
   |
 8 | # Errors
 9 | @app.get("/things/{thing_id}")
   |                   ^^^^^^^^^^
10 | async def read_thing(query: str):
11 |     return {"query": query}
   |
help: Add `thing_id` to function signature
7  | 
8  | # Errors
9  | @app.get("/things/{thing_id}")
   - async def read_thing(query: str):
10 + async def read_thing(query: str, thing_id):
11 |     return {"query": query}
12 | 
13 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `isbn` appears in route path, but not in `read_thing` signature
  --> FAST003.py:14:23
   |
14 | @app.get("/books/isbn-{isbn}")
   |                       ^^^^^^
15 | async def read_thing():
16 |     ...
   |
help: Add `isbn` to function signature
12 | 
13 | 
14 | @app.get("/books/isbn-{isbn}")
   - async def read_thing():
15 + async def read_thing(isbn):
16 |     ...
17 | 
18 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `thing_id` appears in route path, but not in `read_thing` signature
  --> FAST003.py:19:19
   |
19 | @app.get("/things/{thing_id:path}")
   |                   ^^^^^^^^^^^^^^^
20 | async def read_thing(query: str):
21 |     return {"query": query}
   |
help: Add `thing_id` to function signature
17 | 
18 | 
19 | @app.get("/things/{thing_id:path}")
   - async def read_thing(query: str):
20 + async def read_thing(query: str, thing_id):
21 |     return {"query": query}
22 | 
23 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `thing_id` appears in route path, but not in `read_thing` signature
  --> FAST003.py:24:19
   |
24 | @app.get("/things/{thing_id : path}")
   |                   ^^^^^^^^^^^^^^^^^
25 | async def read_thing(query: str):
26 |     return {"query": query}
   |
help: Add `thing_id` to function signature
22 | 
23 | 
24 | @app.get("/things/{thing_id : path}")
   - async def read_thing(query: str):
25 + async def read_thing(query: str, thing_id):
26 |     return {"query": query}
27 | 
28 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `title` appears in route path, but not in `read_thing` signature
  --> FAST003.py:29:27
   |
29 | @app.get("/books/{author}/{title}")
   |                           ^^^^^^^
30 | async def read_thing(author: str):
31 |     return {"author": author}
   |
help: Add `title` to function signature
27 | 
28 | 
29 | @app.get("/books/{author}/{title}")
   - async def read_thing(author: str):
30 + async def read_thing(author: str, title):
31 |     return {"author": author}
32 | 
33 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `author_name` appears in route path, but not in `read_thing` signature
  --> FAST003.py:34:18
   |
34 | @app.get("/books/{author_name}/{title}")
   |                  ^^^^^^^^^^^^^
35 | async def read_thing():
36 |     ...
   |
help: Add `author_name` to function signature
32 | 
33 | 
34 | @app.get("/books/{author_name}/{title}")
   - async def read_thing():
35 + async def read_thing(author_name):
36 |     ...
37 | 
38 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `title` appears in route path, but not in `read_thing` signature
  --> FAST003.py:34:32
   |
34 | @app.get("/books/{author_name}/{title}")
   |                                ^^^^^^^
35 | async def read_thing():
36 |     ...
   |
help: Add `title` to function signature
32 | 
33 | 
34 | @app.get("/books/{author_name}/{title}")
   - async def read_thing():
35 + async def read_thing(title):
36 |     ...
37 | 
38 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 Parameter `author` appears in route path, but only as a positional-only argument in `read_thing` signature
  --> FAST003.py:39:18
   |
39 | @app.get("/books/{author}/{title}")
   |                  ^^^^^^^^
40 | async def read_thing(author: str, title: str, /):
41 |     return {"author": author, "title": title}
   |

FAST003 Parameter `title` appears in route path, but only as a positional-only argument in `read_thing` signature
  --> FAST003.py:39:27
   |
39 | @app.get("/books/{author}/{title}")
   |                           ^^^^^^^
40 | async def read_thing(author: str, title: str, /):
41 |     return {"author": author, "title": title}
   |

FAST003 [*] Parameter `title` appears in route path, but not in `read_thing` signature
  --> FAST003.py:44:27
   |
44 | @app.get("/books/{author}/{title}/{page}")
   |                           ^^^^^^^
45 | async def read_thing(
46 |     author: str,
   |
help: Add `title` to function signature
44 | @app.get("/books/{author}/{title}/{page}")
45 | async def read_thing(
46 |     author: str,
   -     query: str,
47 +     query: str, title,
48 | ): ...
49 | 
50 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `page` appears in route path, but not in `read_thing` signature
  --> FAST003.py:44:35
   |
44 | @app.get("/books/{author}/{title}/{page}")
   |                                   ^^^^^^
45 | async def read_thing(
46 |     author: str,
   |
help: Add `page` to function signature
44 | @app.get("/books/{author}/{title}/{page}")
45 | async def read_thing(
46 |     author: str,
   -     query: str,
47 +     query: str, page,
48 | ): ...
49 | 
50 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `author` appears in route path, but not in `read_thing` signature
  --> FAST003.py:51:18
   |
51 | @app.get("/books/{author}/{title}")
   |                  ^^^^^^^^
52 | async def read_thing():
53 |     ...
   |
help: Add `author` to function signature
49 | 
50 | 
51 | @app.get("/books/{author}/{title}")
   - async def read_thing():
52 + async def read_thing(author):
53 |     ...
54 | 
55 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `title` appears in route path, but not in `read_thing` signature
  --> FAST003.py:51:27
   |
51 | @app.get("/books/{author}/{title}")
   |                           ^^^^^^^
52 | async def read_thing():
53 |     ...
   |
help: Add `title` to function signature
49 | 
50 | 
51 | @app.get("/books/{author}/{title}")
   - async def read_thing():
52 + async def read_thing(title):
53 |     ...
54 | 
55 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `title` appears in route path, but not in `read_thing` signature
  --> FAST003.py:56:27
   |
56 | @app.get("/books/{author}/{title}")
   |                           ^^^^^^^
57 | async def read_thing(*, author: str):
58 |     ...
   |
help: Add `title` to function signature
54 | 
55 | 
56 | @app.get("/books/{author}/{title}")
   - async def read_thing(*, author: str):
57 + async def read_thing(title, *, author: str):
58 |     ...
59 | 
60 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `title` appears in route path, but not in `read_thing` signature
  --> FAST003.py:61:27
   |
61 | @app.get("/books/{author}/{title}")
   |                           ^^^^^^^
62 | async def read_thing(hello, /, *, author: str):
63 |     ...
   |
help: Add `title` to function signature
59 | 
60 | 
61 | @app.get("/books/{author}/{title}")
   - async def read_thing(hello, /, *, author: str):
62 + async def read_thing(hello, /, title, *, author: str):
63 |     ...
64 | 
65 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `thing_id` appears in route path, but not in `read_thing` signature
  --> FAST003.py:66:19
   |
66 | @app.get("/things/{thing_id}")
   |                   ^^^^^^^^^^
67 | async def read_thing(
68 |         query: str,
   |
help: Add `thing_id` to function signature
65 | 
66 | @app.get("/things/{thing_id}")
67 | async def read_thing(
   -         query: str,
68 +         query: str, thing_id,
69 | ):
70 |     return {"query": query}
71 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `thing_id` appears in route path, but not in `read_thing` signature
  --> FAST003.py:73:19
   |
73 | @app.get("/things/{thing_id}")
   |                   ^^^^^^^^^^
74 | async def read_thing(
75 |         query: str = "default",
   |
help: Add `thing_id` to function signature
72 | 
73 | @app.get("/things/{thing_id}")
74 | async def read_thing(
   -         query: str = "default",
75 +         thing_id, query: str = "default",
76 | ):
77 |     return {"query": query}
78 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `thing_id` appears in route path, but not in `read_thing` signature
  --> FAST003.py:80:19
   |
80 | @app.get("/things/{thing_id}")
   |                   ^^^^^^^^^^
81 | async def read_thing(
82 |         *, query: str = "default",
   |
help: Add `thing_id` to function signature
79 | 
80 | @app.get("/things/{thing_id}")
81 | async def read_thing(
   -         *, query: str = "default",
82 +         thing_id, *, query: str = "default",
83 | ):
84 |     return {"query": query}
85 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `name` appears in route path, but not in `read_thing` signature
  --> FAST003.py:87:18
   |
87 | @app.get("/books/{name}/{title}")
   |                  ^^^^^^
88 | async def read_thing(*, author: Annotated[str, Path(alias="author_name")], title: str):
89 |     return {"author": author, "title": title}
   |
help: Add `name` to function signature
85 | 
86 | 
87 | @app.get("/books/{name}/{title}")
   - async def read_thing(*, author: Annotated[str, Path(alias="author_name")], title: str):
88 + async def read_thing(name, *, author: Annotated[str, Path(alias="author_name")], title: str):
89 |     return {"author": author, "title": title}
90 | 
91 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `thing_id` appears in route path, but not in `single` signature
   --> FAST003.py:158:19
    |
157 | ### Errors
158 | @app.get("/things/{thing_id}")
    |                   ^^^^^^^^^^
159 | async def single(other: Annotated[str, Depends(something_else)]): ...
160 | @app.get("/things/{thing_id}")
    |
help: Add `thing_id` to function signature
156 | 
157 | ### Errors
158 | @app.get("/things/{thing_id}")
    - async def single(other: Annotated[str, Depends(something_else)]): ...
159 + async def single(other: Annotated[str, Depends(something_else)], thing_id): ...
160 | @app.get("/things/{thing_id}")
161 | async def default(other: str = Depends(something_else)): ...
162 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `thing_id` appears in route path, but not in `default` signature
   --> FAST003.py:160:19
    |
158 | @app.get("/things/{thing_id}")
159 | async def single(other: Annotated[str, Depends(something_else)]): ...
160 | @app.get("/things/{thing_id}")
    |                   ^^^^^^^^^^
161 | async def default(other: str = Depends(something_else)): ...
    |
help: Add `thing_id` to function signature
158 | @app.get("/things/{thing_id}")
159 | async def single(other: Annotated[str, Depends(something_else)]): ...
160 | @app.get("/things/{thing_id}")
    - async def default(other: str = Depends(something_else)): ...
161 + async def default(thing_id, other: str = Depends(something_else)): ...
162 | 
163 | 
164 | ### No errors
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `id` appears in route path, but not in `get_id_pydantic_full` signature
   --> FAST003.py:197:12
    |
196 | # Errors
197 | @app.get("/{id}")
    |            ^^^^
198 | async def get_id_pydantic_full(
199 |     params: Annotated[PydanticParams, Depends(PydanticParams)],
    |
help: Add `id` to function signature
196 | # Errors
197 | @app.get("/{id}")
198 | async def get_id_pydantic_full(
    -     params: Annotated[PydanticParams, Depends(PydanticParams)],
199 +     params: Annotated[PydanticParams, Depends(PydanticParams)], id,
200 | ): ...
201 | @app.get("/{id}")
202 | async def get_id_pydantic_short(params: Annotated[PydanticParams, Depends()]): ...
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `id` appears in route path, but not in `get_id_pydantic_short` signature
   --> FAST003.py:201:12
    |
199 |     params: Annotated[PydanticParams, Depends(PydanticParams)],
200 | ): ...
201 | @app.get("/{id}")
    |            ^^^^
202 | async def get_id_pydantic_short(params: Annotated[PydanticParams, Depends()]): ...
203 | @app.get("/{id}")
    |
help: Add `id` to function signature
199 |     params: Annotated[PydanticParams, Depends(PydanticParams)],
200 | ): ...
201 | @app.get("/{id}")
    - async def get_id_pydantic_short(params: Annotated[PydanticParams, Depends()]): ...
202 + async def get_id_pydantic_short(params: Annotated[PydanticParams, Depends()], id): ...
203 | @app.get("/{id}")
204 | async def get_id_init_not_annotated(params = Depends(InitParams)): ...
205 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

FAST003 [*] Parameter `id` appears in route path, but not in `get_id_init_not_annotated` signature
   --> FAST003.py:203:12
    |
201 | @app.get("/{id}")
202 | async def get_id_pydantic_short(params: Annotated[PydanticParams, Depends()]): ...
203 | @app.get("/{id}")
    |            ^^^^
204 | async def get_id_init_not_annotated(params = Depends(InitParams)): ...
    |
help: Add `id` to function signature
201 | @app.get("/{id}")
202 | async def get_id_pydantic_short(params: Annotated[PydanticParams, Depends()]): ...
203 | @app.get("/{id}")
    - async def get_id_init_not_annotated(params = Depends(InitParams)): ...
204 + async def get_id_init_not_annotated(id, params = Depends(InitParams)): ...
205 | 
206 | 
207 | # No errors
note: This is an unsafe fix and may remove comments or change runtime behavior
