---
source: crates/ruff_linter/src/rules/fastapi/mod.rs
---
FAST002 [*] FastAPI dependency without `Annotated`
  --> FAST002_2.py:27:5
   |
25 | async def test_ellipsis_query(
26 |     # This should become: param: Annotated[str, Query(description="Test param")]
27 |     param: str = Query(..., description="Test param"),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
28 | ) -> str:
29 |     return param
   |
help: Replace with `typing.Annotated`
1  | """Test FAST002 ellipsis handling."""
2  | 
3  | from fastapi import Body, Cookie, Depends, FastAPI, Header, Query, Security
4  + from typing import Annotated
5  | 
6  | app = FastAPI()
7  | 
--------------------------------------------------------------------------------
25 | @app.get("/test1")
26 | async def test_ellipsis_query(
27 |     # This should become: param: Annotated[str, Query(description="Test param")]
   -     param: str = Query(..., description="Test param"),
28 +     param: Annotated[str, Query(description="Test param")],
29 | ) -> str:
30 |     return param
31 | 
note: This is an unsafe fix and may change runtime behavior

FAST002 [*] FastAPI dependency without `Annotated`
  --> FAST002_2.py:35:5
   |
33 | async def test_ellipsis_header(
34 |     # This should become: auth: Annotated[str, Header(description="Auth header")]
35 |     auth: str = Header(..., description="Auth header"),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
36 | ) -> str:
37 |     return auth
   |
help: Replace with `typing.Annotated`
1  | """Test FAST002 ellipsis handling."""
2  | 
3  | from fastapi import Body, Cookie, Depends, FastAPI, Header, Query, Security
4  + from typing import Annotated
5  | 
6  | app = FastAPI()
7  | 
--------------------------------------------------------------------------------
33 | @app.get("/test2")
34 | async def test_ellipsis_header(
35 |     # This should become: auth: Annotated[str, Header(description="Auth header")]
   -     auth: str = Header(..., description="Auth header"),
36 +     auth: Annotated[str, Header(description="Auth header")],
37 | ) -> str:
38 |     return auth
39 | 
note: This is an unsafe fix and may change runtime behavior

FAST002 [*] FastAPI dependency without `Annotated`
  --> FAST002_2.py:43:5
   |
41 | async def test_ellipsis_body(
42 |     # This should become: data: Annotated[dict, Body(description="Request body")]
43 |     data: dict = Body(..., description="Request body"),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
44 | ) -> dict:
45 |     return data
   |
help: Replace with `typing.Annotated`
1  | """Test FAST002 ellipsis handling."""
2  | 
3  | from fastapi import Body, Cookie, Depends, FastAPI, Header, Query, Security
4  + from typing import Annotated
5  | 
6  | app = FastAPI()
7  | 
--------------------------------------------------------------------------------
41 | @app.post("/test3")
42 | async def test_ellipsis_body(
43 |     # This should become: data: Annotated[dict, Body(description="Request body")]
   -     data: dict = Body(..., description="Request body"),
44 +     data: Annotated[dict, Body(description="Request body")],
45 | ) -> dict:
46 |     return data
47 | 
note: This is an unsafe fix and may change runtime behavior

FAST002 [*] FastAPI dependency without `Annotated`
  --> FAST002_2.py:51:5
   |
49 | async def test_ellipsis_cookie(
50 |     # This should become: session: Annotated[str, Cookie(description="Session ID")]
51 |     session: str = Cookie(..., description="Session ID"),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
52 | ) -> str:
53 |     return session
   |
help: Replace with `typing.Annotated`
1  | """Test FAST002 ellipsis handling."""
2  | 
3  | from fastapi import Body, Cookie, Depends, FastAPI, Header, Query, Security
4  + from typing import Annotated
5  | 
6  | app = FastAPI()
7  | 
--------------------------------------------------------------------------------
49 | @app.get("/test4")
50 | async def test_ellipsis_cookie(
51 |     # This should become: session: Annotated[str, Cookie(description="Session ID")]
   -     session: str = Cookie(..., description="Session ID"),
52 +     session: Annotated[str, Cookie(description="Session ID")],
53 | ) -> str:
54 |     return session
55 | 
note: This is an unsafe fix and may change runtime behavior

FAST002 [*] FastAPI dependency without `Annotated`
  --> FAST002_2.py:59:5
   |
57 | async def test_simple_ellipsis(
58 |     # This should become: id: Annotated[str, Query()]
59 |     id: str = Query(...),
   |     ^^^^^^^^^^^^^^^^^^^^
60 | ) -> str:
61 |     return id
   |
help: Replace with `typing.Annotated`
1  | """Test FAST002 ellipsis handling."""
2  | 
3  | from fastapi import Body, Cookie, Depends, FastAPI, Header, Query, Security
4  + from typing import Annotated
5  | 
6  | app = FastAPI()
7  | 
--------------------------------------------------------------------------------
57 | @app.get("/test5")
58 | async def test_simple_ellipsis(
59 |     # This should become: id: Annotated[str, Query()]
   -     id: str = Query(...),
60 +     id: Annotated[str, Query()],
61 | ) -> str:
62 |     return id
63 | 
note: This is an unsafe fix and may change runtime behavior

FAST002 [*] FastAPI dependency without `Annotated`
  --> FAST002_2.py:67:5
   |
65 | async def test_multiple_kwargs_with_ellipsis(
66 |     # This should become: param: Annotated[str, Query(description="Test", min_length=1, max_length=10)]
67 |     param: str = Query(..., description="Test", min_length=1, max_length=10),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
68 | ) -> str:
69 |     return param
   |
help: Replace with `typing.Annotated`
1  | """Test FAST002 ellipsis handling."""
2  | 
3  | from fastapi import Body, Cookie, Depends, FastAPI, Header, Query, Security
4  + from typing import Annotated
5  | 
6  | app = FastAPI()
7  | 
--------------------------------------------------------------------------------
65 | @app.get("/test6")
66 | async def test_multiple_kwargs_with_ellipsis(
67 |     # This should become: param: Annotated[str, Query(description="Test", min_length=1, max_length=10)]
   -     param: str = Query(..., description="Test", min_length=1, max_length=10),
68 +     param: Annotated[str, Query(description="Test", min_length=1, max_length=10)],
69 | ) -> str:
70 |     return param
71 | 
note: This is an unsafe fix and may change runtime behavior

FAST002 [*] FastAPI dependency without `Annotated`
  --> FAST002_2.py:78:5
   |
76 | async def test_with_default_value(
77 |     # This should become: param: Annotated[str, Query(description="Test")] = "default"
78 |     param: str = Query("default", description="Test"),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
79 | ) -> str:
80 |     return param
   |
help: Replace with `typing.Annotated`
1  | """Test FAST002 ellipsis handling."""
2  | 
3  | from fastapi import Body, Cookie, Depends, FastAPI, Header, Query, Security
4  + from typing import Annotated
5  | 
6  | app = FastAPI()
7  | 
--------------------------------------------------------------------------------
76 | @app.get("/test7")
77 | async def test_with_default_value(
78 |     # This should become: param: Annotated[str, Query(description="Test")] = "default"
   -     param: str = Query("default", description="Test"),
79 +     param: Annotated[str, Query(description="Test")] = "default",
80 | ) -> str:
81 |     return param
82 | 
note: This is an unsafe fix and may change runtime behavior

FAST002 [*] FastAPI dependency without `Annotated`
  --> FAST002_2.py:86:5
   |
84 | async def test_with_default_none(
85 |     # This should become: param: Annotated[str | None, Query(description="Test")] = None
86 |     param: str | None = Query(None, description="Test"),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
87 | ) -> str:
88 |     return param or "empty"
   |
help: Replace with `typing.Annotated`
1  | """Test FAST002 ellipsis handling."""
2  | 
3  | from fastapi import Body, Cookie, Depends, FastAPI, Header, Query, Security
4  + from typing import Annotated
5  | 
6  | app = FastAPI()
7  | 
--------------------------------------------------------------------------------
84 | @app.get("/test8")
85 | async def test_with_default_none(
86 |     # This should become: param: Annotated[str | None, Query(description="Test")] = None
   -     param: str | None = Query(None, description="Test"),
87 +     param: Annotated[str | None, Query(description="Test")] = None,
88 | ) -> str:
89 |     return param or "empty"
90 | 
note: This is an unsafe fix and may change runtime behavior

FAST002 [*] FastAPI dependency without `Annotated`
   --> FAST002_2.py:98:5
    |
 96 |     # This should become: user: Annotated[User, Depends(get_current_user)]
 97 |     # Note: Depends doesn't follow the same pattern as Query/Path/etc
 98 |     user: User = Depends(get_current_user),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 99 | ) -> str:
100 |     return "authenticated"
    |
help: Replace with `typing.Annotated`
1   | """Test FAST002 ellipsis handling."""
2   | 
3   | from fastapi import Body, Cookie, Depends, FastAPI, Header, Query, Security
4   + from typing import Annotated
5   | 
6   | app = FastAPI()
7   | 
--------------------------------------------------------------------------------
96  | async def test_depends_with_ellipsis(
97  |     # This should become: user: Annotated[User, Depends(get_current_user)]
98  |     # Note: Depends doesn't follow the same pattern as Query/Path/etc
    -     user: User = Depends(get_current_user),
99  +     user: Annotated[User, Depends(get_current_user)],
100 | ) -> str:
101 |     return "authenticated"
102 | 
note: This is an unsafe fix and may change runtime behavior

FAST002 [*] FastAPI dependency without `Annotated`
   --> FAST002_2.py:106:5
    |
104 | async def test_security_with_ellipsis(
105 |     # This should become: token: Annotated[str, Security(oauth2_scheme)]
106 |     token: str = Security(oauth2_scheme),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
107 | ) -> str:
108 |     return "secured"
    |
help: Replace with `typing.Annotated`
1   | """Test FAST002 ellipsis handling."""
2   | 
3   | from fastapi import Body, Cookie, Depends, FastAPI, Header, Query, Security
4   + from typing import Annotated
5   | 
6   | app = FastAPI()
7   | 
--------------------------------------------------------------------------------
104 | @app.get("/test10")
105 | async def test_security_with_ellipsis(
106 |     # This should become: token: Annotated[str, Security(oauth2_scheme)]
    -     token: str = Security(oauth2_scheme),
107 +     token: Annotated[str, Security(oauth2_scheme)],
108 | ) -> str:
109 |     return "secured"
110 | 
note: This is an unsafe fix and may change runtime behavior

FAST002 [*] FastAPI dependency without `Annotated`
   --> FAST002_2.py:114:5
    |
112 | async def test_mixed_parameters(
113 |     # First param should be fixed
114 |     required_param: str = Query(..., description="Required"),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
115 |     # Second param should be fixed with default preserved  
116 |     optional_param: str = Query("default", description="Optional"),
    |
help: Replace with `typing.Annotated`
1   | """Test FAST002 ellipsis handling."""
2   | 
3   | from fastapi import Body, Cookie, Depends, FastAPI, Header, Query, Security
4   + from typing import Annotated
5   | 
6   | app = FastAPI()
7   | 
--------------------------------------------------------------------------------
112 | @app.get("/test11")
113 | async def test_mixed_parameters(
114 |     # First param should be fixed
    -     required_param: str = Query(..., description="Required"),
115 +     required_param: Annotated[str, Query(description="Required")],
116 |     # Second param should be fixed with default preserved  
117 |     optional_param: str = Query("default", description="Optional"),
118 | ) -> str:
note: This is an unsafe fix and may change runtime behavior

FAST002 [*] FastAPI dependency without `Annotated`
   --> FAST002_2.py:116:5
    |
114 |     required_param: str = Query(..., description="Required"),
115 |     # Second param should be fixed with default preserved  
116 |     optional_param: str = Query("default", description="Optional"),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
117 | ) -> str:
118 |     return f"{required_param}-{optional_param}"
    |
help: Replace with `typing.Annotated`
1   | """Test FAST002 ellipsis handling."""
2   | 
3   | from fastapi import Body, Cookie, Depends, FastAPI, Header, Query, Security
4   + from typing import Annotated
5   | 
6   | app = FastAPI()
7   | 
--------------------------------------------------------------------------------
114 |     # First param should be fixed
115 |     required_param: str = Query(..., description="Required"),
116 |     # Second param should be fixed with default preserved  
    -     optional_param: str = Query("default", description="Optional"),
117 +     optional_param: Annotated[str, Query(description="Optional")] = "default",
118 | ) -> str:
119 |     return f"{required_param}-{optional_param}"
note: This is an unsafe fix and may change runtime behavior
