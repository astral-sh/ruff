---
source: crates/ruff_linter/src/rules/ruff/rules/unreachable.rs
description: "This is a Mermaid graph. You can use https://mermaid.live to visualize it as a diagram."
---
## Function 0
### Source
```python
def func():
    assert True
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0[["`*(empty)*`"]]
  block1[["Exception raised"]]
  block2["assert True\n"]

  start --> block2
  block2 -- "True" --> block0
  block2 -- "else" --> block1
  block1 --> return
  block0 --> return
```

## Function 1
### Source
```python
def func():
    assert False
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0[["`*(empty)*`"]]
  block1[["Exception raised"]]
  block2["assert False\n"]

  start --> block2
  block2 -- "False" --> block0
  block2 -- "else" --> block1
  block1 --> return
  block0 --> return
```

## Function 2
### Source
```python
def func():
    assert True, "oops"
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0[["`*(empty)*`"]]
  block1[["Exception raised"]]
  block2["assert True, #quot;oops#quot;\n"]

  start --> block2
  block2 -- "True" --> block0
  block2 -- "else" --> block1
  block1 --> return
  block0 --> return
```

## Function 3
### Source
```python
def func():
    assert False, "oops"
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0[["`*(empty)*`"]]
  block1[["Exception raised"]]
  block2["assert False, #quot;oops#quot;\n"]

  start --> block2
  block2 -- "False" --> block0
  block2 -- "else" --> block1
  block1 --> return
  block0 --> return
```


