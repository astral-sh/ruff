---
source: crates/ruff_linter/src/rules/ruff/rules/unreachable.rs
description: "This is a Mermaid graph. You can use https://mermaid.live to visualize it as a diagram."
---
## Function 0
### Source
```python
def func():
    while False:
        return "unreachable"
    return 1
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0["return 1\n"]
  block1["return #quot;unreachable#quot;\n"]
  block2["while False:
        return #quot;unreachable#quot;\n"]

  start --> block2
  block2 -- "False" --> block1
  block2 -- "else" --> block0
  block1 --> return
  block0 --> return
```

## Function 1
### Source
```python
def func():
    while False:
        return "unreachable"
    else:
        return 1
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0["return #quot;unreachable#quot;\n"]
  block1["return 1\n"]
  block2["while False:
        return #quot;unreachable#quot;
    else:
        return 1\n"]

  start --> block2
  block2 -- "False" --> block0
  block2 -- "else" --> block1
  block1 --> return
  block0 --> return
```

## Function 2
### Source
```python
def func():
    while False:
        return "unreachable"
    else:
        return 1
    return "also unreachable"
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0["return #quot;also unreachable#quot;\n"]
  block1["return #quot;unreachable#quot;\n"]
  block2["return 1\n"]
  block3["while False:
        return #quot;unreachable#quot;
    else:
        return 1\n"]

  start --> block3
  block3 -- "False" --> block1
  block3 -- "else" --> block2
  block2 --> return
  block1 --> return
  block0 --> return
```

## Function 3
### Source
```python
def func():
    while True:
        return 1
    return "unreachable"
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0["return #quot;unreachable#quot;\n"]
  block1["return 1\n"]
  block2["while True:
        return 1\n"]

  start --> block2
  block2 -- "True" --> block1
  block2 -- "else" --> block0
  block1 --> return
  block0 --> return
```

## Function 4
### Source
```python
def func():
    while True:
        return 1
    else:
        return "unreachable"
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0["return 1\n"]
  block1["return #quot;unreachable#quot;\n"]
  block2["while True:
        return 1
    else:
        return #quot;unreachable#quot;\n"]

  start --> block2
  block2 -- "True" --> block0
  block2 -- "else" --> block1
  block1 --> return
  block0 --> return
```

## Function 5
### Source
```python
def func():
    while True:
        return 1
    else:
        return "unreachable"
    return "also unreachable"
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0["return #quot;also unreachable#quot;\n"]
  block1["return 1\n"]
  block2["return #quot;unreachable#quot;\n"]
  block3["while True:
        return 1
    else:
        return #quot;unreachable#quot;\n"]

  start --> block3
  block3 -- "True" --> block1
  block3 -- "else" --> block2
  block2 --> return
  block1 --> return
  block0 --> return
```

## Function 6
### Source
```python
def func():
    i = 0
    while False:
        i += 1
    return i
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0["return i\n"]
  block1["i += 1\n"]
  block2["i = 0\nwhile False:
        i += 1\n"]

  start --> block2
  block2 -- "False" --> block1
  block2 -- "else" --> block0
  block1 --> block2
  block0 --> return
```

## Function 7
### Source
```python
def func():
    i = 0
    while True:
        i += 1
    return i
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0["return i\n"]
  block1["i += 1\n"]
  block2["i = 0\nwhile True:
        i += 1\n"]

  start --> block2
  block2 -- "True" --> block1
  block2 -- "else" --> block0
  block1 --> block2
  block0 --> return
```

## Function 8
### Source
```python
def func():
    while True:
        pass
    return 1
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0["return 1\n"]
  block1["pass\n"]
  block2["while True:
        pass\n"]

  start --> block2
  block2 -- "True" --> block1
  block2 -- "else" --> block0
  block1 --> block2
  block0 --> return
```

## Function 9
### Source
```python
def func():
    i = 0
    while True:
        if True:
            print("ok")
        i += 1
    return i
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0["return i\n"]
  block1["i += 1\n"]
  block2["print(#quot;ok#quot;)\n"]
  block3["if True:
            print(#quot;ok#quot;)\n"]
  block4["i = 0\nwhile True:
        if True:
            print(#quot;ok#quot;)
        i += 1\n"]

  start --> block4
  block4 -- "True" --> block3
  block4 -- "else" --> block0
  block3 -- "True" --> block2
  block3 -- "else" --> block1
  block2 --> block1
  block1 --> block4
  block0 --> return
```

## Function 10
### Source
```python
def func():
    i = 0
    while True:
        if False:
            print("ok")
        i += 1
    return i
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0["return i\n"]
  block1["i += 1\n"]
  block2["print(#quot;ok#quot;)\n"]
  block3["if False:
            print(#quot;ok#quot;)\n"]
  block4["i = 0\nwhile True:
        if False:
            print(#quot;ok#quot;)
        i += 1\n"]

  start --> block4
  block4 -- "True" --> block3
  block4 -- "else" --> block0
  block3 -- "False" --> block2
  block3 -- "else" --> block1
  block2 --> block1
  block1 --> block4
  block0 --> return
```

## Function 11
### Source
```python
def func():
    while True:
        if True:
            return 1
    return 0
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0["return 0\n"]
  block1["return 1\n"]
  block2["if True:
            return 1\n"]
  block3["while True:
        if True:
            return 1\n"]

  start --> block3
  block3 -- "True" --> block2
  block3 -- "else" --> block0
  block2 -- "True" --> block1
  block2 -- "else" --> block3
  block1 --> return
  block0 --> return
```

## Function 12
### Source
```python
def func():
    while True:
        continue
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0[["`*(empty)*`"]]
  block1["continue\n"]
  block2["while True:
        continue\n"]

  start --> block2
  block2 -- "True" --> block1
  block2 -- "else" --> block0
  block1 --> block2
  block0 --> return
```

## Function 13
### Source
```python
def func():
    while False:
        continue
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0[["`*(empty)*`"]]
  block1["continue\n"]
  block2["while False:
        continue\n"]

  start --> block2
  block2 -- "False" --> block1
  block2 -- "else" --> block0
  block1 --> block2
  block0 --> return
```

## Function 14
### Source
```python
def func():
    while True:
        break
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0[["`*(empty)*`"]]
  block1["break\n"]
  block2["while True:
        break\n"]

  start --> block2
  block2 -- "True" --> block1
  block2 -- "else" --> block0
  block1 --> block0
  block0 --> return
```

## Function 15
### Source
```python
def func():
    while False:
        break
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0[["`*(empty)*`"]]
  block1["break\n"]
  block2["while False:
        break\n"]

  start --> block2
  block2 -- "False" --> block1
  block2 -- "else" --> block0
  block1 --> block0
  block0 --> return
```

## Function 16
### Source
```python
def func():
    while True:
        if True:
            continue
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0[["`*(empty)*`"]]
  block1["continue\n"]
  block2["if True:
            continue\n"]
  block3["while True:
        if True:
            continue\n"]

  start --> block3
  block3 -- "True" --> block2
  block3 -- "else" --> block0
  block2 -- "True" --> block1
  block2 -- "else" --> block3
  block1 --> block3
  block0 --> return
```

## Function 17
### Source
```python
def func():
    while True:
        if True:
            break
```

### Control Flow Graph
```mermaid
flowchart TD
  start(("Start"))
  return(("End"))
  block0[["`*(empty)*`"]]
  block1["break\n"]
  block2["if True:
            break\n"]
  block3["while True:
        if True:
            break\n"]

  start --> block3
  block3 -- "True" --> block2
  block3 -- "else" --> block0
  block2 -- "True" --> block1
  block2 -- "else" --> block3
  block1 --> block0
  block0 --> return
```


