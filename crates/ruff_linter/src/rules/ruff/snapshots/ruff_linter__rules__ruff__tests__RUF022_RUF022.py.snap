---
source: crates/ruff_linter/src/rules/ruff/mod.rs
---
RUF022.py:5:11: RUF022 [*] `__all__` is not alphabetically sorted
  |
3 | ##################################################
4 | 
5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
  |           ^^^^^^^^^^^^^^^^^^^^ RUF022
6 | __all__ += ["foo", "bar", "antipasti"]
7 | __all__ = ("d", "c", "b", "a")
  |
  = help: Sort `__all__` alphabetically

ℹ Safe fix
2 2 | # Single-line __all__ definitions (nice 'n' easy!)
3 3 | ##################################################
4 4 | 
5   |-__all__ = ["d", "c", "b", "a"]  # a comment that is untouched
  5 |+__all__ = ["a", "b", "c", "d"]  # a comment that is untouched
6 6 | __all__ += ["foo", "bar", "antipasti"]
7 7 | __all__ = ("d", "c", "b", "a")
8 8 | 

RUF022.py:6:12: RUF022 [*] `__all__` is not alphabetically sorted
  |
5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
6 | __all__ += ["foo", "bar", "antipasti"]
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF022
7 | __all__ = ("d", "c", "b", "a")
  |
  = help: Sort `__all__` alphabetically

ℹ Safe fix
3 3 | ##################################################
4 4 | 
5 5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
6   |-__all__ += ["foo", "bar", "antipasti"]
  6 |+__all__ += ["antipasti", "bar", "foo"]
7 7 | __all__ = ("d", "c", "b", "a")
8 8 | 
9 9 | if bool():

RUF022.py:7:11: RUF022 [*] `__all__` is not alphabetically sorted
  |
5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
6 | __all__ += ["foo", "bar", "antipasti"]
7 | __all__ = ("d", "c", "b", "a")
  |           ^^^^^^^^^^^^^^^^^^^^ RUF022
8 | 
9 | if bool():
  |
  = help: Sort `__all__` alphabetically

ℹ Safe fix
4 4 | 
5 5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
6 6 | __all__ += ["foo", "bar", "antipasti"]
7   |-__all__ = ("d", "c", "b", "a")
  7 |+__all__ = ("a", "b", "c", "d")
8 8 | 
9 9 | if bool():
10 10 |     __all__ += ("x", "m", "a", "s")

RUF022.py:10:16: RUF022 [*] `__all__` is not alphabetically sorted
   |
 9 | if bool():
10 |     __all__ += ("x", "m", "a", "s")
   |                ^^^^^^^^^^^^^^^^^^^^ RUF022
11 | else:
12 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
   |
   = help: Sort `__all__` alphabetically

ℹ Safe fix
7  7  | __all__ = ("d", "c", "b", "a")
8  8  | 
9  9  | if bool():
10    |-    __all__ += ("x", "m", "a", "s")
   10 |+    __all__ += ("a", "m", "s", "x")
11 11 | else:
12 12 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
13 13 | 

RUF022.py:12:16: RUF022 [*] `__all__` is not alphabetically sorted
   |
10 |     __all__ += ("x", "m", "a", "s")
11 | else:
12 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
   |                ^^^^^^^^^^^^^^^^^^^^^^ RUF022
13 | 
14 | ####################################
   |
   = help: Sort `__all__` alphabetically

ℹ Safe fix
9  9  | if bool():
10 10 |     __all__ += ("x", "m", "a", "s")
11 11 | else:
12    |-    __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
   12 |+    __all__ += "foo1", "foo2", "foo3"  # NB: an implicit tuple (without parens)
13 13 | 
14 14 | ####################################
15 15 | # Neat multiline __all__ definitions

RUF022.py:18:11: RUF022 [*] `__all__` is not alphabetically sorted
   |
16 |   ####################################
17 |   
18 |   __all__ = (
   |  ___________^
19 | |     "d0",
20 | |     "c0",  # a comment regarding 'c0'
21 | |     "b0",
22 | |     # a comment regarding 'a0':
23 | |     "a0"
24 | | )
   | |_^ RUF022
25 |   
26 |   __all__ = [
   |
   = help: Sort `__all__` alphabetically

ℹ Unsafe fix
16 16 | ####################################
17 17 | 
18 18 | __all__ = (
   19 |+    # a comment regarding 'a0':
   20 |+    "a0",
   21 |+    "b0",
   22 |+    "c0",  # a comment regarding 'c0'
19 23 |     "d0",
20    |-    "c0",  # a comment regarding 'c0'
21    |-    "b0",
22    |-    # a comment regarding 'a0':
23    |-    "a0"
24 24 | )
25 25 | 
26 26 | __all__ = [

RUF022.py:26:11: RUF022 [*] `__all__` is not alphabetically sorted
   |
24 |   )
25 |   
26 |   __all__ = [
   |  ___________^
27 | |     "d",
28 | |     "c",  # a comment regarding 'c'
29 | |     "b",
30 | |     # a comment regarding 'a':
31 | |     "a"
32 | | ]
   | |_^ RUF022
33 |   
34 |   ##########################################
   |
   = help: Sort `__all__` alphabetically

ℹ Unsafe fix
24 24 | )
25 25 | 
26 26 | __all__ = [
   27 |+    # a comment regarding 'a':
   28 |+    "a",
   29 |+    "b",
   30 |+    "c",  # a comment regarding 'c'
27 31 |     "d",
28    |-    "c",  # a comment regarding 'c'
29    |-    "b",
30    |-    # a comment regarding 'a':
31    |-    "a"
32 32 | ]
33 33 | 
34 34 | ##########################################

RUF022.py:39:11: RUF022 [*] `__all__` is not alphabetically sorted
   |
38 |   # comment0
39 |   __all__ = ("d", "a",  # comment1
   |  ___________^
40 | |            # comment2
41 | |            "f", "b",
42 | |                                         "strangely",  # comment3
43 | |             # comment4
44 | |     "formatted",
45 | |     # comment5
46 | | )  # comment6
   | |_^ RUF022
47 |   # comment7
   |
   = help: Sort `__all__` alphabetically

ℹ Unsafe fix
36 36 | ##########################################
37 37 | 
38 38 | # comment0
39    |-__all__ = ("d", "a",  # comment1
40    |-           # comment2
41    |-           "f", "b",
42    |-                                        "strangely",  # comment3
43    |-            # comment4
   39 |+__all__ = (
   40 |+    "a",
   41 |+    "b",
   42 |+    "d",  # comment1
   43 |+    # comment2
   44 |+           "f",
   45 |+    # comment4
44 46 |     "formatted",
   47 |+    "strangely",  # comment3
45 48 |     # comment5
46 49 | )  # comment6
47 50 | # comment7

RUF022.py:49:11: RUF022 [*] `__all__` is not alphabetically sorted
   |
47 |   # comment7
48 |   
49 |   __all__ = [  # comment0
   |  ___________^
50 | |     # comment1
51 | |     # comment2
52 | |     "dx", "cx", "bx", "ax"  # comment3
53 | |     # comment4
54 | |     # comment5
55 | |     # comment6
56 | | ]  # comment7
   | |_^ RUF022
57 |   
58 |   __all__ = ["register", "lookup", "open", "EncodedFile", "BOM", "BOM_BE",
   |
   = help: Sort `__all__` alphabetically

ℹ Unsafe fix
48 48 | 
49 49 | __all__ = [  # comment0
50 50 |     # comment1
   51 |+    "ax",
   52 |+    "bx",
   53 |+    "cx",
51 54 |     # comment2
52    |-    "dx", "cx", "bx", "ax"  # comment3
   55 |+    "dx",  # comment3
53 56 |     # comment4
54 57 |     # comment5
55 58 |     # comment6

RUF022.py:58:11: RUF022 [*] `__all__` is not alphabetically sorted
   |
56 |   ]  # comment7
57 |   
58 |   __all__ = ["register", "lookup", "open", "EncodedFile", "BOM", "BOM_BE",
   |  ___________^
59 | |            "BOM_LE", "BOM32_BE", "BOM32_LE", "BOM64_BE", "BOM64_LE",
60 | |            "BOM_UTF8", "BOM_UTF16", "BOM_UTF16_LE", "BOM_UTF16_BE",
61 | |            "BOM_UTF32", "BOM_UTF32_LE", "BOM_UTF32_BE",
62 | |            "CodecInfo", "Codec", "IncrementalEncoder", "IncrementalDecoder",
63 | |            "StreamReader", "StreamWriter",
64 | |            "StreamReaderWriter", "StreamRecoder",
65 | |            "getencoder", "getdecoder", "getincrementalencoder",
66 | |            "getincrementaldecoder", "getreader", "getwriter",
67 | |            "encode", "decode", "iterencode", "iterdecode",
68 | |            "strict_errors", "ignore_errors", "replace_errors",
69 | |            "xmlcharrefreplace_errors",
70 | |            "backslashreplace_errors", "namereplace_errors",
71 | |            "register_error", "lookup_error"]
   | |____________________________________________^ RUF022
72 |   
73 |   ###################################
   |
   = help: Sort `__all__` alphabetically

ℹ Safe fix
55  55  |     # comment6
56  56  | ]  # comment7
57  57  | 
58      |-__all__ = ["register", "lookup", "open", "EncodedFile", "BOM", "BOM_BE",
59      |-           "BOM_LE", "BOM32_BE", "BOM32_LE", "BOM64_BE", "BOM64_LE",
60      |-           "BOM_UTF8", "BOM_UTF16", "BOM_UTF16_LE", "BOM_UTF16_BE",
61      |-           "BOM_UTF32", "BOM_UTF32_LE", "BOM_UTF32_BE",
62      |-           "CodecInfo", "Codec", "IncrementalEncoder", "IncrementalDecoder",
63      |-           "StreamReader", "StreamWriter",
64      |-           "StreamReaderWriter", "StreamRecoder",
65      |-           "getencoder", "getdecoder", "getincrementalencoder",
66      |-           "getincrementaldecoder", "getreader", "getwriter",
67      |-           "encode", "decode", "iterencode", "iterdecode",
68      |-           "strict_errors", "ignore_errors", "replace_errors",
69      |-           "xmlcharrefreplace_errors",
70      |-           "backslashreplace_errors", "namereplace_errors",
71      |-           "register_error", "lookup_error"]
    58  |+__all__ = [
    59  |+    "BOM",
    60  |+    "BOM32_BE",
    61  |+    "BOM32_LE",
    62  |+    "BOM64_BE",
    63  |+    "BOM64_LE",
    64  |+    "BOM_BE",
    65  |+    "BOM_LE",
    66  |+    "BOM_UTF16",
    67  |+    "BOM_UTF16_BE",
    68  |+    "BOM_UTF16_LE",
    69  |+    "BOM_UTF32",
    70  |+    "BOM_UTF32_BE",
    71  |+    "BOM_UTF32_LE",
    72  |+    "BOM_UTF8",
    73  |+    "Codec",
    74  |+    "CodecInfo",
    75  |+    "EncodedFile",
    76  |+    "IncrementalDecoder",
    77  |+    "IncrementalEncoder",
    78  |+    "StreamReader",
    79  |+    "StreamReaderWriter",
    80  |+    "StreamRecoder",
    81  |+    "StreamWriter",
    82  |+    "backslashreplace_errors",
    83  |+    "decode",
    84  |+    "encode",
    85  |+    "getdecoder",
    86  |+    "getencoder",
    87  |+    "getincrementaldecoder",
    88  |+    "getincrementalencoder",
    89  |+    "getreader",
    90  |+    "getwriter",
    91  |+    "ignore_errors",
    92  |+    "iterdecode",
    93  |+    "iterencode",
    94  |+    "lookup",
    95  |+    "lookup_error",
    96  |+    "namereplace_errors",
    97  |+    "open",
    98  |+    "register",
    99  |+    "register_error",
    100 |+    "replace_errors",
    101 |+    "strict_errors",
    102 |+    "xmlcharrefreplace_errors"]
72  103 | 
73  104 | ###################################
74  105 | # These should all not get flagged:


