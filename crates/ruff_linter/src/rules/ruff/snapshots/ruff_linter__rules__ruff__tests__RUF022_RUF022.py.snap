---
source: crates/ruff_linter/src/rules/ruff/mod.rs
---
RUF022.py:5:11: RUF022 [*] `__all__` is not sorted
  |
3 | ##################################################
4 | 
5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
  |           ^^^^^^^^^^^^^^^^^^^^ RUF022
6 | __all__ += ["foo", "bar", "antipasti"]
7 | __all__ = ("d", "c", "b", "a")
  |
  = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
2 2 | # Single-line __all__ definitions (nice 'n' easy!)
3 3 | ##################################################
4 4 | 
5   |-__all__ = ["d", "c", "b", "a"]  # a comment that is untouched
  5 |+__all__ = ["a", "b", "c", "d"]  # a comment that is untouched
6 6 | __all__ += ["foo", "bar", "antipasti"]
7 7 | __all__ = ("d", "c", "b", "a")
8 8 | 

RUF022.py:6:12: RUF022 [*] `__all__` is not sorted
  |
5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
6 | __all__ += ["foo", "bar", "antipasti"]
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF022
7 | __all__ = ("d", "c", "b", "a")
  |
  = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
3 3 | ##################################################
4 4 | 
5 5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
6   |-__all__ += ["foo", "bar", "antipasti"]
  6 |+__all__ += ["antipasti", "bar", "foo"]
7 7 | __all__ = ("d", "c", "b", "a")
8 8 | 
9 9 | __all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained

RUF022.py:7:11: RUF022 [*] `__all__` is not sorted
  |
5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
6 | __all__ += ["foo", "bar", "antipasti"]
7 | __all__ = ("d", "c", "b", "a")
  |           ^^^^^^^^^^^^^^^^^^^^ RUF022
8 | 
9 | __all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained
  |
  = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
4 4 | 
5 5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
6 6 | __all__ += ["foo", "bar", "antipasti"]
7   |-__all__ = ("d", "c", "b", "a")
  7 |+__all__ = ("a", "b", "c", "d")
8 8 | 
9 9 | __all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained
10 10 | __all__: tuple = ("b", "c", "a",)  # note the trailing comma, which is retained

RUF022.py:9:17: RUF022 [*] `__all__` is not sorted
   |
 7 | __all__ = ("d", "c", "b", "a")
 8 | 
 9 | __all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained
   |                 ^^^^^^^^^^^^^^^^ RUF022
10 | __all__: tuple = ("b", "c", "a",)  # note the trailing comma, which is retained
   |
   = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
6  6  | __all__ += ["foo", "bar", "antipasti"]
7  7  | __all__ = ("d", "c", "b", "a")
8  8  | 
9     |-__all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained
   9  |+__all__: list = ["a", "b", "c",]  # note the trailing comma, which is retained
10 10 | __all__: tuple = ("b", "c", "a",)  # note the trailing comma, which is retained
11 11 | 
12 12 | if bool():

RUF022.py:10:18: RUF022 [*] `__all__` is not sorted
   |
 9 | __all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained
10 | __all__: tuple = ("b", "c", "a",)  # note the trailing comma, which is retained
   |                  ^^^^^^^^^^^^^^^^ RUF022
11 | 
12 | if bool():
   |
   = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
7  7  | __all__ = ("d", "c", "b", "a")
8  8  | 
9  9  | __all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained
10    |-__all__: tuple = ("b", "c", "a",)  # note the trailing comma, which is retained
   10 |+__all__: tuple = ("a", "b", "c",)  # note the trailing comma, which is retained
11 11 | 
12 12 | if bool():
13 13 |     __all__ += ("x", "m", "a", "s")

RUF022.py:13:16: RUF022 [*] `__all__` is not sorted
   |
12 | if bool():
13 |     __all__ += ("x", "m", "a", "s")
   |                ^^^^^^^^^^^^^^^^^^^^ RUF022
14 | else:
15 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
   |
   = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
10 10 | __all__: tuple = ("b", "c", "a",)  # note the trailing comma, which is retained
11 11 | 
12 12 | if bool():
13    |-    __all__ += ("x", "m", "a", "s")
   13 |+    __all__ += ("a", "m", "s", "x")
14 14 | else:
15 15 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
16 16 | 

RUF022.py:15:16: RUF022 [*] `__all__` is not sorted
   |
13 |     __all__ += ("x", "m", "a", "s")
14 | else:
15 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
   |                ^^^^^^^^^^^^^^^^^^^^^^ RUF022
16 | 
17 | __all__: list[str] = ["the", "three", "little", "pigs"]
   |
   = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
12 12 | if bool():
13 13 |     __all__ += ("x", "m", "a", "s")
14 14 | else:
15    |-    __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
   15 |+    __all__ += "foo1", "foo2", "foo3"  # NB: an implicit tuple (without parens)
16 16 | 
17 17 | __all__: list[str] = ["the", "three", "little", "pigs"]
18 18 | 

RUF022.py:17:22: RUF022 [*] `__all__` is not sorted
   |
15 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
16 | 
17 | __all__: list[str] = ["the", "three", "little", "pigs"]
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF022
18 | 
19 | ####################################
   |
   = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
14 14 | else:
15 15 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
16 16 | 
17    |-__all__: list[str] = ["the", "three", "little", "pigs"]
   17 |+__all__: list[str] = ["little", "pigs", "the", "three"]
18 18 | 
19 19 | ####################################
20 20 | # Neat multiline __all__ definitions

RUF022.py:23:11: RUF022 [*] `__all__` is not sorted
   |
21 |   ####################################
22 |   
23 |   __all__ = (
   |  ___________^
24 | |     "d0",
25 | |     "c0",  # a comment regarding 'c0'
26 | |     "b0",
27 | |     # a comment regarding 'a0':
28 | |     "a0"
29 | | )
   | |_^ RUF022
30 |   
31 |   __all__ = [
   |
   = help: Apply an isort-style sorting to `__all__`

ℹ Unsafe fix
21 21 | ####################################
22 22 | 
23 23 | __all__ = (
24    |-    "d0",
   24 |+    # a comment regarding 'a0':
   25 |+    "a0",
   26 |+    "b0",
25 27 |     "c0",  # a comment regarding 'c0'
26    |-    "b0",
27    |-    # a comment regarding 'a0':
28    |-    "a0"
   28 |+    "d0"
29 29 | )
30 30 | 
31 31 | __all__ = [

RUF022.py:31:11: RUF022 [*] `__all__` is not sorted
   |
29 |   )
30 |   
31 |   __all__ = [
   |  ___________^
32 | |     "d",
33 | |     "c",  # a comment regarding 'c'
34 | |     "b",
35 | |     # a comment regarding 'a':
36 | |     "a"
37 | | ]
   | |_^ RUF022
38 |   
39 |   # we implement an "isort-style sort":
   |
   = help: Apply an isort-style sorting to `__all__`

ℹ Unsafe fix
29 29 | )
30 30 | 
31 31 | __all__ = [
32    |-    "d",
   32 |+    # a comment regarding 'a':
   33 |+    "a",
   34 |+    "b",
33 35 |     "c",  # a comment regarding 'c'
34    |-    "b",
35    |-    # a comment regarding 'a':
36    |-    "a"
   36 |+    "d"
37 37 | ]
38 38 | 
39 39 | # we implement an "isort-style sort":

RUF022.py:45:11: RUF022 [*] `__all__` is not sorted
   |
43 |   # This (which is currently alphabetically sorted)
44 |   # should get reordered accordingly:
45 |   __all__ = [
   |  ___________^
46 | |     "APRIL",
47 | |     "AUGUST",
48 | |     "Calendar",
49 | |     "DECEMBER",
50 | |     "Day",
51 | |     "FEBRUARY",
52 | |     "FRIDAY",
53 | |     "HTMLCalendar",
54 | |     "IllegalMonthError",
55 | |     "JANUARY",
56 | |     "JULY",
57 | |     "JUNE",
58 | |     "LocaleHTMLCalendar",
59 | |     "MARCH",
60 | |     "MAY",
61 | |     "MONDAY",
62 | |     "Month",
63 | |     "NOVEMBER",
64 | |     "OCTOBER",
65 | |     "SATURDAY",
66 | |     "SEPTEMBER",
67 | |     "SUNDAY",
68 | |     "THURSDAY",
69 | |     "TUESDAY",
70 | |     "TextCalendar",
71 | |     "WEDNESDAY",
72 | |     "calendar",
73 | |     "timegm",
74 | |     "weekday",
75 | |     "weekheader"]
   | |_________________^ RUF022
76 |   
77 |   ##########################################
   |
   = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
45 45 | __all__ = [
46 46 |     "APRIL",
47 47 |     "AUGUST",
48    |-    "Calendar",
49 48 |     "DECEMBER",
50    |-    "Day",
51 49 |     "FEBRUARY",
52 50 |     "FRIDAY",
53    |-    "HTMLCalendar",
54    |-    "IllegalMonthError",
55 51 |     "JANUARY",
56 52 |     "JULY",
57 53 |     "JUNE",
58    |-    "LocaleHTMLCalendar",
59 54 |     "MARCH",
60 55 |     "MAY",
61 56 |     "MONDAY",
62    |-    "Month",
63 57 |     "NOVEMBER",
64 58 |     "OCTOBER",
65 59 |     "SATURDAY",
--------------------------------------------------------------------------------
67 61 |     "SUNDAY",
68 62 |     "THURSDAY",
69 63 |     "TUESDAY",
   64 |+    "WEDNESDAY",
   65 |+    "Calendar",
   66 |+    "Day",
   67 |+    "HTMLCalendar",
   68 |+    "IllegalMonthError",
   69 |+    "LocaleHTMLCalendar",
   70 |+    "Month",
70 71 |     "TextCalendar",
71    |-    "WEDNESDAY",
72 72 |     "calendar",
73 73 |     "timegm",
74 74 |     "weekday",

RUF022.py:82:11: RUF022 [*] `__all__` is not sorted
   |
81 |   # comment0
82 |   __all__ = ("d", "a",  # comment1
   |  ___________^
83 | |            # comment2
84 | |            "f", "b",
85 | |                                         "strangely",  # comment3
86 | |             # comment4
87 | |     "formatted",
88 | |     # comment5
89 | | )  # comment6
   | |_^ RUF022
90 |   # comment7
   |
   = help: Apply an isort-style sorting to `__all__`

ℹ Unsafe fix
79 79 | ##########################################
80 80 | 
81 81 | # comment0
82    |-__all__ = ("d", "a",  # comment1
83    |-           # comment2
84    |-           "f", "b",
85    |-                                        "strangely",  # comment3
86    |-            # comment4
   82 |+__all__ = (
   83 |+    "a",
   84 |+    "b",
   85 |+    "d",  # comment1
   86 |+    # comment2
   87 |+    "f",
   88 |+    # comment4
87 89 |     "formatted",
   90 |+    "strangely",  # comment3
88 91 |     # comment5
89 92 | )  # comment6
90 93 | # comment7

RUF022.py:92:11: RUF022 [*] `__all__` is not sorted
    |
 90 |   # comment7
 91 |   
 92 |   __all__ = [  # comment0
    |  ___________^
 93 | |     # comment1
 94 | |     # comment2
 95 | |     "dx", "cx", "bx", "ax"  # comment3
 96 | |     # comment4
 97 | |     # comment5
 98 | |     # comment6
 99 | | ]  # comment7
    | |_^ RUF022
100 |   
101 |   __all__ = ["register", "lookup", "open", "EncodedFile", "BOM", "BOM_BE",
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Unsafe fix
90 90 | # comment7
91 91 | 
92 92 | __all__ = [  # comment0
   93 |+    "ax",
   94 |+    "bx",
   95 |+    "cx",
93 96 |     # comment1
94 97 |     # comment2
95    |-    "dx", "cx", "bx", "ax"  # comment3
   98 |+    "dx"  # comment3
96 99 |     # comment4
97 100 |     # comment5
98 101 |     # comment6

RUF022.py:101:11: RUF022 [*] `__all__` is not sorted
    |
 99 |   ]  # comment7
100 |   
101 |   __all__ = ["register", "lookup", "open", "EncodedFile", "BOM", "BOM_BE",
    |  ___________^
102 | |            "BOM_LE", "BOM32_BE", "BOM32_LE", "BOM64_BE", "BOM64_LE",
103 | |            "BOM_UTF8", "BOM_UTF16", "BOM_UTF16_LE", "BOM_UTF16_BE",
104 | |            "BOM_UTF32", "BOM_UTF32_LE", "BOM_UTF32_BE",
105 | |            "CodecInfo", "Codec", "IncrementalEncoder", "IncrementalDecoder",
106 | |            "StreamReader", "StreamWriter",
107 | |            "StreamReaderWriter", "StreamRecoder",
108 | |            "getencoder", "getdecoder", "getincrementalencoder",
109 | |            "getincrementaldecoder", "getreader", "getwriter",
110 | |            "encode", "decode", "iterencode", "iterdecode",
111 | |            "strict_errors", "ignore_errors", "replace_errors",
112 | |            "xmlcharrefreplace_errors",
113 | |            "backslashreplace_errors", "namereplace_errors",
114 | |            "register_error", "lookup_error"]
    | |____________________________________________^ RUF022
115 |   
116 |   __all__: tuple[str, ...] = (  # a comment about the opening paren
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
98  98  |     # comment6
99  99  | ]  # comment7
100 100 | 
101     |-__all__ = ["register", "lookup", "open", "EncodedFile", "BOM", "BOM_BE",
102     |-           "BOM_LE", "BOM32_BE", "BOM32_LE", "BOM64_BE", "BOM64_LE",
103     |-           "BOM_UTF8", "BOM_UTF16", "BOM_UTF16_LE", "BOM_UTF16_BE",
104     |-           "BOM_UTF32", "BOM_UTF32_LE", "BOM_UTF32_BE",
105     |-           "CodecInfo", "Codec", "IncrementalEncoder", "IncrementalDecoder",
106     |-           "StreamReader", "StreamWriter",
107     |-           "StreamReaderWriter", "StreamRecoder",
108     |-           "getencoder", "getdecoder", "getincrementalencoder",
109     |-           "getincrementaldecoder", "getreader", "getwriter",
110     |-           "encode", "decode", "iterencode", "iterdecode",
111     |-           "strict_errors", "ignore_errors", "replace_errors",
112     |-           "xmlcharrefreplace_errors",
113     |-           "backslashreplace_errors", "namereplace_errors",
114     |-           "register_error", "lookup_error"]
    101 |+__all__ = [
    102 |+    "BOM",
    103 |+    "BOM32_BE",
    104 |+    "BOM32_LE",
    105 |+    "BOM64_BE",
    106 |+    "BOM64_LE",
    107 |+    "BOM_BE",
    108 |+    "BOM_LE",
    109 |+    "BOM_UTF8",
    110 |+    "BOM_UTF16",
    111 |+    "BOM_UTF16_BE",
    112 |+    "BOM_UTF16_LE",
    113 |+    "BOM_UTF32",
    114 |+    "BOM_UTF32_BE",
    115 |+    "BOM_UTF32_LE",
    116 |+    "Codec",
    117 |+    "CodecInfo",
    118 |+    "EncodedFile",
    119 |+    "IncrementalDecoder",
    120 |+    "IncrementalEncoder",
    121 |+    "StreamReader",
    122 |+    "StreamReaderWriter",
    123 |+    "StreamRecoder",
    124 |+    "StreamWriter",
    125 |+    "backslashreplace_errors",
    126 |+    "decode",
    127 |+    "encode",
    128 |+    "getdecoder",
    129 |+    "getencoder",
    130 |+    "getincrementaldecoder",
    131 |+    "getincrementalencoder",
    132 |+    "getreader",
    133 |+    "getwriter",
    134 |+    "ignore_errors",
    135 |+    "iterdecode",
    136 |+    "iterencode",
    137 |+    "lookup",
    138 |+    "lookup_error",
    139 |+    "namereplace_errors",
    140 |+    "open",
    141 |+    "register",
    142 |+    "register_error",
    143 |+    "replace_errors",
    144 |+    "strict_errors",
    145 |+    "xmlcharrefreplace_errors"]
115 146 | 
116 147 | __all__: tuple[str, ...] = (  # a comment about the opening paren
117 148 |     # multiline comment about "bbb" part 1

RUF022.py:116:28: RUF022 [*] `__all__` is not sorted
    |
114 |              "register_error", "lookup_error"]
115 |   
116 |   __all__: tuple[str, ...] = (  # a comment about the opening paren
    |  ____________________________^
117 | |     # multiline comment about "bbb" part 1
118 | |     # multiline comment about "bbb" part 2
119 | |     "bbb",
120 | |     # multiline comment about "aaa" part 1
121 | |     # multiline comment about "aaa" part 2
122 | |     "aaa",
123 | | )
    | |_^ RUF022
124 |   
125 |   # we use natural sort for `__all__`,
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Unsafe fix
114 114 |            "register_error", "lookup_error"]
115 115 | 
116 116 | __all__: tuple[str, ...] = (  # a comment about the opening paren
    117 |+    # multiline comment about "aaa" part 1
    118 |+    # multiline comment about "aaa" part 2
    119 |+    "aaa",
117 120 |     # multiline comment about "bbb" part 1
118 121 |     # multiline comment about "bbb" part 2
119 122 |     "bbb",
120     |-    # multiline comment about "aaa" part 1
121     |-    # multiline comment about "aaa" part 2
122     |-    "aaa",
123 123 | )
124 124 | 
125 125 | # we use natural sort for `__all__`,

RUF022.py:129:11: RUF022 [*] `__all__` is not sorted
    |
127 |   # Also, this doesn't end with a trailing comma,
128 |   # so the autofix shouldn't introduce one:
129 |   __all__ = (
    |  ___________^
130 | |     "aadvark237",
131 | |     "aadvark10092",
132 | |     "aadvark174",         # the very long whitespace span before this comment is retained
133 | |     "aadvark532"                       # the even longer whitespace span before this comment is retained
134 | | )
    | |_^ RUF022
135 |   
136 |   __all__.extend(["foo", "bar"])
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Unsafe fix
127 127 | # Also, this doesn't end with a trailing comma,
128 128 | # so the autofix shouldn't introduce one:
129 129 | __all__ = (
    130 |+    "aadvark174",         # the very long whitespace span before this comment is retained
130 131 |     "aadvark237",
131     |-    "aadvark10092",
132     |-    "aadvark174",         # the very long whitespace span before this comment is retained
133     |-    "aadvark532"                       # the even longer whitespace span before this comment is retained
    132 |+    "aadvark532",                       # the even longer whitespace span before this comment is retained
    133 |+    "aadvark10092"
134 134 | )
135 135 | 
136 136 | __all__.extend(["foo", "bar"])

RUF022.py:136:16: RUF022 [*] `__all__` is not sorted
    |
134 | )
135 | 
136 | __all__.extend(["foo", "bar"])
    |                ^^^^^^^^^^^^^^ RUF022
137 | __all__.extend(("foo", "bar"))
138 | __all__.extend((  # comment0
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
133 133 |     "aadvark532"                       # the even longer whitespace span before this comment is retained
134 134 | )
135 135 | 
136     |-__all__.extend(["foo", "bar"])
    136 |+__all__.extend(["bar", "foo"])
137 137 | __all__.extend(("foo", "bar"))
138 138 | __all__.extend((  # comment0
139 139 |     # comment about foo

RUF022.py:137:16: RUF022 [*] `__all__` is not sorted
    |
136 | __all__.extend(["foo", "bar"])
137 | __all__.extend(("foo", "bar"))
    |                ^^^^^^^^^^^^^^ RUF022
138 | __all__.extend((  # comment0
139 |     # comment about foo
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
134 134 | )
135 135 | 
136 136 | __all__.extend(["foo", "bar"])
137     |-__all__.extend(("foo", "bar"))
    137 |+__all__.extend(("bar", "foo"))
138 138 | __all__.extend((  # comment0
139 139 |     # comment about foo
140 140 |     "foo",  # comment about foo

RUF022.py:138:16: RUF022 [*] `__all__` is not sorted
    |
136 |   __all__.extend(["foo", "bar"])
137 |   __all__.extend(("foo", "bar"))
138 |   __all__.extend((  # comment0
    |  ________________^
139 | |     # comment about foo
140 | |     "foo",  # comment about foo
141 | |     # comment about bar
142 | |     "bar"  # comment about bar
143 | |     # comment1
144 | | ))  # comment2
    | |_^ RUF022
145 |   
146 |   __all__.extend(  # comment0
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Unsafe fix
136 136 | __all__.extend(["foo", "bar"])
137 137 | __all__.extend(("foo", "bar"))
138 138 | __all__.extend((  # comment0
    139 |+    # comment about bar
    140 |+    "bar",  # comment about bar
139 141 |     # comment about foo
140     |-    "foo",  # comment about foo
141     |-    # comment about bar
142     |-    "bar"  # comment about bar
    142 |+    "foo"  # comment about foo
143 143 |     # comment1
144 144 | ))  # comment2
145 145 | 

RUF022.py:148:5: RUF022 [*] `__all__` is not sorted
    |
146 |   __all__.extend(  # comment0
147 |       # comment1
148 |       (  # comment2
    |  _____^
149 | |         # comment about foo
150 | |         "foo",  # comment about foo
151 | |         # comment about bar
152 | |         "bar"  # comment about bar
153 | |         # comment3
154 | |     )  # comment4
    | |_____^ RUF022
155 |   )  # comment2
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Unsafe fix
146 146 | __all__.extend(  # comment0
147 147 |     # comment1
148 148 |     (  # comment2
    149 |+        # comment about bar
    150 |+        "bar",  # comment about bar
149 151 |         # comment about foo
150     |-        "foo",  # comment about foo
151     |-        # comment about bar
152     |-        "bar"  # comment about bar
    152 |+        "foo"  # comment about foo
153 153 |         # comment3
154 154 |     )  # comment4
155 155 | )  # comment2

RUF022.py:157:16: RUF022 [*] `__all__` is not sorted
    |
155 |   )  # comment2
156 |   
157 |   __all__.extend([  # comment0
    |  ________________^
158 | |     # comment about foo
159 | |     "foo",  # comment about foo
160 | |     # comment about bar
161 | |     "bar"  # comment about bar
162 | |     # comment1
163 | | ])  # comment2
    | |_^ RUF022
164 |   
165 |   __all__.extend(  # comment0
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Unsafe fix
155 155 | )  # comment2
156 156 | 
157 157 | __all__.extend([  # comment0
    158 |+    # comment about bar
    159 |+    "bar",  # comment about bar
158 160 |     # comment about foo
159     |-    "foo",  # comment about foo
160     |-    # comment about bar
161     |-    "bar"  # comment about bar
    161 |+    "foo"  # comment about foo
162 162 |     # comment1
163 163 | ])  # comment2
164 164 | 

RUF022.py:167:5: RUF022 [*] `__all__` is not sorted
    |
165 |   __all__.extend(  # comment0
166 |       # comment1
167 |       [  # comment2
    |  _____^
168 | |         # comment about foo
169 | |         "foo",  # comment about foo
170 | |         # comment about bar
171 | |         "bar"  # comment about bar
172 | |         # comment3
173 | |     ]  # comment4
    | |_____^ RUF022
174 |   )  # comment2
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Unsafe fix
165 165 | __all__.extend(  # comment0
166 166 |     # comment1
167 167 |     [  # comment2
    168 |+        # comment about bar
    169 |+        "bar",  # comment about bar
168 170 |         # comment about foo
169     |-        "foo",  # comment about foo
170     |-        # comment about bar
171     |-        "bar"  # comment about bar
    171 |+        "foo"  # comment about foo
172 172 |         # comment3
173 173 |     ]  # comment4
174 174 | )  # comment2

RUF022.py:176:11: RUF022 [*] `__all__` is not sorted
    |
174 |   )  # comment2
175 |   
176 |   __all__ = ["Style", "Treeview",
    |  ___________^
177 | |            # Extensions
178 | |            "LabeledScale", "OptionMenu",
179 | | ]
    | |_^ RUF022
180 |   
181 |   __all__ = ["Awaitable", "Coroutine",
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Unsafe fix
173 173 |     ]  # comment4
174 174 | )  # comment2
175 175 | 
176     |-__all__ = ["Style", "Treeview",
177     |-           # Extensions
178     |-           "LabeledScale", "OptionMenu",
    176 |+__all__ = [
    177 |+    # Extensions
    178 |+    "LabeledScale",
    179 |+    "OptionMenu",
    180 |+    "Style",
    181 |+    "Treeview",
179 182 | ]
180 183 | 
181 184 | __all__ = ["Awaitable", "Coroutine",

RUF022.py:181:11: RUF022 [*] `__all__` is not sorted
    |
179 |   ]
180 |   
181 |   __all__ = ["Awaitable", "Coroutine",
    |  ___________^
182 | |            "AsyncIterable", "AsyncIterator", "AsyncGenerator",
183 | |            ]
    | |____________^ RUF022
184 |   
185 |   __all__ = [
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
178 178 |            "LabeledScale", "OptionMenu",
179 179 | ]
180 180 | 
181     |-__all__ = ["Awaitable", "Coroutine",
182     |-           "AsyncIterable", "AsyncIterator", "AsyncGenerator",
183     |-           ]
    181 |+__all__ = [
    182 |+    "AsyncGenerator",
    183 |+    "AsyncIterable",
    184 |+    "AsyncIterator",
    185 |+    "Awaitable",
    186 |+    "Coroutine",
    187 |+]
184 188 | 
185 189 | __all__ = [
186 190 |     "foo",

RUF022.py:185:11: RUF022 [*] `__all__` is not sorted
    |
183 |              ]
184 |   
185 |   __all__ = [
    |  ___________^
186 | |     "foo",
187 | |     "bar",
188 | |     "baz",
189 | |     ]
    | |_____^ RUF022
190 |   
191 |   ###################################
    |
    = help: Apply an isort-style sorting to `__all__`

ℹ Safe fix
183 183 |            ]
184 184 | 
185 185 | __all__ = [
186     |-    "foo",
187 186 |     "bar",
188 187 |     "baz",
    188 |+    "foo",
189 189 |     ]
190 190 | 
191 191 | ###################################


