---
source: crates/ruff_linter/src/rules/ruff/mod.rs
---
RUF022.py:5:11: RUF022 [*] `__all__` is not sorted
  |
3 | ##################################################
4 | 
5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
  |           ^^^^^^^^^^^^^^^^^^^^ RUF022
6 | __all__ += ["foo", "bar", "antipasti"]
7 | __all__ = ("d", "c", "b", "a")
  |
  = help: Sort `__all__` according to a natural sort

ℹ Safe fix
2 2 | # Single-line __all__ definitions (nice 'n' easy!)
3 3 | ##################################################
4 4 | 
5   |-__all__ = ["d", "c", "b", "a"]  # a comment that is untouched
  5 |+__all__ = ["a", "b", "c", "d"]  # a comment that is untouched
6 6 | __all__ += ["foo", "bar", "antipasti"]
7 7 | __all__ = ("d", "c", "b", "a")
8 8 | 

RUF022.py:6:12: RUF022 [*] `__all__` is not sorted
  |
5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
6 | __all__ += ["foo", "bar", "antipasti"]
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF022
7 | __all__ = ("d", "c", "b", "a")
  |
  = help: Sort `__all__` according to a natural sort

ℹ Safe fix
3 3 | ##################################################
4 4 | 
5 5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
6   |-__all__ += ["foo", "bar", "antipasti"]
  6 |+__all__ += ["antipasti", "bar", "foo"]
7 7 | __all__ = ("d", "c", "b", "a")
8 8 | 
9 9 | __all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained

RUF022.py:7:11: RUF022 [*] `__all__` is not sorted
  |
5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
6 | __all__ += ["foo", "bar", "antipasti"]
7 | __all__ = ("d", "c", "b", "a")
  |           ^^^^^^^^^^^^^^^^^^^^ RUF022
8 | 
9 | __all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained
  |
  = help: Sort `__all__` according to a natural sort

ℹ Safe fix
4 4 | 
5 5 | __all__ = ["d", "c", "b", "a"]  # a comment that is untouched
6 6 | __all__ += ["foo", "bar", "antipasti"]
7   |-__all__ = ("d", "c", "b", "a")
  7 |+__all__ = ("a", "b", "c", "d")
8 8 | 
9 9 | __all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained
10 10 | __all__: tuple = ("b", "c", "a",)  # note the trailing comma, which is retained

RUF022.py:9:17: RUF022 [*] `__all__` is not sorted
   |
 7 | __all__ = ("d", "c", "b", "a")
 8 | 
 9 | __all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained
   |                 ^^^^^^^^^^^^^^^^ RUF022
10 | __all__: tuple = ("b", "c", "a",)  # note the trailing comma, which is retained
   |
   = help: Sort `__all__` according to a natural sort

ℹ Safe fix
6  6  | __all__ += ["foo", "bar", "antipasti"]
7  7  | __all__ = ("d", "c", "b", "a")
8  8  | 
9     |-__all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained
   9  |+__all__: list = ["a", "b", "c",]  # note the trailing comma, which is retained
10 10 | __all__: tuple = ("b", "c", "a",)  # note the trailing comma, which is retained
11 11 | 
12 12 | if bool():

RUF022.py:10:18: RUF022 [*] `__all__` is not sorted
   |
 9 | __all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained
10 | __all__: tuple = ("b", "c", "a",)  # note the trailing comma, which is retained
   |                  ^^^^^^^^^^^^^^^^ RUF022
11 | 
12 | if bool():
   |
   = help: Sort `__all__` according to a natural sort

ℹ Safe fix
7  7  | __all__ = ("d", "c", "b", "a")
8  8  | 
9  9  | __all__: list = ["b", "c", "a",]  # note the trailing comma, which is retained
10    |-__all__: tuple = ("b", "c", "a",)  # note the trailing comma, which is retained
   10 |+__all__: tuple = ("a", "b", "c",)  # note the trailing comma, which is retained
11 11 | 
12 12 | if bool():
13 13 |     __all__ += ("x", "m", "a", "s")

RUF022.py:13:16: RUF022 [*] `__all__` is not sorted
   |
12 | if bool():
13 |     __all__ += ("x", "m", "a", "s")
   |                ^^^^^^^^^^^^^^^^^^^^ RUF022
14 | else:
15 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
   |
   = help: Sort `__all__` according to a natural sort

ℹ Safe fix
10 10 | __all__: tuple = ("b", "c", "a",)  # note the trailing comma, which is retained
11 11 | 
12 12 | if bool():
13    |-    __all__ += ("x", "m", "a", "s")
   13 |+    __all__ += ("a", "m", "s", "x")
14 14 | else:
15 15 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
16 16 | 

RUF022.py:15:16: RUF022 [*] `__all__` is not sorted
   |
13 |     __all__ += ("x", "m", "a", "s")
14 | else:
15 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
   |                ^^^^^^^^^^^^^^^^^^^^^^ RUF022
16 | 
17 | __all__: list[str] = ["the", "three", "little", "pigs"]
   |
   = help: Sort `__all__` according to a natural sort

ℹ Safe fix
12 12 | if bool():
13 13 |     __all__ += ("x", "m", "a", "s")
14 14 | else:
15    |-    __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
   15 |+    __all__ += "foo1", "foo2", "foo3"  # NB: an implicit tuple (without parens)
16 16 | 
17 17 | __all__: list[str] = ["the", "three", "little", "pigs"]
18 18 | 

RUF022.py:17:22: RUF022 [*] `__all__` is not sorted
   |
15 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
16 | 
17 | __all__: list[str] = ["the", "three", "little", "pigs"]
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF022
18 | 
19 | ####################################
   |
   = help: Sort `__all__` according to a natural sort

ℹ Safe fix
14 14 | else:
15 15 |     __all__ += "foo3", "foo2", "foo1"  # NB: an implicit tuple (without parens)
16 16 | 
17    |-__all__: list[str] = ["the", "three", "little", "pigs"]
   17 |+__all__: list[str] = ["little", "pigs", "the", "three"]
18 18 | 
19 19 | ####################################
20 20 | # Neat multiline __all__ definitions

RUF022.py:23:11: RUF022 [*] `__all__` is not sorted
   |
21 |   ####################################
22 |   
23 |   __all__ = (
   |  ___________^
24 | |     "d0",
25 | |     "c0",  # a comment regarding 'c0'
26 | |     "b0",
27 | |     # a comment regarding 'a0':
28 | |     "a0"
29 | | )
   | |_^ RUF022
30 |   
31 |   __all__ = [
   |
   = help: Sort `__all__` according to a natural sort

ℹ Unsafe fix
21 21 | ####################################
22 22 | 
23 23 | __all__ = (
24    |-    "d0",
   24 |+    # a comment regarding 'a0':
   25 |+    "a0",
   26 |+    "b0",
25 27 |     "c0",  # a comment regarding 'c0'
26    |-    "b0",
27    |-    # a comment regarding 'a0':
28    |-    "a0"
   28 |+    "d0"
29 29 | )
30 30 | 
31 31 | __all__ = [

RUF022.py:31:11: RUF022 [*] `__all__` is not sorted
   |
29 |   )
30 |   
31 |   __all__ = [
   |  ___________^
32 | |     "d",
33 | |     "c",  # a comment regarding 'c'
34 | |     "b",
35 | |     # a comment regarding 'a':
36 | |     "a"
37 | | ]
   | |_^ RUF022
38 |   
39 |   ##########################################
   |
   = help: Sort `__all__` according to a natural sort

ℹ Unsafe fix
29 29 | )
30 30 | 
31 31 | __all__ = [
32    |-    "d",
   32 |+    # a comment regarding 'a':
   33 |+    "a",
   34 |+    "b",
33 35 |     "c",  # a comment regarding 'c'
34    |-    "b",
35    |-    # a comment regarding 'a':
36    |-    "a"
   36 |+    "d"
37 37 | ]
38 38 | 
39 39 | ##########################################

RUF022.py:44:11: RUF022 [*] `__all__` is not sorted
   |
43 |   # comment0
44 |   __all__ = ("d", "a",  # comment1
   |  ___________^
45 | |            # comment2
46 | |            "f", "b",
47 | |                                         "strangely",  # comment3
48 | |             # comment4
49 | |     "formatted",
50 | |     # comment5
51 | | )  # comment6
   | |_^ RUF022
52 |   # comment7
   |
   = help: Sort `__all__` according to a natural sort

ℹ Unsafe fix
41 41 | ##########################################
42 42 | 
43 43 | # comment0
44    |-__all__ = ("d", "a",  # comment1
45    |-           # comment2
46    |-           "f", "b",
47    |-                                        "strangely",  # comment3
48    |-            # comment4
   44 |+__all__ = (
   45 |+    "a",
   46 |+    "b",
   47 |+    "d",  # comment1
   48 |+    # comment2
   49 |+           "f",
   50 |+    # comment4
49 51 |     "formatted",
   52 |+    "strangely",  # comment3
50 53 |     # comment5
51 54 | )  # comment6
52 55 | # comment7

RUF022.py:54:11: RUF022 [*] `__all__` is not sorted
   |
52 |   # comment7
53 |   
54 |   __all__ = [  # comment0
   |  ___________^
55 | |     # comment1
56 | |     # comment2
57 | |     "dx", "cx", "bx", "ax"  # comment3
58 | |     # comment4
59 | |     # comment5
60 | |     # comment6
61 | | ]  # comment7
   | |_^ RUF022
62 |   
63 |   __all__ = ["register", "lookup", "open", "EncodedFile", "BOM", "BOM_BE",
   |
   = help: Sort `__all__` according to a natural sort

ℹ Unsafe fix
52 52 | # comment7
53 53 | 
54 54 | __all__ = [  # comment0
   55 |+    "ax",
   56 |+    "bx",
   57 |+    "cx",
55 58 |     # comment1
56 59 |     # comment2
57    |-    "dx", "cx", "bx", "ax"  # comment3
   60 |+    "dx"  # comment3
58 61 |     # comment4
59 62 |     # comment5
60 63 |     # comment6

RUF022.py:63:11: RUF022 [*] `__all__` is not sorted
   |
61 |   ]  # comment7
62 |   
63 |   __all__ = ["register", "lookup", "open", "EncodedFile", "BOM", "BOM_BE",
   |  ___________^
64 | |            "BOM_LE", "BOM32_BE", "BOM32_LE", "BOM64_BE", "BOM64_LE",
65 | |            "BOM_UTF8", "BOM_UTF16", "BOM_UTF16_LE", "BOM_UTF16_BE",
66 | |            "BOM_UTF32", "BOM_UTF32_LE", "BOM_UTF32_BE",
67 | |            "CodecInfo", "Codec", "IncrementalEncoder", "IncrementalDecoder",
68 | |            "StreamReader", "StreamWriter",
69 | |            "StreamReaderWriter", "StreamRecoder",
70 | |            "getencoder", "getdecoder", "getincrementalencoder",
71 | |            "getincrementaldecoder", "getreader", "getwriter",
72 | |            "encode", "decode", "iterencode", "iterdecode",
73 | |            "strict_errors", "ignore_errors", "replace_errors",
74 | |            "xmlcharrefreplace_errors",
75 | |            "backslashreplace_errors", "namereplace_errors",
76 | |            "register_error", "lookup_error"]
   | |____________________________________________^ RUF022
77 |   
78 |   __all__: tuple[str, ...] = (  # a comment about the opening paren
   |
   = help: Sort `__all__` according to a natural sort

ℹ Safe fix
60  60  |     # comment6
61  61  | ]  # comment7
62  62  | 
63      |-__all__ = ["register", "lookup", "open", "EncodedFile", "BOM", "BOM_BE",
64      |-           "BOM_LE", "BOM32_BE", "BOM32_LE", "BOM64_BE", "BOM64_LE",
65      |-           "BOM_UTF8", "BOM_UTF16", "BOM_UTF16_LE", "BOM_UTF16_BE",
66      |-           "BOM_UTF32", "BOM_UTF32_LE", "BOM_UTF32_BE",
67      |-           "CodecInfo", "Codec", "IncrementalEncoder", "IncrementalDecoder",
68      |-           "StreamReader", "StreamWriter",
69      |-           "StreamReaderWriter", "StreamRecoder",
70      |-           "getencoder", "getdecoder", "getincrementalencoder",
71      |-           "getincrementaldecoder", "getreader", "getwriter",
72      |-           "encode", "decode", "iterencode", "iterdecode",
73      |-           "strict_errors", "ignore_errors", "replace_errors",
74      |-           "xmlcharrefreplace_errors",
75      |-           "backslashreplace_errors", "namereplace_errors",
76      |-           "register_error", "lookup_error"]
    63  |+__all__ = [
    64  |+    "BOM",
    65  |+    "BOM32_BE",
    66  |+    "BOM32_LE",
    67  |+    "BOM64_BE",
    68  |+    "BOM64_LE",
    69  |+    "BOM_BE",
    70  |+    "BOM_LE",
    71  |+    "BOM_UTF8",
    72  |+    "BOM_UTF16",
    73  |+    "BOM_UTF16_BE",
    74  |+    "BOM_UTF16_LE",
    75  |+    "BOM_UTF32",
    76  |+    "BOM_UTF32_BE",
    77  |+    "BOM_UTF32_LE",
    78  |+    "Codec",
    79  |+    "CodecInfo",
    80  |+    "EncodedFile",
    81  |+    "IncrementalDecoder",
    82  |+    "IncrementalEncoder",
    83  |+    "StreamReader",
    84  |+    "StreamReaderWriter",
    85  |+    "StreamRecoder",
    86  |+    "StreamWriter",
    87  |+    "backslashreplace_errors",
    88  |+    "decode",
    89  |+    "encode",
    90  |+    "getdecoder",
    91  |+    "getencoder",
    92  |+    "getincrementaldecoder",
    93  |+    "getincrementalencoder",
    94  |+    "getreader",
    95  |+    "getwriter",
    96  |+    "ignore_errors",
    97  |+    "iterdecode",
    98  |+    "iterencode",
    99  |+    "lookup",
    100 |+    "lookup_error",
    101 |+    "namereplace_errors",
    102 |+    "open",
    103 |+    "register",
    104 |+    "register_error",
    105 |+    "replace_errors",
    106 |+    "strict_errors",
    107 |+    "xmlcharrefreplace_errors"]
77  108 | 
78  109 | __all__: tuple[str, ...] = (  # a comment about the opening paren
79  110 |     # multiline comment about "bbb" part 1

RUF022.py:78:28: RUF022 [*] `__all__` is not sorted
   |
76 |              "register_error", "lookup_error"]
77 |   
78 |   __all__: tuple[str, ...] = (  # a comment about the opening paren
   |  ____________________________^
79 | |     # multiline comment about "bbb" part 1
80 | |     # multiline comment about "bbb" part 2
81 | |     "bbb",
82 | |     # multiline comment about "aaa" part 1
83 | |     # multiline comment about "aaa" part 2
84 | |     "aaa",
85 | | )
   | |_^ RUF022
86 |   
87 |   # we use natural sort for `__all__`,
   |
   = help: Sort `__all__` according to a natural sort

ℹ Unsafe fix
76 76 |            "register_error", "lookup_error"]
77 77 | 
78 78 | __all__: tuple[str, ...] = (  # a comment about the opening paren
   79 |+    # multiline comment about "aaa" part 1
   80 |+    # multiline comment about "aaa" part 2
   81 |+    "aaa",
79 82 |     # multiline comment about "bbb" part 1
80 83 |     # multiline comment about "bbb" part 2
81 84 |     "bbb",
82    |-    # multiline comment about "aaa" part 1
83    |-    # multiline comment about "aaa" part 2
84    |-    "aaa",
85 85 | )
86 86 | 
87 87 | # we use natural sort for `__all__`,

RUF022.py:91:11: RUF022 [*] `__all__` is not sorted
   |
89 |   # Also, this doesn't end with a trailing comma,
90 |   # so the autofix shouldn't introduce one:
91 |   __all__ = (
   |  ___________^
92 | |     "aadvark237",
93 | |     "aadvark10092",
94 | |     "aadvark174",         # the very long whitespace span before this comment is retained
95 | |     "aadvark532"                       # the even longer whitespace span before this comment is retained
96 | | )
   | |_^ RUF022
97 |   
98 |   ###################################
   |
   = help: Sort `__all__` according to a natural sort

ℹ Unsafe fix
89 89 | # Also, this doesn't end with a trailing comma,
90 90 | # so the autofix shouldn't introduce one:
91 91 | __all__ = (
   92 |+    "aadvark174",         # the very long whitespace span before this comment is retained
92 93 |     "aadvark237",
93    |-    "aadvark10092",
94    |-    "aadvark174",         # the very long whitespace span before this comment is retained
95    |-    "aadvark532"                       # the even longer whitespace span before this comment is retained
   94 |+    "aadvark532",                       # the even longer whitespace span before this comment is retained
   95 |+    "aadvark10092"
96 96 | )
97 97 | 
98 98 | ###################################


