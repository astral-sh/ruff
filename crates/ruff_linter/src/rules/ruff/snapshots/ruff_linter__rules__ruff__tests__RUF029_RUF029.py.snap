---
source: crates/ruff_linter/src/rules/ruff/mod.rs
---
RUF029.py:35:11: RUF029 Function `fail_1a` is declared `async`, but doesn't await or use async features.
   |
35 | async def fail_1a():  # RUF029
   |           ^^^^^^^ RUF029
36 |     time.sleep(1)
   |

RUF029.py:39:11: RUF029 Function `fail_1b` is declared `async`, but doesn't await or use async features.
   |
39 | async def fail_1b():  # RUF029: yield does not require async
   |           ^^^^^^^ RUF029
40 |     yield "hello"
   |

RUF029.py:43:11: RUF029 Function `fail_2` is declared `async`, but doesn't await or use async features.
   |
43 | async def fail_2():  # RUF029
   |           ^^^^^^ RUF029
44 |     with None as i:
45 |         pass
   |

RUF029.py:48:11: RUF029 Function `fail_3` is declared `async`, but doesn't await or use async features.
   |
48 | async def fail_3():  # RUF029
   |           ^^^^^^ RUF029
49 |     for i in []:
50 |         pass
   |

RUF029.py:55:11: RUF029 Function `fail_4a` is declared `async`, but doesn't await or use async features.
   |
55 | async def fail_4a():  # RUF029: the /outer/ function does not await
   |           ^^^^^^^ RUF029
56 |     async def foo():
57 |         await bla
   |

RUF029.py:60:11: RUF029 Function `fail_4b` is declared `async`, but doesn't await or use async features.
   |
60 | async def fail_4b():  # RUF029: the /outer/ function does not await
   |           ^^^^^^^ RUF029
61 |     class Foo:
62 |         async def foo():
   |

RUF029.py:67:15: RUF029 Function `fail_4c` is declared `async`, but doesn't await or use async features.
   |
66 | def foo():
67 |     async def fail_4c():  # RUF029: the /inner/ function does not await
   |               ^^^^^^^ RUF029
68 |         pass
   |
