---
source: crates/ruff_linter/src/rules/ruff/mod.rs
snapshot_kind: text
---
RUF052.py:92:9: RUF052 Local dummy variable `_var` is accessed
   |
90 | class Class_:
91 |     def fun(self):
92 |         _var = "method variable" # [RUF052]
   |         ^^^^ RUF052
93 |         return _var
   |
   = help: Remove leading underscores

RUF052.py:99:5: RUF052 Local dummy variable `_list` is accessed
    |
 98 | def fun():
 99 |     _list = "built-in" # [RUF052]
    |     ^^^^^ RUF052
100 |     return _list
    |
    = help: Prefer using trailing underscores to avoid shadowing a built-in

RUF052.py:106:5: RUF052 Local dummy variable `_x` is accessed
    |
104 | def fun():
105 |     global x
106 |     _x = "shadows global" # [RUF052]
    |     ^^ RUF052
107 |     return _x
    |
    = help: Prefer using trailing underscores to avoid shadowing a variable

RUF052.py:110:3: RUF052 Local dummy variable `x` is accessed
    |
109 | def foo():
110 |   x = "outer"
    |   ^ RUF052
111 |   def bar():
112 |     nonlocal x
    |

RUF052.py:113:5: RUF052 Local dummy variable `_x` is accessed
    |
111 |   def bar():
112 |     nonlocal x
113 |     _x = "shadows nonlocal" # [RUF052]
    |     ^^ RUF052
114 |     return _x
115 |   bar()
    |
    = help: Prefer using trailing underscores to avoid shadowing a variable

RUF052.py:120:5: RUF052 Local dummy variable `_x` is accessed
    |
118 | def fun():
119 |     x = "local"
120 |     _x = "shadows local" # [RUF052]
    |     ^^ RUF052
121 |     return _x
    |
    = help: Prefer using trailing underscores to avoid shadowing a variable

RUF052.py:128:5: RUF052 Local dummy variable `_GLOBAL_1` is accessed
    |
127 | def unfixables():
128 |     _GLOBAL_1 = "foo"
    |     ^^^^^^^^^ RUF052
129 |     # unfixable because the rename would shadow a global variable
130 |     print(_GLOBAL_1)  # [RUF052]
    |
    = help: Prefer using trailing underscores to avoid shadowing a variable

RUF052.py:136:5: RUF052 Local dummy variable `_local` is accessed
    |
135 |     # unfixable because the rename would shadow a local variable
136 |     _local = "local3"  # [RUF052]
    |     ^^^^^^ RUF052
137 |     print(_local)
    |
    = help: Prefer using trailing underscores to avoid shadowing a variable

RUF052.py:140:9: RUF052 Local dummy variable `_GLOBAL_1` is accessed
    |
139 |     def nested():
140 |         _GLOBAL_1 = "foo"
    |         ^^^^^^^^^ RUF052
141 |         # unfixable because the rename would shadow a global variable
142 |         print(_GLOBAL_1)  # [RUF052]
    |
    = help: Prefer using trailing underscores to avoid shadowing a variable

RUF052.py:145:9: RUF052 Local dummy variable `_local` is accessed
    |
144 |         # unfixable because the rename would shadow a variable from the outer function
145 |         _local = "local4"
    |         ^^^^^^ RUF052
146 |         print(_local)
    |
    = help: Prefer using trailing underscores to avoid shadowing a variable

RUF052.py:153:5: RUF052 Local dummy variable `_P` is accessed
    |
151 |     from collections import namedtuple
152 | 
153 |     _P = ParamSpec("_P")
    |     ^^ RUF052
154 |     _T = TypeVar(name="_T", covariant=True, bound=int|str)
155 |     _NT = NamedTuple("_NT", [("foo", int)])
    |
    = help: Remove leading underscores

RUF052.py:154:5: RUF052 Local dummy variable `_T` is accessed
    |
153 |     _P = ParamSpec("_P")
154 |     _T = TypeVar(name="_T", covariant=True, bound=int|str)
    |     ^^ RUF052
155 |     _NT = NamedTuple("_NT", [("foo", int)])
156 |     _E = Enum("_E", ["a", "b", "c"])
    |
    = help: Remove leading underscores

RUF052.py:155:5: RUF052 Local dummy variable `_NT` is accessed
    |
153 |     _P = ParamSpec("_P")
154 |     _T = TypeVar(name="_T", covariant=True, bound=int|str)
155 |     _NT = NamedTuple("_NT", [("foo", int)])
    |     ^^^ RUF052
156 |     _E = Enum("_E", ["a", "b", "c"])
157 |     _NT2 = namedtuple("_NT2", ['x', 'y', 'z'])
    |
    = help: Remove leading underscores

RUF052.py:156:5: RUF052 Local dummy variable `_E` is accessed
    |
154 |     _T = TypeVar(name="_T", covariant=True, bound=int|str)
155 |     _NT = NamedTuple("_NT", [("foo", int)])
156 |     _E = Enum("_E", ["a", "b", "c"])
    |     ^^ RUF052
157 |     _NT2 = namedtuple("_NT2", ['x', 'y', 'z'])
158 |     _NT3 = namedtuple(typename="_NT3", field_names=['x', 'y', 'z'])
    |
    = help: Remove leading underscores

RUF052.py:157:5: RUF052 Local dummy variable `_NT2` is accessed
    |
155 |     _NT = NamedTuple("_NT", [("foo", int)])
156 |     _E = Enum("_E", ["a", "b", "c"])
157 |     _NT2 = namedtuple("_NT2", ['x', 'y', 'z'])
    |     ^^^^ RUF052
158 |     _NT3 = namedtuple(typename="_NT3", field_names=['x', 'y', 'z'])
159 |     _DynamicClass = type("_DynamicClass", (), {})
    |
    = help: Remove leading underscores

RUF052.py:158:5: RUF052 Local dummy variable `_NT3` is accessed
    |
156 |     _E = Enum("_E", ["a", "b", "c"])
157 |     _NT2 = namedtuple("_NT2", ['x', 'y', 'z'])
158 |     _NT3 = namedtuple(typename="_NT3", field_names=['x', 'y', 'z'])
    |     ^^^^ RUF052
159 |     _DynamicClass = type("_DynamicClass", (), {})
160 |     _NotADynamicClass = type("_NotADynamicClass")
    |
    = help: Remove leading underscores

RUF052.py:159:5: RUF052 Local dummy variable `_DynamicClass` is accessed
    |
157 |     _NT2 = namedtuple("_NT2", ['x', 'y', 'z'])
158 |     _NT3 = namedtuple(typename="_NT3", field_names=['x', 'y', 'z'])
159 |     _DynamicClass = type("_DynamicClass", (), {})
    |     ^^^^^^^^^^^^^ RUF052
160 |     _NotADynamicClass = type("_NotADynamicClass")
    |
    = help: Remove leading underscores

RUF052.py:160:5: RUF052 Local dummy variable `_NotADynamicClass` is accessed
    |
158 |     _NT3 = namedtuple(typename="_NT3", field_names=['x', 'y', 'z'])
159 |     _DynamicClass = type("_DynamicClass", (), {})
160 |     _NotADynamicClass = type("_NotADynamicClass")
    |     ^^^^^^^^^^^^^^^^^ RUF052
161 | 
162 |     print(_T, _P, _NT, _E, _NT2, _NT3, _DynamicClass, _NotADynamicClass)
    |
    = help: Remove leading underscores
