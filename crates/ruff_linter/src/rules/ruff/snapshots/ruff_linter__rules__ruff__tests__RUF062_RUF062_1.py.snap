---
source: crates/ruff_linter/src/rules/ruff/mod.rs
---
RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
 --> RUF062_1.py:9:9
  |
7 |     yield "first"
8 |     if condition:
9 |         yield "conditional"  # RUF062
  |         ^^^^^^^^^^^^^^^^^^^
  |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
  --> RUF062_1.py:21:9
   |
19 |     def another_inner_cm():
20 |         yield "first"
21 |         yield "second"  # RUF062
   |         ^^^^^^^^^^^^^^
   |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
  --> RUF062_1.py:32:9
   |
30 |         pass
31 |     else:
32 |         yield "second"  # RUF062
   |         ^^^^^^^^^^^^^^
33 |     print("done")
   |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
  --> RUF062_1.py:42:13
   |
40 |         case "a":
41 |             yield "one"
42 |             yield "two"  # RUF062
   |             ^^^^^^^^^^^
43 |         case _:
44 |             yield "default"
   |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
  --> RUF062_1.py:51:9
   |
49 | def invalid_yield_in_loop():
50 |     for i in range(3):
51 |         yield i  # RUF062
   |         ^^^^^^^
   |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
  --> RUF062_1.py:60:9
   |
58 |         yield "in try"
59 |     finally:
60 |         yield "in finally"  # RUF062
   |         ^^^^^^^^^^^^^^^^^^
   |

RUF062 Function decorated with `contextlib.asynccontextmanager` may yield more than once
  --> RUF062_1.py:68:5
   |
66 |     print("Setting up async")
67 |     yield "first async value"
68 |     yield "second async value"  # RUF062
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
69 |     print("Cleaning up async")
   |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
  --> RUF062_1.py:79:5
   |
77 | def invalid_with_import_alias():
78 |     yield "first"
79 |     yield "second"  # RUF062
   |     ^^^^^^^^^^^^^^
   |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
  --> RUF062_1.py:89:5
   |
87 | def invalid_with_direct_import():
88 |     yield "first"
89 |     yield "second"  # RUF062
   |     ^^^^^^^^^^^^^^
   |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
  --> RUF062_1.py:98:5
   |
96 |     yield "first value"
97 |     print("In between yields")
98 |     yield "second value"  # RUF062
   |     ^^^^^^^^^^^^^^^^^^^^
99 |     print("Cleaning up")
   |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:108:9
    |
106 |     if condition:
107 |         yield "first in condition"
108 |         yield "second in condition"  # RUF062
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
109 |     else:
110 |         yield "in else"
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:127:9
    |
125 |         yield "in TypeError"  # Unreported RUF062; only report on max yield path
126 |     else:
127 |         yield "in else"  # RUF062
    |         ^^^^^^^^^^^^^^^
128 |     finally:
129 |         yield "in finally"  # RUF062
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:129:9
    |
127 |         yield "in else"  # RUF062
128 |     finally:
129 |         yield "in finally"  # RUF062
    |         ^^^^^^^^^^^^^^^^^^
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:136:9
    |
134 | def yield_in_for():
135 |     for i in range(3):
136 |         yield f"in loop {i}"  # RUF062 - multiple yields in loop
    |         ^^^^^^^^^^^^^^^^^^^^
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:144:9
    |
142 |     x = 1
143 |     while x < 3:
144 |         yield f"in loop {x}"  # RUF062 - multiple yields in loop
    |         ^^^^^^^^^^^^^^^^^^^^
145 |         x += 1
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:158:9
    |
156 |         return
157 |     finally:
158 |         yield # RUF062
    |         ^^^^^
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:171:5
    |
169 |         yield
170 |         return
171 |     yield # RUF062
    |     ^^^^^
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:181:5
    |
179 |     except:
180 |         return
181 |     yield # RUF062
    |     ^^^^^
182 |
183 | # (18) Invalid: No returning except accumulates yields
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:193:9
    |
191 |     except ZeroDivisionError:
192 |         yield # valid
193 |         yield # # RUF062
    |         ^^^^^
194 |         return
195 |     except IndexError:
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:198:5
    |
196 |         yield # valid
197 |         pass
198 |     yield # RUF062 -- Invalid yield because of IndexError branch
    |     ^^^^^
199 |
200 | # (19) Invalid: yield in finally runs after except despite return
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:211:9
    |
209 |         return
210 |     finally:
211 |         yield # RUF062, runs after ZeroDivisionError except
    |         ^^^^^
212 |
213 | # (20) Invalid: multiple yields in match arm
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:219:13
    |
217 |         case "a":
218 |             yield # valid
219 |             yield # RUF062
    |             ^^^^^
220 |             return
221 |         case "b":
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:234:13
    |
232 |     match variable:
233 |         case "a":
234 |             yield # RUF062
    |             ^^^^^
235 |             return
236 |         case "b":
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:237:13
    |
235 |             return
236 |         case "b":
237 |             yield # RUF062
    |             ^^^^^
238 |
239 | # (22) Invalid: multiple yields in terminating branch
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:246:9
    |
244 |     except RuntimeError:
245 |         yield # valid
246 |         yield # RUF062
    |         ^^^^^
247 |         return
248 |     except ValueError:
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:258:9
    |
256 |     yield # valid
257 |     try:
258 |         yield # RUF062
    |         ^^^^^
259 |     except ValueError:
260 |         yield # RUF062
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:260:9
    |
258 |         yield # RUF062
259 |     except ValueError:
260 |         yield # RUF062
    |         ^^^^^
261 |         return
262 |     yield # RUF062
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:262:5
    |
260 |         yield # RUF062
261 |         return
262 |     yield # RUF062
    |     ^^^^^
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:272:9
    |
270 |         pass
271 |     except ValueError:
272 |         yield # RUF062
    |         ^^^^^
273 |         return
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:282:9
    |
280 |         pass
281 |     except ValueError:
282 |         yield # RUF062
    |         ^^^^^
283 |
284 | # (26) Invalid: preceeding yield makes all try/except yields illegal; finally returns
    |

RUF062 Function decorated with `contextlib.contextmanager` may yield more than once
   --> RUF062_1.py:293:9
    |
291 |         return
292 |     finally:
293 |         yield # RUF062
    |         ^^^^^
294 |         return
    |
