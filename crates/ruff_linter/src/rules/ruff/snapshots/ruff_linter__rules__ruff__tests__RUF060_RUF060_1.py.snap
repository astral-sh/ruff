---
source: crates/ruff_linter/src/rules/ruff/mod.rs
---
RUF060_1.py:5:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
  |
3 | # (1) Invalid: Variable number of yields based on conditions
4 | @contextlib.contextmanager
5 | def conditional_yields(condition):
  |     ^^^^^^^^^^^^^^^^^^ RUF060
6 |     yield "first"
7 |     if condition:
  |

RUF060_1.py:17:9: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
   |
16 |     @contextlib.contextmanager
17 |     def another_inner_cm():
   |         ^^^^^^^^^^^^^^^^ RUF060
18 |         yield "first"
19 |         yield "second"  # RUF060
   |

RUF060_1.py:23:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
   |
21 | # (3) Invalid: else yields after try yields
22 | @contextlib.contextmanager
23 | def invalid_try_else_finally():
   |     ^^^^^^^^^^^^^^^^^^^^^^^^ RUF060
24 |     try:
25 |         yield "first"
   |

RUF060_1.py:34:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
   |
32 | # (4) Invalid: Multiple yields in the same match arm
33 | @contextlib.contextmanager
34 | def invalid_match_same_case(value):
   |     ^^^^^^^^^^^^^^^^^^^^^^^ RUF060
35 |     match value:
36 |         case "a":
   |

RUF060_1.py:44:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
   |
42 | # (5) Invalid: Yield in a loop (always ambiguous)
43 | @contextlib.contextmanager
44 | def invalid_yield_in_loop():
   |     ^^^^^^^^^^^^^^^^^^^^^ RUF060
45 |     for i in range(3):
46 |         yield i  # RUF060
   |

RUF060_1.py:50:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
   |
48 | # (6) Invalid: Yields in try and finally
49 | @contextlib.contextmanager
50 | def invalid_try_finally():
   |     ^^^^^^^^^^^^^^^^^^^ RUF060
51 |     try:
52 |         yield "in try"
   |

RUF060_1.py:58:11: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
   |
56 | # (7) Invalid: Multiple yields in an async context manager
57 | @contextlib.asynccontextmanager
58 | async def invalid_async_context_manager():
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF060
59 |     print("Setting up async")
60 |     yield "first async value"
   |

RUF060_1.py:68:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
   |
67 | @ctx.contextmanager
68 | def invalid_with_import_alias():
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ RUF060
69 |     yield "first"
70 |     yield "second"  # RUF060
   |

RUF060_1.py:76:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
   |
75 | @contextmanager
76 | def invalid_with_direct_import():
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF060
77 |     yield "first"
78 |     yield "second"  # RUF060
   |

RUF060_1.py:82:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
   |
80 | # (10) Invalid: Multiple yields in a context manager
81 | @contextlib.contextmanager
82 | def invalid_multiple_yields():
   |     ^^^^^^^^^^^^^^^^^^^^^^^ RUF060
83 |     print("Setting up")
84 |     yield "first value"
   |

RUF060_1.py:91:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
   |
89 | # (11) Invalid: Multiple yields in the same branch
90 | @contextlib.contextmanager
91 | def invalid_multiple_in_same_branch(condition):
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF060
92 |     print("Setting up")
93 |     if condition:
   |

RUF060_1.py:102:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
    |
100 | # (12) Invalid: Multiple yields in complex try/except/else/finally
101 | @contextlib.contextmanager
102 | def complex_try_except_else_finally(condition):
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF060
103 |     try:
104 |         if condition:
    |

RUF060_1.py:119:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
    |
117 | # (13) Invalid: Yield in for loop
118 | @contextlib.contextmanager
119 | def yield_in_for():
    |     ^^^^^^^^^^^^ RUF060
120 |     for i in range(3):
121 |         yield f"in loop {i}"  # RUF060 - multiple yields in loop
    |

RUF060_1.py:125:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
    |
123 | # (14) Invalid: Yield in while loop
124 | @contextlib.contextmanager
125 | def yield_in_while():
    |     ^^^^^^^^^^^^^^ RUF060
126 |     x = 1
127 |     while x < 3:
    |

RUF060_1.py:133:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
    |
131 | # (15) Invalid: Unguarded yield in finally
132 | @contextlib.contextmanager
133 | def yield_in_finally():
    |     ^^^^^^^^^^^^^^^^ RUF060
134 |     try:
135 |         yield
    |

RUF060_1.py:145:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
    |
143 | # (16) Invalid: No returning except accumulates yields
144 | @contextlib.contextmanager
145 | def yield_in_no_return_except():
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ RUF060
146 |     try:
147 |         pass
    |

RUF060_1.py:157:5: RUF060 Function decorated with `contextlib.contextmanager` may yield more than once
    |
155 | #(17) Invalid: Return only in exception
156 | @contextlib.contextmanager
157 | def no_return_guarding_yield():
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ RUF060
158 |     try:
159 |         yield
    |
