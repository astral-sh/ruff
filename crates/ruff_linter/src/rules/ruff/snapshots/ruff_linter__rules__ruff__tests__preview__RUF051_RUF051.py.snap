---
source: crates/ruff_linter/src/rules/ruff/mod.rs
snapshot_kind: text
---
RUF051.py:7:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
 5 |   ### Errors
 6 |   
 7 | / if k in d:                          # Bare name
 8 | |     del d[k]
   | |____________^ RUF051
 9 |   
10 |   if '' in d:                         # String
   |
   = help: Replace with `.pop(..., None)`

ℹ Unsafe fix
4 4 | 
5 5 | ### Errors
6 6 | 
7   |-if k in d:                          # Bare name
8   |-    del d[k]
  7 |+d.pop(k, None)
9 8 | 
10 9 | if '' in d:                         # String
11 10 |     del d[""]                       # Different quotes

RUF051.py:10:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
 8 |       del d[k]
 9 |   
10 | / if '' in d:                         # String
11 | |     del d[""]                       # Different quotes
   | |_____________^ RUF051
12 |   
13 |   if b"" in d:                        # Bytes
   |
   = help: Replace with `.pop(..., None)`

ℹ Unsafe fix
7  7  | if k in d:                          # Bare name
8  8  |     del d[k]
9  9  | 
10    |-if '' in d:                         # String
11    |-    del d[""]                       # Different quotes
   10 |+d.pop('', None)                       # Different quotes
12 11 | 
13 12 | if b"" in d:                        # Bytes
14 13 |     del d[                          # Multiline slice

RUF051.py:13:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
11 |       del d[""]                       # Different quotes
12 |   
13 | / if b"" in d:                        # Bytes
14 | |     del d[                          # Multiline slice
15 | |         b''''''                     # Triple quotes
16 | |     ]
   | |_____^ RUF051
17 |   
18 |   if 0 in d: del d[0]                 # Single-line statement
   |
   = help: Replace with `.pop(..., None)`

ℹ Unsafe fix
10 10 | if '' in d:                         # String
11 11 |     del d[""]                       # Different quotes
12 12 | 
13    |-if b"" in d:                        # Bytes
14    |-    del d[                          # Multiline slice
15    |-        b''''''                     # Triple quotes
16    |-    ]
   13 |+d.pop(b"", None)
17 14 | 
18 15 | if 0 in d: del d[0]                 # Single-line statement
19 16 | 

RUF051.py:18:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
16 |     ]
17 | 
18 | if 0 in d: del d[0]                 # Single-line statement
   | ^^^^^^^^^^^^^^^^^^^ RUF051
19 | 
20 | if 3j in d:                         # Complex
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
15 15 |         b''''''                     # Triple quotes
16 16 |     ]
17 17 | 
18    |-if 0 in d: del d[0]                 # Single-line statement
   18 |+d.pop(0, None)                 # Single-line statement
19 19 | 
20 20 | if 3j in d:                         # Complex
21 21 |     del d[3j]

RUF051.py:20:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
18 |   if 0 in d: del d[0]                 # Single-line statement
19 |   
20 | / if 3j in d:                         # Complex
21 | |     del d[3j]
   | |_____________^ RUF051
22 |   
23 |   if 0.1234 in d:                     # Float
   |
   = help: Replace with `.pop(..., None)`

ℹ Unsafe fix
17 17 | 
18 18 | if 0 in d: del d[0]                 # Single-line statement
19 19 | 
20    |-if 3j in d:                         # Complex
21    |-    del d[3j]
   20 |+d.pop(3j, None)
22 21 | 
23 22 | if 0.1234 in d:                     # Float
24 23 |     del d[.1_2_3_4]                 # Number separators and shorthand syntax

RUF051.py:23:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
21 |       del d[3j]
22 |   
23 | / if 0.1234 in d:                     # Float
24 | |     del d[.1_2_3_4]                 # Number separators and shorthand syntax
   | |___________________^ RUF051
25 |   
26 |   if True in d:                       # True
   |
   = help: Replace with `.pop(..., None)`

ℹ Unsafe fix
20 20 | if 3j in d:                         # Complex
21 21 |     del d[3j]
22 22 | 
23    |-if 0.1234 in d:                     # Float
24    |-    del d[.1_2_3_4]                 # Number separators and shorthand syntax
   23 |+d.pop(0.1234, None)                 # Number separators and shorthand syntax
25 24 | 
26 25 | if True in d:                       # True
27 26 |     del d[True]

RUF051.py:26:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
24 |       del d[.1_2_3_4]                 # Number separators and shorthand syntax
25 |   
26 | / if True in d:                       # True
27 | |     del d[True]
   | |_______________^ RUF051
28 |   
29 |   if False in d:                      # False
   |
   = help: Replace with `.pop(..., None)`

ℹ Unsafe fix
23 23 | if 0.1234 in d:                     # Float
24 24 |     del d[.1_2_3_4]                 # Number separators and shorthand syntax
25 25 | 
26    |-if True in d:                       # True
27    |-    del d[True]
   26 |+d.pop(True, None)
28 27 | 
29 28 | if False in d:                      # False
30 29 |     del d[False]

RUF051.py:29:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
27 |       del d[True]
28 |   
29 | / if False in d:                      # False
30 | |     del d[False]
   | |________________^ RUF051
31 |   
32 |   if None in d:                       # None
   |
   = help: Replace with `.pop(..., None)`

ℹ Unsafe fix
26 26 | if True in d:                       # True
27 27 |     del d[True]
28 28 | 
29    |-if False in d:                      # False
30    |-    del d[False]
   29 |+d.pop(False, None)
31 30 | 
32 31 | if None in d:                       # None
33 32 |     del d[

RUF051.py:32:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
30 |       del d[False]
31 |   
32 | / if None in d:                       # None
33 | |     del d[
34 | |         # Comment in the middle
35 | |         None
36 | |     ]
   | |_____^ RUF051
37 |   
38 |   if ... in d:                        # Ellipsis
   |
   = help: Replace with `.pop(..., None)`

ℹ Unsafe fix
29 29 | if False in d:                      # False
30 30 |     del d[False]
31 31 | 
32    |-if None in d:                       # None
33    |-    del d[
34    |-        # Comment in the middle
35    |-        None
36    |-    ]
   32 |+d.pop(None, None)
37 33 | 
38 34 | if ... in d:                        # Ellipsis
39 35 |     del d[

RUF051.py:38:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
36 |       ]
37 |   
38 | / if ... in d:                        # Ellipsis
39 | |     del d[
40 | |                                     # Comment in the middle, indented
41 | |         ...]
   | |____________^ RUF051
42 |   
43 |   if "a" "bc" in d:                   # String concatenation
   |
   = help: Replace with `.pop(..., None)`

ℹ Unsafe fix
35 35 |         None
36 36 |     ]
37 37 | 
38    |-if ... in d:                        # Ellipsis
39    |-    del d[
40    |-                                    # Comment in the middle, indented
41    |-        ...]
   38 |+d.pop(..., None)
42 39 | 
43 40 | if "a" "bc" in d:                   # String concatenation
44 41 |     del d['abc']

RUF051.py:43:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
41 |           ...]
42 |   
43 | / if "a" "bc" in d:                   # String concatenation
44 | |     del d['abc']
   | |________________^ RUF051
45 |   
46 |   if r"\foo" in d:                    # Raw string
   |
   = help: Replace with `.pop(..., None)`

ℹ Unsafe fix
40 40 |                                     # Comment in the middle, indented
41 41 |         ...]
42 42 | 
43    |-if "a" "bc" in d:                   # String concatenation
44    |-    del d['abc']
   43 |+d.pop("a" "bc", None)
45 44 | 
46 45 | if r"\foo" in d:                    # Raw string
47 46 |     del d['\\foo']

RUF051.py:46:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
44 |       del d['abc']
45 |   
46 | / if r"\foo" in d:                    # Raw string
47 | |     del d['\\foo']
   | |__________________^ RUF051
48 |   
49 |   if b'yt' b'es' in d:                # Bytes concatenation
   |
   = help: Replace with `.pop(..., None)`

ℹ Unsafe fix
43 43 | if "a" "bc" in d:                   # String concatenation
44 44 |     del d['abc']
45 45 | 
46    |-if r"\foo" in d:                    # Raw string
47    |-    del d['\\foo']
   46 |+d.pop(r"\foo", None)
48 47 | 
49 48 | if b'yt' b'es' in d:                # Bytes concatenation
50 49 |     del d[rb"""ytes"""]             # Raw bytes

RUF051.py:49:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
47 |       del d['\\foo']
48 |   
49 | / if b'yt' b'es' in d:                # Bytes concatenation
50 | |     del d[rb"""ytes"""]             # Raw bytes
   | |_______________________^ RUF051
   |
   = help: Replace with `.pop(..., None)`

ℹ Unsafe fix
46 46 | if r"\foo" in d:                    # Raw string
47 47 |     del d['\\foo']
48 48 | 
49    |-if b'yt' b'es' in d:                # Bytes concatenation
50    |-    del d[rb"""ytes"""]             # Raw bytes
   49 |+d.pop(b'yt' b'es', None)             # Raw bytes
51 50 | 
52 51 | 
53 52 | ### Safely fixable

RUF051.py:55:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
53 |   ### Safely fixable
54 |   
55 | / if k in d:
56 | |     del d[k]
   | |____________^ RUF051
57 |   
58 |   if '' in d:
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
52 52 | 
53 53 | ### Safely fixable
54 54 | 
55    |-if k in d:
56    |-    del d[k]
   55 |+d.pop(k, None)
57 56 | 
58 57 | if '' in d:
59 58 |     del d[""]

RUF051.py:58:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
56 |       del d[k]
57 |   
58 | / if '' in d:
59 | |     del d[""]
   | |_____________^ RUF051
60 |   
61 |   if b"" in d:
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
55 55 | if k in d:
56 56 |     del d[k]
57 57 | 
58    |-if '' in d:
59    |-    del d[""]
   58 |+d.pop('', None)
60 59 | 
61 60 | if b"" in d:
62 61 |     del d[

RUF051.py:61:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
59 |       del d[""]
60 |   
61 | / if b"" in d:
62 | |     del d[
63 | |         b''''''
64 | |     ]
   | |_____^ RUF051
65 |   
66 |   if 0 in d: del d[0]
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
58 58 | if '' in d:
59 59 |     del d[""]
60 60 | 
61    |-if b"" in d:
62    |-    del d[
63    |-        b''''''
64    |-    ]
   61 |+d.pop(b"", None)
65 62 | 
66 63 | if 0 in d: del d[0]
67 64 | 

RUF051.py:66:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
64 |     ]
65 | 
66 | if 0 in d: del d[0]
   | ^^^^^^^^^^^^^^^^^^^ RUF051
67 | 
68 | if 3j in d:
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
63 63 |         b''''''
64 64 |     ]
65 65 | 
66    |-if 0 in d: del d[0]
   66 |+d.pop(0, None)
67 67 | 
68 68 | if 3j in d:
69 69 |     del d[3j]

RUF051.py:68:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
66 |   if 0 in d: del d[0]
67 |   
68 | / if 3j in d:
69 | |     del d[3j]
   | |_____________^ RUF051
70 |   
71 |   if 0.1234 in d:
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
65 65 | 
66 66 | if 0 in d: del d[0]
67 67 | 
68    |-if 3j in d:
69    |-    del d[3j]
   68 |+d.pop(3j, None)
70 69 | 
71 70 | if 0.1234 in d:
72 71 |     del d[.1_2_3_4]

RUF051.py:71:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
69 |       del d[3j]
70 |   
71 | / if 0.1234 in d:
72 | |     del d[.1_2_3_4]
   | |___________________^ RUF051
73 |   
74 |   if True in d:
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
68 68 | if 3j in d:
69 69 |     del d[3j]
70 70 | 
71    |-if 0.1234 in d:
72    |-    del d[.1_2_3_4]
   71 |+d.pop(0.1234, None)
73 72 | 
74 73 | if True in d:
75 74 |     del d[True]

RUF051.py:74:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
72 |       del d[.1_2_3_4]
73 |   
74 | / if True in d:
75 | |     del d[True]
   | |_______________^ RUF051
76 |   
77 |   if False in d:
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
71 71 | if 0.1234 in d:
72 72 |     del d[.1_2_3_4]
73 73 | 
74    |-if True in d:
75    |-    del d[True]
   74 |+d.pop(True, None)
76 75 | 
77 76 | if False in d:
78 77 |     del d[False]

RUF051.py:77:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
75 |       del d[True]
76 |   
77 | / if False in d:
78 | |     del d[False]
   | |________________^ RUF051
79 |   
80 |   if None in d:
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
74 74 | if True in d:
75 75 |     del d[True]
76 76 | 
77    |-if False in d:
78    |-    del d[False]
   77 |+d.pop(False, None)
79 78 | 
80 79 | if None in d:
81 80 |     del d[

RUF051.py:80:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
78 |       del d[False]
79 |   
80 | / if None in d:
81 | |     del d[
82 | |         None
83 | |     ]
   | |_____^ RUF051
84 |   
85 |   if ... in d:
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
77 77 | if False in d:
78 78 |     del d[False]
79 79 | 
80    |-if None in d:
81    |-    del d[
82    |-        None
83    |-    ]
   80 |+d.pop(None, None)
84 81 | 
85 82 | if ... in d:
86 83 |     del d[

RUF051.py:85:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
83 |       ]
84 |   
85 | / if ... in d:
86 | |     del d[
87 | |         ...]
   | |____________^ RUF051
88 |   
89 |   if "a" "bc" in d:
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
82 82 |         None
83 83 |     ]
84 84 | 
85    |-if ... in d:
86    |-    del d[
87    |-        ...]
   85 |+d.pop(..., None)
88 86 | 
89 87 | if "a" "bc" in d:
90 88 |     del d['abc']

RUF051.py:89:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
87 |           ...]
88 |   
89 | / if "a" "bc" in d:
90 | |     del d['abc']
   | |________________^ RUF051
91 |   
92 |   if r"\foo" in d:
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
86 86 |     del d[
87 87 |         ...]
88 88 | 
89    |-if "a" "bc" in d:
90    |-    del d['abc']
   89 |+d.pop("a" "bc", None)
91 90 | 
92 91 | if r"\foo" in d:
93 92 |     del d['\\foo']

RUF051.py:92:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
90 |       del d['abc']
91 |   
92 | / if r"\foo" in d:
93 | |     del d['\\foo']
   | |__________________^ RUF051
94 |   
95 |   if b'yt' b'es' in d:
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
89 89 | if "a" "bc" in d:
90 90 |     del d['abc']
91 91 | 
92    |-if r"\foo" in d:
93    |-    del d['\\foo']
   92 |+d.pop(r"\foo", None)
94 93 | 
95 94 | if b'yt' b'es' in d:
96 95 |     del d[rb"""ytes"""]             # This should not make the fix unsafe

RUF051.py:95:1: RUF051 [*] Use `pop` instead of `key in dict` followed by `delete dict[key]`
   |
93 |       del d['\\foo']
94 |   
95 | / if b'yt' b'es' in d:
96 | |     del d[rb"""ytes"""]             # This should not make the fix unsafe
   | |_______________________^ RUF051
   |
   = help: Replace with `.pop(..., None)`

ℹ Safe fix
92 92 | if r"\foo" in d:
93 93 |     del d['\\foo']
94 94 | 
95    |-if b'yt' b'es' in d:
96    |-    del d[rb"""ytes"""]             # This should not make the fix unsafe
   95 |+d.pop(b'yt' b'es', None)             # This should not make the fix unsafe
97 96 | 
98 97 | 
99 98 | ### No errors
