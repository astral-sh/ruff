---
source: crates/ruff_linter/src/rules/ruff/mod.rs
---
RUF021.py:12:10: RUF021 Parenthesize `a and b` expressions when chaining `and` and `or` together, to make the precedence clear
   |
11 | a, b, c = 1, 0, 2
12 | x = a or b and c  # RUF021: => `a or (b and c)`
   |          ^^^^^^^ RUF021
13 | 
14 | a, b, c = 0, 1, 2
   |

RUF021.py:15:5: RUF021 Parenthesize `a and b` expressions when chaining `and` and `or` together, to make the precedence clear
   |
14 | a, b, c = 0, 1, 2
15 | y = a and b or c  # RUF021: => `(a and b) or c`
   |     ^^^^^^^ RUF021
16 | 
17 | a, b, c, d = 1, 2, 0, 3
   |

RUF021.py:18:14: RUF021 Parenthesize `a and b` expressions when chaining `and` and `or` together, to make the precedence clear
   |
17 | a, b, c, d = 1, 2, 0, 3
18 | if a or b or c and d:  # RUF021: => `a or b or (c and d)`
   |              ^^^^^^^ RUF021
19 |     pass
   |

RUF021.py:25:11: RUF021 Parenthesize `a and b` expressions when chaining `and` and `or` together, to make the precedence clear
   |
23 | if bool():
24 |     pass
25 | elif a or b and c or d:  # RUF021: => `a or (b and c) or d`
   |           ^^^^^^^ RUF021
26 |     pass
   |

RUF021.py:29:7: RUF021 Parenthesize `a and b` expressions when chaining `and` and `or` together, to make the precedence clear
   |
28 | a, b, c, d = 0, 1, 0, 2
29 | while a and b or c and d:  # RUF021: => `(and b) or (c and d)`
   |       ^^^^^^^ RUF021
30 |     pass
   |

RUF021.py:29:18: RUF021 Parenthesize `a and b` expressions when chaining `and` and `or` together, to make the precedence clear
   |
28 | a, b, c, d = 0, 1, 0, 2
29 | while a and b or c and d:  # RUF021: => `(and b) or (c and d)`
   |                  ^^^^^^^ RUF021
30 |     pass
   |

RUF021.py:33:44: RUF021 Parenthesize `a and b` expressions when chaining `and` and `or` together, to make the precedence clear
   |
32 | b, c, d, e = 2, 3, 0, 4
33 | z = [a for a in range(5) if a or b or c or d and e]  # RUF021: => `a or b or c or (d and e)`
   |                                            ^^^^^^^ RUF021
34 | 
35 | a, b, c, d = 0, 1, 3, 0
   |

RUF021.py:36:8: RUF021 Parenthesize `a and b` expressions when chaining `and` and `or` together, to make the precedence clear
   |
35 | a, b, c, d = 0, 1, 3, 0
36 | assert not a and b or c or d  # RUF021: => `(not a and b) or c or d`
   |        ^^^^^^^^^^^ RUF021
37 | 
38 | if (not a) and b or c or d:  # RUF021: => `((not a) and b) or c or d`
   |

RUF021.py:38:4: RUF021 Parenthesize `a and b` expressions when chaining `and` and `or` together, to make the precedence clear
   |
36 | assert not a and b or c or d  # RUF021: => `(not a and b) or c or d`
37 | 
38 | if (not a) and b or c or d:  # RUF021: => `((not a) and b) or c or d`
   |    ^^^^^^^^^^^^^ RUF021
39 |     if (not a and b) or c or d:  # OK
40 |         pass
   |


