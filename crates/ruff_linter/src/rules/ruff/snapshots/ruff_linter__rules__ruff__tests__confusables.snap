---
source: crates/ruff_linter/src/rules/ruff/mod.rs
---
RUF001 String contains ambiguous `𝐁` (MATHEMATICAL BOLD CAPITAL B). Did you mean `B` (LATIN CAPITAL LETTER B)?
 --> confusables.py:1:6
  |
1 | x = "𝐁ad string"
  |      ^
2 | y = "−"
  |

RUF002 Docstring contains ambiguous `）` (FULLWIDTH RIGHT PARENTHESIS). Did you mean `)` (RIGHT PARENTHESIS)?
 --> confusables.py:6:56
  |
5 | def f():
6 |     """Here's a docstring with an unusual parenthesis: ）"""
  |                                                        ^^
7 |     # And here's a comment with an unusual punctuation mark: ᜵
8 |     ...
  |

RUF003 Comment contains ambiguous `᜵` (PHILIPPINE SINGLE PUNCTUATION). Did you mean `/` (SOLIDUS)?
 --> confusables.py:7:62
  |
5 | def f():
6 |     """Here's a docstring with an unusual parenthesis: ）"""
7 |     # And here's a comment with an unusual punctuation mark: ᜵
  |                                                              ^
8 |     ...
  |

RUF001 String contains ambiguous `𝐁` (MATHEMATICAL BOLD CAPITAL B). Did you mean `B` (LATIN CAPITAL LETTER B)?
  --> confusables.py:17:6
   |
17 | x = "𝐁ad string"
   |      ^
18 | x = "−"
   |

RUF001 String contains ambiguous `α` (GREEK SMALL LETTER ALPHA). Did you mean `a` (LATIN SMALL LETTER A)?
  --> confusables.py:26:10
   |
24 | # The first word should be ignored, while the second should be included, since it
25 | # contains ASCII.
26 | x = "βα Bαd"
   |          ^
27 |
28 | # The two characters should be flagged here. The first character is a "word"
   |

RUF001 String contains ambiguous `Р` (CYRILLIC CAPITAL LETTER ER). Did you mean `P` (LATIN CAPITAL LETTER P)?
  --> confusables.py:31:6
   |
29 | # consisting of a single ambiguous character, while the second character is a "word
30 | # boundary" (whitespace) that it itself ambiguous.
31 | x = "Р усский"
   |      ^
32 |
33 | # Same test cases as above but using f-strings instead:
   |

RUF001 String contains ambiguous ` ` (EN QUAD). Did you mean ` ` (SPACE)?
  --> confusables.py:31:7
   |
29 | # consisting of a single ambiguous character, while the second character is a "word
30 | # boundary" (whitespace) that it itself ambiguous.
31 | x = "Р усский"
   |       ^
32 |
33 | # Same test cases as above but using f-strings instead:
   |

RUF001 String contains ambiguous `𝐁` (MATHEMATICAL BOLD CAPITAL B). Did you mean `B` (LATIN CAPITAL LETTER B)?
  --> confusables.py:34:7
   |
33 | # Same test cases as above but using f-strings instead:
34 | x = f"𝐁ad string"
   |       ^
35 | x = f"−"
36 | x = f"Русский"
   |

RUF001 String contains ambiguous `α` (GREEK SMALL LETTER ALPHA). Did you mean `a` (LATIN SMALL LETTER A)?
  --> confusables.py:37:11
   |
35 | x = f"−"
36 | x = f"Русский"
37 | x = f"βα Bαd"
   |           ^
38 | x = f"Р усский"
   |

RUF001 String contains ambiguous `Р` (CYRILLIC CAPITAL LETTER ER). Did you mean `P` (LATIN CAPITAL LETTER P)?
  --> confusables.py:38:7
   |
36 | x = f"Русский"
37 | x = f"βα Bαd"
38 | x = f"Р усский"
   |       ^
39 |
40 | # Nested f-strings
   |

RUF001 String contains ambiguous ` ` (EN QUAD). Did you mean ` ` (SPACE)?
  --> confusables.py:38:8
   |
36 | x = f"Русский"
37 | x = f"βα Bαd"
38 | x = f"Р усский"
   |        ^
39 |
40 | # Nested f-strings
   |

RUF001 String contains ambiguous `𝐁` (MATHEMATICAL BOLD CAPITAL B). Did you mean `B` (LATIN CAPITAL LETTER B)?
  --> confusables.py:41:7
   |
40 | # Nested f-strings
41 | x = f"𝐁ad string {f" {f"Р усский"}"}"
   |       ^
42 |
43 | # Comments inside f-strings
   |

RUF001 String contains ambiguous ` ` (EN QUAD). Did you mean ` ` (SPACE)?
  --> confusables.py:41:21
   |
40 | # Nested f-strings
41 | x = f"𝐁ad string {f" {f"Р усский"}"}"
   |                     ^
42 |
43 | # Comments inside f-strings
   |

RUF001 String contains ambiguous `Р` (CYRILLIC CAPITAL LETTER ER). Did you mean `P` (LATIN CAPITAL LETTER P)?
  --> confusables.py:41:25
   |
40 | # Nested f-strings
41 | x = f"𝐁ad string {f" {f"Р усский"}"}"
   |                         ^
42 |
43 | # Comments inside f-strings
   |

RUF001 String contains ambiguous ` ` (EN QUAD). Did you mean ` ` (SPACE)?
  --> confusables.py:41:26
   |
40 | # Nested f-strings
41 | x = f"𝐁ad string {f" {f"Р усский"}"}"
   |                          ^
42 |
43 | # Comments inside f-strings
   |

RUF003 Comment contains ambiguous `）` (FULLWIDTH RIGHT PARENTHESIS). Did you mean `)` (RIGHT PARENTHESIS)?
  --> confusables.py:44:68
   |
43 | # Comments inside f-strings
44 | x = f"string { # And here's a comment with an unusual parenthesis: ）
   |                                                                    ^^
45 | # And here's a comment with a greek alpha: ∗
46 | foo # And here's a comment with an unusual punctuation mark: ᜵
   |

RUF003 Comment contains ambiguous `᜵` (PHILIPPINE SINGLE PUNCTUATION). Did you mean `/` (SOLIDUS)?
  --> confusables.py:46:62
   |
44 | x = f"string { # And here's a comment with an unusual parenthesis: ）
45 | # And here's a comment with a greek alpha: ∗
46 | foo # And here's a comment with an unusual punctuation mark: ᜵
   |                                                              ^
47 | }"
   |

RUF001 String contains ambiguous `𝐁` (MATHEMATICAL BOLD CAPITAL B). Did you mean `B` (LATIN CAPITAL LETTER B)?
  --> confusables.py:58:6
   |
57 | # Implicit string concatenation
58 | x = "𝐁ad" f"𝐁ad string"
   |      ^
59 |
60 | from typing import Literal
   |

RUF001 String contains ambiguous `𝐁` (MATHEMATICAL BOLD CAPITAL B). Did you mean `B` (LATIN CAPITAL LETTER B)?
  --> confusables.py:58:13
   |
57 | # Implicit string concatenation
58 | x = "𝐁ad" f"𝐁ad string"
   |             ^
59 |
60 | from typing import Literal
   |

RUF001 String contains ambiguous `ﮨ` (ARABIC LETTER HEH GOAL INITIAL FORM). Did you mean `o` (LATIN SMALL LETTER O)?
  --> confusables.py:61:20
   |
60 | from typing import Literal
61 | x: '''"""'Literal["ﮨ"]'"""'''
   |                    ^
   |
