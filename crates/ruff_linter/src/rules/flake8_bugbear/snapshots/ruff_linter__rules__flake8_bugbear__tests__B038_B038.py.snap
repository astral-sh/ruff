---
source: crates/ruff_linter/src/rules/flake8_bugbear/mod.rs
---
B038.py:5:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
  |
3 |     print(elem)
4 |     if elem % 2 == 0:
5 |         some_list.remove(elem)  # should error
  |         ^^^^^^^^^^^^^^^^ B038
6 | 
7 | some_list = [1, 2, 3]
  |

B038.py:20:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
18 |     print(elem)
19 |     if elem % 2 == 0:
20 |         del some_list[2]  # should error
   |         ^^^^^^^^^^^^^^^^ B038
21 |         del some_list
   |

B038.py:21:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
19 |     if elem % 2 == 0:
20 |         del some_list[2]  # should error
21 |         del some_list
   |         ^^^^^^^^^^^^^ B038
   |

B038.py:35:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
33 |     print(elem)
34 |     if elem % 2 == 0:
35 |         a.some_list.remove(elem)  # should error
   |         ^^^^^^^^^^^^^^^^^^ B038
36 | 
37 | a = A((1, 2, 3))
   |

B038.py:41:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
39 |     print(elem)
40 |     if elem % 2 == 0:
41 |         del a.some_list[2]  # should error
   |         ^^^^^^^^^^^^^^^^^^ B038
   |

B038.py:49:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
47 |     if elem == 2:
48 |         found_idx = some_list.index(elem)  # should not error
49 |         some_list.append(elem)  # should error
   |         ^^^^^^^^^^^^^^^^ B038
50 |         some_list.sort()  # should error
51 |         some_list.reverse()  # should error
   |

B038.py:50:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
48 |         found_idx = some_list.index(elem)  # should not error
49 |         some_list.append(elem)  # should error
50 |         some_list.sort()  # should error
   |         ^^^^^^^^^^^^^^ B038
51 |         some_list.reverse()  # should error
52 |         some_list.clear()  # should error
   |

B038.py:51:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
49 |         some_list.append(elem)  # should error
50 |         some_list.sort()  # should error
51 |         some_list.reverse()  # should error
   |         ^^^^^^^^^^^^^^^^^ B038
52 |         some_list.clear()  # should error
53 |         some_list.extend([1, 2])  # should error
   |

B038.py:52:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
50 |         some_list.sort()  # should error
51 |         some_list.reverse()  # should error
52 |         some_list.clear()  # should error
   |         ^^^^^^^^^^^^^^^ B038
53 |         some_list.extend([1, 2])  # should error
54 |         some_list.insert(1, 1)  # should error
   |

B038.py:53:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
51 |         some_list.reverse()  # should error
52 |         some_list.clear()  # should error
53 |         some_list.extend([1, 2])  # should error
   |         ^^^^^^^^^^^^^^^^ B038
54 |         some_list.insert(1, 1)  # should error
55 |         some_list.pop(1)  # should error
   |

B038.py:54:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
52 |         some_list.clear()  # should error
53 |         some_list.extend([1, 2])  # should error
54 |         some_list.insert(1, 1)  # should error
   |         ^^^^^^^^^^^^^^^^ B038
55 |         some_list.pop(1)  # should error
56 |         some_list.pop()  # should error
   |

B038.py:55:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
53 |         some_list.extend([1, 2])  # should error
54 |         some_list.insert(1, 1)  # should error
55 |         some_list.pop(1)  # should error
   |         ^^^^^^^^^^^^^ B038
56 |         some_list.pop()  # should error
57 |         some_list = 3  # should error
   |

B038.py:56:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
54 |         some_list.insert(1, 1)  # should error
55 |         some_list.pop(1)  # should error
56 |         some_list.pop()  # should error
   |         ^^^^^^^^^^^^^ B038
57 |         some_list = 3  # should error
58 |         break
   |

B038.py:66:9: B038 editing a loop's mutable iterable often leads to unexpected results/bugs
   |
64 |     if mydicts.get("a", ""):
65 |         print(mydict["foo"])  # should not error
66 |         mydicts.popitem()  # should error
   |         ^^^^^^^^^^^^^^^ B038
   |


