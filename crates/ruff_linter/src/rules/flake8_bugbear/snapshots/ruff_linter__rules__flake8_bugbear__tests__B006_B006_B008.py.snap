---
source: crates/ruff_linter/src/rules/flake8_bugbear/mod.rs
---
B006_B008.py:63:25: B006 [*] Do not use mutable data structures for argument defaults
   |
63 | def this_is_wrong(value=[1, 2, 3]):
   |                         ^^^^^^^^^ B006
64 |     ...
   |
   = help: Replace with `None`; initialize within function


B006_B008.py:67:30: B006 [*] Do not use mutable data structures for argument defaults
   |
67 | def this_is_also_wrong(value={}):
   |                              ^^ B006
68 |     ...
   |
   = help: Replace with `None`; initialize within function


B006_B008.py:73:52: B006 [*] Do not use mutable data structures for argument defaults
   |
71 | class Foo:
72 |     @staticmethod
73 |     def this_is_also_wrong_and_more_indented(value={}):
   |                                                    ^^ B006
74 |         pass
   |
   = help: Replace with `None`; initialize within function


B006_B008.py:77:31: B006 [*] Do not use mutable data structures for argument defaults
   |
77 |   def multiline_arg_wrong(value={
   |  _______________________________^
78 | | 
79 | | }):
   | |_^ B006
80 |       ...
   |
   = help: Replace with `None`; initialize within function


B006_B008.py:82:36: B006 Do not use mutable data structures for argument defaults
   |
80 |     ...
81 | 
82 | def single_line_func_wrong(value = {}): ...
   |                                    ^^ B006
   |
   = help: Replace with `None`; initialize within function

B006_B008.py:85:20: B006 [*] Do not use mutable data structures for argument defaults
   |
85 | def and_this(value=set()):
   |                    ^^^^^ B006
86 |     ...
   |
   = help: Replace with `None`; initialize within function


B006_B008.py:89:20: B006 [*] Do not use mutable data structures for argument defaults
   |
89 | def this_too(value=collections.OrderedDict()):
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^ B006
90 |     ...
   |
   = help: Replace with `None`; initialize within function


B006_B008.py:93:32: B006 [*] Do not use mutable data structures for argument defaults
   |
93 | async def async_this_too(value=collections.defaultdict()):
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^ B006
94 |     ...
   |
   = help: Replace with `None`; initialize within function


B006_B008.py:97:26: B006 [*] Do not use mutable data structures for argument defaults
   |
97 | def dont_forget_me(value=collections.deque()):
   |                          ^^^^^^^^^^^^^^^^^^^ B006
98 |     ...
   |
   = help: Replace with `None`; initialize within function


B006_B008.py:102:46: B006 [*] Do not use mutable data structures for argument defaults
    |
101 | # N.B. we're also flagging the function call in the comprehension
102 | def list_comprehension_also_not_okay(default=[i**2 for i in range(3)]):
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^ B006
103 |     pass
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:106:46: B006 [*] Do not use mutable data structures for argument defaults
    |
106 | def dict_comprehension_also_not_okay(default={i: i**2 for i in range(3)}):
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ B006
107 |     pass
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:110:45: B006 [*] Do not use mutable data structures for argument defaults
    |
110 | def set_comprehension_also_not_okay(default={i**2 for i in range(3)}):
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ B006
111 |     pass
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:114:33: B006 [*] Do not use mutable data structures for argument defaults
    |
114 | def kwonlyargs_mutable(*, value=[]):
    |                                 ^^ B006
115 |     ...
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:239:20: B006 [*] Do not use mutable data structures for argument defaults
    |
237 | # B006 and B008
238 | # We should handle arbitrary nesting of these B008.
239 | def nested_combo(a=[float(3), dt.datetime.now()]):
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B006
240 |     pass
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:276:27: B006 [*] Do not use mutable data structures for argument defaults
    |
275 | def mutable_annotations(
276 |     a: list[int] | None = [],
    |                           ^^ B006
277 |     b: Optional[Dict[int, int]] = {},
278 |     c: Annotated[Union[Set[str], abc.Sized], "annotation"] = set(),
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:277:35: B006 [*] Do not use mutable data structures for argument defaults
    |
275 | def mutable_annotations(
276 |     a: list[int] | None = [],
277 |     b: Optional[Dict[int, int]] = {},
    |                                   ^^ B006
278 |     c: Annotated[Union[Set[str], abc.Sized], "annotation"] = set(),
279 |     d: typing_extensions.Annotated[Union[Set[str], abc.Sized], "annotation"] = set(),
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:278:62: B006 [*] Do not use mutable data structures for argument defaults
    |
276 |     a: list[int] | None = [],
277 |     b: Optional[Dict[int, int]] = {},
278 |     c: Annotated[Union[Set[str], abc.Sized], "annotation"] = set(),
    |                                                              ^^^^^ B006
279 |     d: typing_extensions.Annotated[Union[Set[str], abc.Sized], "annotation"] = set(),
280 | ):
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:279:80: B006 [*] Do not use mutable data structures for argument defaults
    |
277 |     b: Optional[Dict[int, int]] = {},
278 |     c: Annotated[Union[Set[str], abc.Sized], "annotation"] = set(),
279 |     d: typing_extensions.Annotated[Union[Set[str], abc.Sized], "annotation"] = set(),
    |                                                                                ^^^^^ B006
280 | ):
281 |     pass
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:284:52: B006 [*] Do not use mutable data structures for argument defaults
    |
284 | def single_line_func_wrong(value: dict[str, str] = {}):
    |                                                    ^^ B006
285 |     """Docstring"""
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:288:52: B006 [*] Do not use mutable data structures for argument defaults
    |
288 | def single_line_func_wrong(value: dict[str, str] = {}):
    |                                                    ^^ B006
289 |     """Docstring"""
290 |     ...
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:293:52: B006 [*] Do not use mutable data structures for argument defaults
    |
293 | def single_line_func_wrong(value: dict[str, str] = {}):
    |                                                    ^^ B006
294 |     """Docstring"""; ...
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:297:52: B006 [*] Do not use mutable data structures for argument defaults
    |
297 | def single_line_func_wrong(value: dict[str, str] = {}):
    |                                                    ^^ B006
298 |     """Docstring"""; \
299 |         ...
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:302:52: B006 [*] Do not use mutable data structures for argument defaults
    |
302 |   def single_line_func_wrong(value: dict[str, str] = {
    |  ____________________________________________________^
303 | |     # This is a comment
304 | | }):
    | |_^ B006
305 |       """Docstring"""
    |
    = help: Replace with `None`; initialize within function


B006_B008.py:308:52: B006 Do not use mutable data structures for argument defaults
    |
308 | def single_line_func_wrong(value: dict[str, str] = {}) \
    |                                                    ^^ B006
309 |     : \
310 |     """Docstring"""
    |
    = help: Replace with `None`; initialize within function

B006_B008.py:313:52: B006 [*] Do not use mutable data structures for argument defaults
    |
313 | def single_line_func_wrong(value: dict[str, str] = {}):
    |                                                    ^^ B006
314 |     """Docstring without newline"""
    |
    = help: Replace with `None`; initialize within function
