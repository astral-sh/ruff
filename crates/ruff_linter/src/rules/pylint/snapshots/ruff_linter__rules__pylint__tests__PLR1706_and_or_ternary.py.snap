---
source: crates/ruff_linter/src/rules/pylint/mod.rs
---
and_or_ternary.py:46:1: PLR1706 [*] Consider using if-else expression (`'a' if 1 < 2 else 'b'`)
   |
44 | # Errors
45 | 
46 | 1<2 and 'a' or 'b'
   | ^^^^^^^^^^^^^^^^^^ PLR1706
47 | 
48 | (lambda x: x+1) and 'a' or 'b'
   |
   = help: Convert to if-else expression

ℹ Suggested fix
43 43 | 
44 44 | # Errors
45 45 | 
46    |-1<2 and 'a' or 'b'
   46 |+'a' if 1 < 2 else 'b'
47 47 | 
48 48 | (lambda x: x+1) and 'a' or 'b'
49 49 | 

and_or_ternary.py:48:1: PLR1706 [*] Consider using if-else expression (`'a' if (lambda x: x + 1) else 'b'`)
   |
46 | 1<2 and 'a' or 'b'
47 | 
48 | (lambda x: x+1) and 'a' or 'b'
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
49 | 
50 | 'a' and (lambda x: x+1) or 'orange'
   |
   = help: Convert to if-else expression

ℹ Suggested fix
45 45 | 
46 46 | 1<2 and 'a' or 'b'
47 47 | 
48    |-(lambda x: x+1) and 'a' or 'b'
   48 |+'a' if (lambda x: x + 1) else 'b'
49 49 | 
50 50 | 'a' and (lambda x: x+1) or 'orange'
51 51 | 

and_or_ternary.py:50:1: PLR1706 [*] Consider using if-else expression (`(lambda x: x + 1) if 'a' else 'orange'`)
   |
48 | (lambda x: x+1) and 'a' or 'b'
49 | 
50 | 'a' and (lambda x: x+1) or 'orange'
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
51 | 
52 | val = '#0000FF'
   |
   = help: Convert to if-else expression

ℹ Suggested fix
47 47 | 
48 48 | (lambda x: x+1) and 'a' or 'b'
49 49 | 
50    |-'a' and (lambda x: x+1) or 'orange'
   50 |+(lambda x: x + 1) if 'a' else 'orange'
51 51 | 
52 52 | val = '#0000FF'
53 53 | (len(val) == 7 and val[0] == "#") or val in {'green'}

and_or_ternary.py:53:1: PLR1706 [*] Consider using if-else expression
   |
52 | val = '#0000FF'
53 | (len(val) == 7 and val[0] == "#") or val in {'green'}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
54 | 
55 | marker = 'marker'
   |
   = help: Convert to if-else expression

ℹ Suggested fix
50 50 | 'a' and (lambda x: x+1) or 'orange'
51 51 | 
52 52 | val = '#0000FF'
53    |-(len(val) == 7 and val[0] == "#") or val in {'green'}
   53 |+val[0] == '#' if len(val) == 7 else val in {'green'}
54 54 | 
55 55 | marker = 'marker'
56 56 | isinstance(marker, dict) and 'field' in marker or marker in {}

and_or_ternary.py:56:1: PLR1706 [*] Consider using if-else expression
   |
55 | marker = 'marker'
56 | isinstance(marker, dict) and 'field' in marker or marker in {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
57 | 
58 | def has_oranges(oranges, apples=None) -> bool:
   |
   = help: Convert to if-else expression

ℹ Suggested fix
53 53 | (len(val) == 7 and val[0] == "#") or val in {'green'}
54 54 | 
55 55 | marker = 'marker'
56    |-isinstance(marker, dict) and 'field' in marker or marker in {}
   56 |+'field' in marker if isinstance(marker, dict) else marker in {}
57 57 | 
58 58 | def has_oranges(oranges, apples=None) -> bool:
59 59 |     return apples and False or oranges

and_or_ternary.py:59:12: PLR1706 [*] Consider using if-else expression (`False if apples else oranges`)
   |
58 | def has_oranges(oranges, apples=None) -> bool:
59 |     return apples and False or oranges
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
60 | 
61 | [x for x in l if a and b or c]
   |
   = help: Convert to if-else expression

ℹ Suggested fix
56 56 | isinstance(marker, dict) and 'field' in marker or marker in {}
57 57 | 
58 58 | def has_oranges(oranges, apples=None) -> bool:
59    |-    return apples and False or oranges
   59 |+    return False if apples else oranges
60 60 | 
61 61 | [x for x in l if a and b or c]
62 62 | 

and_or_ternary.py:61:18: PLR1706 [*] Consider using if-else expression (`(b if a else c)`)
   |
59 |     return apples and False or oranges
60 | 
61 | [x for x in l if a and b or c]
   |                  ^^^^^^^^^^^^ PLR1706
62 | 
63 | {x: y for x in l if a and b or c}
   |
   = help: Convert to if-else expression

ℹ Suggested fix
58 58 | def has_oranges(oranges, apples=None) -> bool:
59 59 |     return apples and False or oranges
60 60 | 
61    |-[x for x in l if a and b or c]
   61 |+[x for x in l if (b if a else c)]
62 62 | 
63 63 | {x: y for x in l if a and b or c}
64 64 | 

and_or_ternary.py:63:21: PLR1706 [*] Consider using if-else expression (`(b if a else c)`)
   |
61 | [x for x in l if a and b or c]
62 | 
63 | {x: y for x in l if a and b or c}
   |                     ^^^^^^^^^^^^ PLR1706
64 | 
65 | {x for x in l if a and b or c}
   |
   = help: Convert to if-else expression

ℹ Suggested fix
60 60 | 
61 61 | [x for x in l if a and b or c]
62 62 | 
63    |-{x: y for x in l if a and b or c}
   63 |+{x: y for x in l if (b if a else c)}
64 64 | 
65 65 | {x for x in l if a and b or c}
66 66 | 

and_or_ternary.py:65:18: PLR1706 [*] Consider using if-else expression (`(b if a else c)`)
   |
63 | {x: y for x in l if a and b or c}
64 | 
65 | {x for x in l if a and b or c}
   |                  ^^^^^^^^^^^^ PLR1706
66 | 
67 | new_list = [
   |
   = help: Convert to if-else expression

ℹ Suggested fix
62 62 | 
63 63 | {x: y for x in l if a and b or c}
64 64 | 
65    |-{x for x in l if a and b or c}
   65 |+{x for x in l if (b if a else c)}
66 66 | 
67 67 | new_list = [
68 68 |     x

and_or_ternary.py:70:8: PLR1706 [*] Consider using if-else expression (`(b if a else c)`)
   |
68 |     x
69 |     for sublist in all_lists
70 |     if a and b or c
   |        ^^^^^^^^^^^^ PLR1706
71 |     for x in sublist
72 |     if (isinstance(operator, list) and x in operator) or x != operator
   |
   = help: Convert to if-else expression

ℹ Suggested fix
67 67 | new_list = [
68 68 |     x
69 69 |     for sublist in all_lists
70    |-    if a and b or c
   70 |+    if (b if a else c)
71 71 |     for x in sublist
72 72 |     if (isinstance(operator, list) and x in operator) or x != operator
73 73 | ]

and_or_ternary.py:72:8: PLR1706 [*] Consider using if-else expression
   |
70 |     if a and b or c
71 |     for x in sublist
72 |     if (isinstance(operator, list) and x in operator) or x != operator
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
73 | ]
   |
   = help: Convert to if-else expression

ℹ Suggested fix
69 69 |     for sublist in all_lists
70 70 |     if a and b or c
71 71 |     for x in sublist
72    |-    if (isinstance(operator, list) and x in operator) or x != operator
   72 |+    if (x in operator if isinstance(operator, list) else x != operator)
73 73 | ]


