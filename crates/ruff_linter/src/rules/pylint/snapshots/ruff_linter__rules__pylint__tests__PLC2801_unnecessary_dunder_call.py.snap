---
source: crates/ruff_linter/src/rules/pylint/mod.rs
---
unnecessary_dunder_call.py:4:7: PLC2801 [*] Unnecessary dunder call to `__add__`. Use `+` operator.
  |
3 | a = 2
4 | print((3.0).__add__(4.0))  # PLC2801
  |       ^^^^^^^^^^^^^^^^^^ PLC2801
5 | print((3.0).__sub__(4.0))  # PLC2801
6 | print((3.0).__mul__(4.0))  # PLC2801
  |
  = help: Use `+` operator

ℹ Safe fix
1 1 | from typing import Any
2 2 | 
3 3 | a = 2
4   |-print((3.0).__add__(4.0))  # PLC2801
  4 |+print(3.0 + 4.0)  # PLC2801
5 5 | print((3.0).__sub__(4.0))  # PLC2801
6 6 | print((3.0).__mul__(4.0))  # PLC2801
7 7 | print((3.0).__truediv__(4.0))  # PLC2801

unnecessary_dunder_call.py:5:7: PLC2801 [*] Unnecessary dunder call to `__sub__`. Use `-` operator.
  |
3 | a = 2
4 | print((3.0).__add__(4.0))  # PLC2801
5 | print((3.0).__sub__(4.0))  # PLC2801
  |       ^^^^^^^^^^^^^^^^^^ PLC2801
6 | print((3.0).__mul__(4.0))  # PLC2801
7 | print((3.0).__truediv__(4.0))  # PLC2801
  |
  = help: Use `-` operator

ℹ Safe fix
2 2 | 
3 3 | a = 2
4 4 | print((3.0).__add__(4.0))  # PLC2801
5   |-print((3.0).__sub__(4.0))  # PLC2801
  5 |+print(3.0 - 4.0)  # PLC2801
6 6 | print((3.0).__mul__(4.0))  # PLC2801
7 7 | print((3.0).__truediv__(4.0))  # PLC2801
8 8 | print((3.0).__floordiv__(4.0))  # PLC2801

unnecessary_dunder_call.py:6:7: PLC2801 [*] Unnecessary dunder call to `__mul__`. Use `*` operator.
  |
4 | print((3.0).__add__(4.0))  # PLC2801
5 | print((3.0).__sub__(4.0))  # PLC2801
6 | print((3.0).__mul__(4.0))  # PLC2801
  |       ^^^^^^^^^^^^^^^^^^ PLC2801
7 | print((3.0).__truediv__(4.0))  # PLC2801
8 | print((3.0).__floordiv__(4.0))  # PLC2801
  |
  = help: Use `*` operator

ℹ Safe fix
3 3 | a = 2
4 4 | print((3.0).__add__(4.0))  # PLC2801
5 5 | print((3.0).__sub__(4.0))  # PLC2801
6   |-print((3.0).__mul__(4.0))  # PLC2801
  6 |+print(3.0 * 4.0)  # PLC2801
7 7 | print((3.0).__truediv__(4.0))  # PLC2801
8 8 | print((3.0).__floordiv__(4.0))  # PLC2801
9 9 | print((3.0).__mod__(4.0))  # PLC2801

unnecessary_dunder_call.py:7:7: PLC2801 [*] Unnecessary dunder call to `__truediv__`. Use `/` operator.
  |
5 | print((3.0).__sub__(4.0))  # PLC2801
6 | print((3.0).__mul__(4.0))  # PLC2801
7 | print((3.0).__truediv__(4.0))  # PLC2801
  |       ^^^^^^^^^^^^^^^^^^^^^^ PLC2801
8 | print((3.0).__floordiv__(4.0))  # PLC2801
9 | print((3.0).__mod__(4.0))  # PLC2801
  |
  = help: Use `/` operator

ℹ Safe fix
4 4 | print((3.0).__add__(4.0))  # PLC2801
5 5 | print((3.0).__sub__(4.0))  # PLC2801
6 6 | print((3.0).__mul__(4.0))  # PLC2801
7   |-print((3.0).__truediv__(4.0))  # PLC2801
  7 |+print(3.0 / 4.0)  # PLC2801
8 8 | print((3.0).__floordiv__(4.0))  # PLC2801
9 9 | print((3.0).__mod__(4.0))  # PLC2801
10 10 | print((3.0).__eq__(4.0))  # PLC2801

unnecessary_dunder_call.py:8:7: PLC2801 [*] Unnecessary dunder call to `__floordiv__`. Use `//` operator.
   |
 6 | print((3.0).__mul__(4.0))  # PLC2801
 7 | print((3.0).__truediv__(4.0))  # PLC2801
 8 | print((3.0).__floordiv__(4.0))  # PLC2801
   |       ^^^^^^^^^^^^^^^^^^^^^^^ PLC2801
 9 | print((3.0).__mod__(4.0))  # PLC2801
10 | print((3.0).__eq__(4.0))  # PLC2801
   |
   = help: Use `//` operator

ℹ Safe fix
5 5 | print((3.0).__sub__(4.0))  # PLC2801
6 6 | print((3.0).__mul__(4.0))  # PLC2801
7 7 | print((3.0).__truediv__(4.0))  # PLC2801
8   |-print((3.0).__floordiv__(4.0))  # PLC2801
  8 |+print(3.0 // 4.0)  # PLC2801
9 9 | print((3.0).__mod__(4.0))  # PLC2801
10 10 | print((3.0).__eq__(4.0))  # PLC2801
11 11 | print((3.0).__ne__(4.0))  # PLC2801

unnecessary_dunder_call.py:9:7: PLC2801 [*] Unnecessary dunder call to `__mod__`. Use `%` operator.
   |
 7 | print((3.0).__truediv__(4.0))  # PLC2801
 8 | print((3.0).__floordiv__(4.0))  # PLC2801
 9 | print((3.0).__mod__(4.0))  # PLC2801
   |       ^^^^^^^^^^^^^^^^^^ PLC2801
10 | print((3.0).__eq__(4.0))  # PLC2801
11 | print((3.0).__ne__(4.0))  # PLC2801
   |
   = help: Use `%` operator

ℹ Safe fix
6  6  | print((3.0).__mul__(4.0))  # PLC2801
7  7  | print((3.0).__truediv__(4.0))  # PLC2801
8  8  | print((3.0).__floordiv__(4.0))  # PLC2801
9     |-print((3.0).__mod__(4.0))  # PLC2801
   9  |+print(3.0 % 4.0)  # PLC2801
10 10 | print((3.0).__eq__(4.0))  # PLC2801
11 11 | print((3.0).__ne__(4.0))  # PLC2801
12 12 | print((3.0).__lt__(4.0))  # PLC2801

unnecessary_dunder_call.py:10:7: PLC2801 [*] Unnecessary dunder call to `__eq__`. Use `==` operator.
   |
 8 | print((3.0).__floordiv__(4.0))  # PLC2801
 9 | print((3.0).__mod__(4.0))  # PLC2801
10 | print((3.0).__eq__(4.0))  # PLC2801
   |       ^^^^^^^^^^^^^^^^^ PLC2801
11 | print((3.0).__ne__(4.0))  # PLC2801
12 | print((3.0).__lt__(4.0))  # PLC2801
   |
   = help: Use `==` operator

ℹ Safe fix
7  7  | print((3.0).__truediv__(4.0))  # PLC2801
8  8  | print((3.0).__floordiv__(4.0))  # PLC2801
9  9  | print((3.0).__mod__(4.0))  # PLC2801
10    |-print((3.0).__eq__(4.0))  # PLC2801
   10 |+print(3.0 == 4.0)  # PLC2801
11 11 | print((3.0).__ne__(4.0))  # PLC2801
12 12 | print((3.0).__lt__(4.0))  # PLC2801
13 13 | print((3.0).__le__(4.0))  # PLC2801

unnecessary_dunder_call.py:11:7: PLC2801 [*] Unnecessary dunder call to `__ne__`. Use `!=` operator.
   |
 9 | print((3.0).__mod__(4.0))  # PLC2801
10 | print((3.0).__eq__(4.0))  # PLC2801
11 | print((3.0).__ne__(4.0))  # PLC2801
   |       ^^^^^^^^^^^^^^^^^ PLC2801
12 | print((3.0).__lt__(4.0))  # PLC2801
13 | print((3.0).__le__(4.0))  # PLC2801
   |
   = help: Use `!=` operator

ℹ Safe fix
8  8  | print((3.0).__floordiv__(4.0))  # PLC2801
9  9  | print((3.0).__mod__(4.0))  # PLC2801
10 10 | print((3.0).__eq__(4.0))  # PLC2801
11    |-print((3.0).__ne__(4.0))  # PLC2801
   11 |+print(3.0 != 4.0)  # PLC2801
12 12 | print((3.0).__lt__(4.0))  # PLC2801
13 13 | print((3.0).__le__(4.0))  # PLC2801
14 14 | print((3.0).__gt__(4.0))  # PLC2801

unnecessary_dunder_call.py:12:7: PLC2801 [*] Unnecessary dunder call to `__lt__`. Use `<` operator.
   |
10 | print((3.0).__eq__(4.0))  # PLC2801
11 | print((3.0).__ne__(4.0))  # PLC2801
12 | print((3.0).__lt__(4.0))  # PLC2801
   |       ^^^^^^^^^^^^^^^^^ PLC2801
13 | print((3.0).__le__(4.0))  # PLC2801
14 | print((3.0).__gt__(4.0))  # PLC2801
   |
   = help: Use `<` operator

ℹ Safe fix
9  9  | print((3.0).__mod__(4.0))  # PLC2801
10 10 | print((3.0).__eq__(4.0))  # PLC2801
11 11 | print((3.0).__ne__(4.0))  # PLC2801
12    |-print((3.0).__lt__(4.0))  # PLC2801
   12 |+print(3.0 < 4.0)  # PLC2801
13 13 | print((3.0).__le__(4.0))  # PLC2801
14 14 | print((3.0).__gt__(4.0))  # PLC2801
15 15 | print((3.0).__ge__(4.0))  # PLC2801

unnecessary_dunder_call.py:13:7: PLC2801 [*] Unnecessary dunder call to `__le__`. Use `<=` operator.
   |
11 | print((3.0).__ne__(4.0))  # PLC2801
12 | print((3.0).__lt__(4.0))  # PLC2801
13 | print((3.0).__le__(4.0))  # PLC2801
   |       ^^^^^^^^^^^^^^^^^ PLC2801
14 | print((3.0).__gt__(4.0))  # PLC2801
15 | print((3.0).__ge__(4.0))  # PLC2801
   |
   = help: Use `<=` operator

ℹ Safe fix
10 10 | print((3.0).__eq__(4.0))  # PLC2801
11 11 | print((3.0).__ne__(4.0))  # PLC2801
12 12 | print((3.0).__lt__(4.0))  # PLC2801
13    |-print((3.0).__le__(4.0))  # PLC2801
   13 |+print(3.0 <= 4.0)  # PLC2801
14 14 | print((3.0).__gt__(4.0))  # PLC2801
15 15 | print((3.0).__ge__(4.0))  # PLC2801
16 16 | print((3.0).__str__())  # PLC2801

unnecessary_dunder_call.py:14:7: PLC2801 [*] Unnecessary dunder call to `__gt__`. Use `>` operator.
   |
12 | print((3.0).__lt__(4.0))  # PLC2801
13 | print((3.0).__le__(4.0))  # PLC2801
14 | print((3.0).__gt__(4.0))  # PLC2801
   |       ^^^^^^^^^^^^^^^^^ PLC2801
15 | print((3.0).__ge__(4.0))  # PLC2801
16 | print((3.0).__str__())  # PLC2801
   |
   = help: Use `>` operator

ℹ Safe fix
11 11 | print((3.0).__ne__(4.0))  # PLC2801
12 12 | print((3.0).__lt__(4.0))  # PLC2801
13 13 | print((3.0).__le__(4.0))  # PLC2801
14    |-print((3.0).__gt__(4.0))  # PLC2801
   14 |+print(3.0 > 4.0)  # PLC2801
15 15 | print((3.0).__ge__(4.0))  # PLC2801
16 16 | print((3.0).__str__())  # PLC2801
17 17 | print((3.0).__repr__())  # PLC2801

unnecessary_dunder_call.py:15:7: PLC2801 [*] Unnecessary dunder call to `__ge__`. Use `>=` operator.
   |
13 | print((3.0).__le__(4.0))  # PLC2801
14 | print((3.0).__gt__(4.0))  # PLC2801
15 | print((3.0).__ge__(4.0))  # PLC2801
   |       ^^^^^^^^^^^^^^^^^ PLC2801
16 | print((3.0).__str__())  # PLC2801
17 | print((3.0).__repr__())  # PLC2801
   |
   = help: Use `>=` operator

ℹ Safe fix
12 12 | print((3.0).__lt__(4.0))  # PLC2801
13 13 | print((3.0).__le__(4.0))  # PLC2801
14 14 | print((3.0).__gt__(4.0))  # PLC2801
15    |-print((3.0).__ge__(4.0))  # PLC2801
   15 |+print(3.0 >= 4.0)  # PLC2801
16 16 | print((3.0).__str__())  # PLC2801
17 17 | print((3.0).__repr__())  # PLC2801
18 18 | print([1, 2, 3].__len__())  # PLC2801

unnecessary_dunder_call.py:16:7: PLC2801 [*] Unnecessary dunder call to `__str__`. Use `str()` builtin.
   |
14 | print((3.0).__gt__(4.0))  # PLC2801
15 | print((3.0).__ge__(4.0))  # PLC2801
16 | print((3.0).__str__())  # PLC2801
   |       ^^^^^^^^^^^^^^^ PLC2801
17 | print((3.0).__repr__())  # PLC2801
18 | print([1, 2, 3].__len__())  # PLC2801
   |
   = help: Use `str()` builtin

ℹ Safe fix
13 13 | print((3.0).__le__(4.0))  # PLC2801
14 14 | print((3.0).__gt__(4.0))  # PLC2801
15 15 | print((3.0).__ge__(4.0))  # PLC2801
16    |-print((3.0).__str__())  # PLC2801
   16 |+print(str(3.0))  # PLC2801
17 17 | print((3.0).__repr__())  # PLC2801
18 18 | print([1, 2, 3].__len__())  # PLC2801
19 19 | print((1).__neg__())  # PLC2801

unnecessary_dunder_call.py:17:7: PLC2801 [*] Unnecessary dunder call to `__repr__`. Use `repr()` builtin.
   |
15 | print((3.0).__ge__(4.0))  # PLC2801
16 | print((3.0).__str__())  # PLC2801
17 | print((3.0).__repr__())  # PLC2801
   |       ^^^^^^^^^^^^^^^^ PLC2801
18 | print([1, 2, 3].__len__())  # PLC2801
19 | print((1).__neg__())  # PLC2801
   |
   = help: Use `repr()` builtin

ℹ Safe fix
14 14 | print((3.0).__gt__(4.0))  # PLC2801
15 15 | print((3.0).__ge__(4.0))  # PLC2801
16 16 | print((3.0).__str__())  # PLC2801
17    |-print((3.0).__repr__())  # PLC2801
   17 |+print(repr(3.0))  # PLC2801
18 18 | print([1, 2, 3].__len__())  # PLC2801
19 19 | print((1).__neg__())  # PLC2801
20 20 | print(-a.__sub__(1))  # PLC2801

unnecessary_dunder_call.py:18:7: PLC2801 [*] Unnecessary dunder call to `__len__`. Use `len()` builtin.
   |
16 | print((3.0).__str__())  # PLC2801
17 | print((3.0).__repr__())  # PLC2801
18 | print([1, 2, 3].__len__())  # PLC2801
   |       ^^^^^^^^^^^^^^^^^^^ PLC2801
19 | print((1).__neg__())  # PLC2801
20 | print(-a.__sub__(1))  # PLC2801
   |
   = help: Use `len()` builtin

ℹ Safe fix
15 15 | print((3.0).__ge__(4.0))  # PLC2801
16 16 | print((3.0).__str__())  # PLC2801
17 17 | print((3.0).__repr__())  # PLC2801
18    |-print([1, 2, 3].__len__())  # PLC2801
   18 |+print(len([1, 2, 3]))  # PLC2801
19 19 | print((1).__neg__())  # PLC2801
20 20 | print(-a.__sub__(1))  # PLC2801
21 21 | print(-(a).__sub__(1))  # PLC2801

unnecessary_dunder_call.py:19:7: PLC2801 Unnecessary dunder call to `__neg__`. Multiply by -1 instead.
   |
17 | print((3.0).__repr__())  # PLC2801
18 | print([1, 2, 3].__len__())  # PLC2801
19 | print((1).__neg__())  # PLC2801
   |       ^^^^^^^^^^^^^ PLC2801
20 | print(-a.__sub__(1))  # PLC2801
21 | print(-(a).__sub__(1))  # PLC2801
   |
   = help: Multiply by -1 instead

unnecessary_dunder_call.py:20:8: PLC2801 [*] Unnecessary dunder call to `__sub__`. Use `-` operator.
   |
18 | print([1, 2, 3].__len__())  # PLC2801
19 | print((1).__neg__())  # PLC2801
20 | print(-a.__sub__(1))  # PLC2801
   |        ^^^^^^^^^^^^ PLC2801
21 | print(-(a).__sub__(1))  # PLC2801
22 | print(-(-a.__sub__(1)))  # PLC2801
   |
   = help: Use `-` operator

ℹ Safe fix
17 17 | print((3.0).__repr__())  # PLC2801
18 18 | print([1, 2, 3].__len__())  # PLC2801
19 19 | print((1).__neg__())  # PLC2801
20    |-print(-a.__sub__(1))  # PLC2801
   20 |+print(-(a - 1))  # PLC2801
21 21 | print(-(a).__sub__(1))  # PLC2801
22 22 | print(-(-a.__sub__(1)))  # PLC2801
23 23 | print((5 - a).__sub__(1))  # PLC2801

unnecessary_dunder_call.py:21:8: PLC2801 [*] Unnecessary dunder call to `__sub__`. Use `-` operator.
   |
19 | print((1).__neg__())  # PLC2801
20 | print(-a.__sub__(1))  # PLC2801
21 | print(-(a).__sub__(1))  # PLC2801
   |        ^^^^^^^^^^^^^^ PLC2801
22 | print(-(-a.__sub__(1)))  # PLC2801
23 | print((5 - a).__sub__(1))  # PLC2801
   |
   = help: Use `-` operator

ℹ Safe fix
18 18 | print([1, 2, 3].__len__())  # PLC2801
19 19 | print((1).__neg__())  # PLC2801
20 20 | print(-a.__sub__(1))  # PLC2801
21    |-print(-(a).__sub__(1))  # PLC2801
   21 |+print(-(a - 1))  # PLC2801
22 22 | print(-(-a.__sub__(1)))  # PLC2801
23 23 | print((5 - a).__sub__(1))  # PLC2801
24 24 | print(-(5 - a).__sub__(1))  # PLC2801

unnecessary_dunder_call.py:22:10: PLC2801 [*] Unnecessary dunder call to `__sub__`. Use `-` operator.
   |
20 | print(-a.__sub__(1))  # PLC2801
21 | print(-(a).__sub__(1))  # PLC2801
22 | print(-(-a.__sub__(1)))  # PLC2801
   |          ^^^^^^^^^^^^ PLC2801
23 | print((5 - a).__sub__(1))  # PLC2801
24 | print(-(5 - a).__sub__(1))  # PLC2801
   |
   = help: Use `-` operator

ℹ Safe fix
19 19 | print((1).__neg__())  # PLC2801
20 20 | print(-a.__sub__(1))  # PLC2801
21 21 | print(-(a).__sub__(1))  # PLC2801
22    |-print(-(-a.__sub__(1)))  # PLC2801
   22 |+print(-(-(a - 1)))  # PLC2801
23 23 | print((5 - a).__sub__(1))  # PLC2801
24 24 | print(-(5 - a).__sub__(1))  # PLC2801
25 25 | print(-(-5 - a).__sub__(1))  # PLC2801

unnecessary_dunder_call.py:23:7: PLC2801 [*] Unnecessary dunder call to `__sub__`. Use `-` operator.
   |
21 | print(-(a).__sub__(1))  # PLC2801
22 | print(-(-a.__sub__(1)))  # PLC2801
23 | print((5 - a).__sub__(1))  # PLC2801
   |       ^^^^^^^^^^^^^^^^^^ PLC2801
24 | print(-(5 - a).__sub__(1))  # PLC2801
25 | print(-(-5 - a).__sub__(1))  # PLC2801
   |
   = help: Use `-` operator

ℹ Safe fix
20 20 | print(-a.__sub__(1))  # PLC2801
21 21 | print(-(a).__sub__(1))  # PLC2801
22 22 | print(-(-a.__sub__(1)))  # PLC2801
23    |-print((5 - a).__sub__(1))  # PLC2801
   23 |+print(5 - a - 1)  # PLC2801
24 24 | print(-(5 - a).__sub__(1))  # PLC2801
25 25 | print(-(-5 - a).__sub__(1))  # PLC2801
26 26 | print(+-+-+-a.__sub__(1))  # PLC2801

unnecessary_dunder_call.py:24:8: PLC2801 [*] Unnecessary dunder call to `__sub__`. Use `-` operator.
   |
22 | print(-(-a.__sub__(1)))  # PLC2801
23 | print((5 - a).__sub__(1))  # PLC2801
24 | print(-(5 - a).__sub__(1))  # PLC2801
   |        ^^^^^^^^^^^^^^^^^^ PLC2801
25 | print(-(-5 - a).__sub__(1))  # PLC2801
26 | print(+-+-+-a.__sub__(1))  # PLC2801
   |
   = help: Use `-` operator

ℹ Safe fix
21 21 | print(-(a).__sub__(1))  # PLC2801
22 22 | print(-(-a.__sub__(1)))  # PLC2801
23 23 | print((5 - a).__sub__(1))  # PLC2801
24    |-print(-(5 - a).__sub__(1))  # PLC2801
   24 |+print(-(5 - a - 1))  # PLC2801
25 25 | print(-(-5 - a).__sub__(1))  # PLC2801
26 26 | print(+-+-+-a.__sub__(1))  # PLC2801
27 27 | 

unnecessary_dunder_call.py:25:8: PLC2801 [*] Unnecessary dunder call to `__sub__`. Use `-` operator.
   |
23 | print((5 - a).__sub__(1))  # PLC2801
24 | print(-(5 - a).__sub__(1))  # PLC2801
25 | print(-(-5 - a).__sub__(1))  # PLC2801
   |        ^^^^^^^^^^^^^^^^^^^ PLC2801
26 | print(+-+-+-a.__sub__(1))  # PLC2801
   |
   = help: Use `-` operator

ℹ Safe fix
22 22 | print(-(-a.__sub__(1)))  # PLC2801
23 23 | print((5 - a).__sub__(1))  # PLC2801
24 24 | print(-(5 - a).__sub__(1))  # PLC2801
25    |-print(-(-5 - a).__sub__(1))  # PLC2801
   25 |+print(-(-5 - a - 1))  # PLC2801
26 26 | print(+-+-+-a.__sub__(1))  # PLC2801
27 27 | 
28 28 | 

unnecessary_dunder_call.py:26:13: PLC2801 [*] Unnecessary dunder call to `__sub__`. Use `-` operator.
   |
24 | print(-(5 - a).__sub__(1))  # PLC2801
25 | print(-(-5 - a).__sub__(1))  # PLC2801
26 | print(+-+-+-a.__sub__(1))  # PLC2801
   |             ^^^^^^^^^^^^ PLC2801
   |
   = help: Use `-` operator

ℹ Safe fix
23 23 | print((5 - a).__sub__(1))  # PLC2801
24 24 | print(-(5 - a).__sub__(1))  # PLC2801
25 25 | print(-(-5 - a).__sub__(1))  # PLC2801
26    |-print(+-+-+-a.__sub__(1))  # PLC2801
   26 |+print(+-+-+-(a - 1))  # PLC2801
27 27 | 
28 28 | 
29 29 | class Thing:

unnecessary_dunder_call.py:38:16: PLC2801 Unnecessary dunder call to `__getattribute__`. Access attribute directly or use getattr built-in function.
   |
37 |     def do_thing(self, item):
38 |         return object.__getattribute__(self, item)  # PLC2801
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLC2801
32 | 
33 |     def use_descriptor(self, item):
   |
   = help: Access attribute directly or use getattr built-in function


