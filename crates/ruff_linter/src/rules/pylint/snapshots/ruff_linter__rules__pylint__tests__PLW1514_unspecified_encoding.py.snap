---
source: crates/ruff_linter/src/rules/pylint/mod.rs
---
PLW1514 [*] `open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:8:1
   |
 7 | # Errors.
 8 | open("test.txt")
   | ^^^^
 9 | io.TextIOWrapper(io.FileIO("test.txt"))
10 | hugo.TextIOWrapper(hugo.FileIO("test.txt"))
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
5 5 | import codecs
6 6 | 
7 7 | # Errors.
8   |-open("test.txt")
  8 |+open("test.txt", encoding="utf-8")
9 9 | io.TextIOWrapper(io.FileIO("test.txt"))
10 10 | hugo.TextIOWrapper(hugo.FileIO("test.txt"))
11 11 | tempfile.NamedTemporaryFile("w")

PLW1514 [*] `io.TextIOWrapper` without explicit `encoding` argument
  --> unspecified_encoding.py:9:1
   |
 7 | # Errors.
 8 | open("test.txt")
 9 | io.TextIOWrapper(io.FileIO("test.txt"))
   | ^^^^^^^^^^^^^^^^
10 | hugo.TextIOWrapper(hugo.FileIO("test.txt"))
11 | tempfile.NamedTemporaryFile("w")
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
6  6  | 
7  7  | # Errors.
8  8  | open("test.txt")
9     |-io.TextIOWrapper(io.FileIO("test.txt"))
   9  |+io.TextIOWrapper(io.FileIO("test.txt"), encoding="utf-8")
10 10 | hugo.TextIOWrapper(hugo.FileIO("test.txt"))
11 11 | tempfile.NamedTemporaryFile("w")
12 12 | tempfile.TemporaryFile("w")

PLW1514 [*] `io.TextIOWrapper` without explicit `encoding` argument
  --> unspecified_encoding.py:10:1
   |
 8 | open("test.txt")
 9 | io.TextIOWrapper(io.FileIO("test.txt"))
10 | hugo.TextIOWrapper(hugo.FileIO("test.txt"))
   | ^^^^^^^^^^^^^^^^^^
11 | tempfile.NamedTemporaryFile("w")
12 | tempfile.TemporaryFile("w")
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
7  7  | # Errors.
8  8  | open("test.txt")
9  9  | io.TextIOWrapper(io.FileIO("test.txt"))
10    |-hugo.TextIOWrapper(hugo.FileIO("test.txt"))
   10 |+hugo.TextIOWrapper(hugo.FileIO("test.txt"), encoding="utf-8")
11 11 | tempfile.NamedTemporaryFile("w")
12 12 | tempfile.TemporaryFile("w")
13 13 | codecs.open("test.txt")

PLW1514 [*] `tempfile.NamedTemporaryFile` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:11:1
   |
 9 | io.TextIOWrapper(io.FileIO("test.txt"))
10 | hugo.TextIOWrapper(hugo.FileIO("test.txt"))
11 | tempfile.NamedTemporaryFile("w")
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
12 | tempfile.TemporaryFile("w")
13 | codecs.open("test.txt")
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
8  8  | open("test.txt")
9  9  | io.TextIOWrapper(io.FileIO("test.txt"))
10 10 | hugo.TextIOWrapper(hugo.FileIO("test.txt"))
11    |-tempfile.NamedTemporaryFile("w")
   11 |+tempfile.NamedTemporaryFile("w", encoding="utf-8")
12 12 | tempfile.TemporaryFile("w")
13 13 | codecs.open("test.txt")
14 14 | tempfile.SpooledTemporaryFile(0, "w")

PLW1514 [*] `tempfile.TemporaryFile` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:12:1
   |
10 | hugo.TextIOWrapper(hugo.FileIO("test.txt"))
11 | tempfile.NamedTemporaryFile("w")
12 | tempfile.TemporaryFile("w")
   | ^^^^^^^^^^^^^^^^^^^^^^
13 | codecs.open("test.txt")
14 | tempfile.SpooledTemporaryFile(0, "w")
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
9  9  | io.TextIOWrapper(io.FileIO("test.txt"))
10 10 | hugo.TextIOWrapper(hugo.FileIO("test.txt"))
11 11 | tempfile.NamedTemporaryFile("w")
12    |-tempfile.TemporaryFile("w")
   12 |+tempfile.TemporaryFile("w", encoding="utf-8")
13 13 | codecs.open("test.txt")
14 14 | tempfile.SpooledTemporaryFile(0, "w")
15 15 | 

PLW1514 [*] `codecs.open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:13:1
   |
11 | tempfile.NamedTemporaryFile("w")
12 | tempfile.TemporaryFile("w")
13 | codecs.open("test.txt")
   | ^^^^^^^^^^^
14 | tempfile.SpooledTemporaryFile(0, "w")
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
10 10 | hugo.TextIOWrapper(hugo.FileIO("test.txt"))
11 11 | tempfile.NamedTemporaryFile("w")
12 12 | tempfile.TemporaryFile("w")
13    |-codecs.open("test.txt")
   13 |+codecs.open("test.txt", encoding="utf-8")
14 14 | tempfile.SpooledTemporaryFile(0, "w")
15 15 | 
16 16 | # Non-errors.

PLW1514 [*] `tempfile.SpooledTemporaryFile` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:14:1
   |
12 | tempfile.TemporaryFile("w")
13 | codecs.open("test.txt")
14 | tempfile.SpooledTemporaryFile(0, "w")
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 |
16 | # Non-errors.
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
11 11 | tempfile.NamedTemporaryFile("w")
12 12 | tempfile.TemporaryFile("w")
13 13 | codecs.open("test.txt")
14    |-tempfile.SpooledTemporaryFile(0, "w")
   14 |+tempfile.SpooledTemporaryFile(0, "w", encoding="utf-8")
15 15 | 
16 16 | # Non-errors.
17 17 | open("test.txt", encoding="utf-8")

PLW1514 [*] `open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:46:1
   |
44 | tempfile.SpooledTemporaryFile(0, )
45 |
46 | open("test.txt",)
   | ^^^^
47 | open()
48 | open(
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
43 43 | tempfile.SpooledTemporaryFile(0, "wb")
44 44 | tempfile.SpooledTemporaryFile(0, )
45 45 | 
46    |-open("test.txt",)
   46 |+open("test.txt", encoding="utf-8",)
47 47 | open()
48 48 | open(
49 49 |     "test.txt",  # comment

PLW1514 [*] `open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:47:1
   |
46 | open("test.txt",)
47 | open()
   | ^^^^
48 | open(
49 |     "test.txt",  # comment
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
44 44 | tempfile.SpooledTemporaryFile(0, )
45 45 | 
46 46 | open("test.txt",)
47    |-open()
   47 |+open(encoding="utf-8")
48 48 | open(
49 49 |     "test.txt",  # comment
50 50 | )

PLW1514 [*] `open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:48:1
   |
46 | open("test.txt",)
47 | open()
48 | open(
   | ^^^^
49 |     "test.txt",  # comment
50 | )
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
46 46 | open("test.txt",)
47 47 | open()
48 48 | open(
49    |-    "test.txt",  # comment
   49 |+    "test.txt", encoding="utf-8",  # comment
50 50 | )
51 51 | open(
52 52 |     "test.txt",

PLW1514 [*] `open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:51:1
   |
49 |     "test.txt",  # comment
50 | )
51 | open(
   | ^^^^
52 |     "test.txt",
53 |     # comment
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
49 49 |     "test.txt",  # comment
50 50 | )
51 51 | open(
52    |-    "test.txt",
   52 |+    "test.txt", encoding="utf-8",
53 53 |     # comment
54 54 | )
55 55 | open(("test.txt"),)

PLW1514 [*] `open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:55:1
   |
53 |     # comment
54 | )
55 | open(("test.txt"),)
   | ^^^^
56 | open(
57 |     ("test.txt"),  # comment
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
52 52 |     "test.txt",
53 53 |     # comment
54 54 | )
55    |-open(("test.txt"),)
   55 |+open(("test.txt"), encoding="utf-8",)
56 56 | open(
57 57 |     ("test.txt"),  # comment
58 58 | )

PLW1514 [*] `open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:56:1
   |
54 | )
55 | open(("test.txt"),)
56 | open(
   | ^^^^
57 |     ("test.txt"),  # comment
58 | )
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
54 54 | )
55 55 | open(("test.txt"),)
56 56 | open(
57    |-    ("test.txt"),  # comment
   57 |+    ("test.txt"), encoding="utf-8",  # comment
58 58 | )
59 59 | open(
60 60 |     ("test.txt"),

PLW1514 [*] `open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:59:1
   |
57 |     ("test.txt"),  # comment
58 | )
59 | open(
   | ^^^^
60 |     ("test.txt"),
61 |     # comment
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
57 57 |     ("test.txt"),  # comment
58 58 | )
59 59 | open(
60    |-    ("test.txt"),
   60 |+    ("test.txt"), encoding="utf-8",
61 61 |     # comment
62 62 | )
63 63 | 

PLW1514 [*] `open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:64:1
   |
62 | )
63 |
64 | open((("test.txt")),)
   | ^^^^
65 | open(
66 |     (("test.txt")),  # comment
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
61 61 |     # comment
62 62 | )
63 63 | 
64    |-open((("test.txt")),)
   64 |+open((("test.txt")), encoding="utf-8",)
65 65 | open(
66 66 |     (("test.txt")),  # comment
67 67 | )

PLW1514 [*] `open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:65:1
   |
64 | open((("test.txt")),)
65 | open(
   | ^^^^
66 |     (("test.txt")),  # comment
67 | )
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
63 63 | 
64 64 | open((("test.txt")),)
65 65 | open(
66    |-    (("test.txt")),  # comment
   66 |+    (("test.txt")), encoding="utf-8",  # comment
67 67 | )
68 68 | open(
69 69 |     (("test.txt")),

PLW1514 [*] `open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:68:1
   |
66 |     (("test.txt")),  # comment
67 | )
68 | open(
   | ^^^^
69 |     (("test.txt")),
70 |     # comment
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
66 66 |     (("test.txt")),  # comment
67 67 | )
68 68 | open(
69    |-    (("test.txt")),
   69 |+    (("test.txt")), encoding="utf-8",
70 70 |     # comment
71 71 | )
72 72 | 

PLW1514 [*] `pathlib.Path(...).open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:77:1
   |
76 | # Errors.
77 | Path("foo.txt").open()
   | ^^^^^^^^^^^^^^^^^^^^
78 | Path("foo.txt").open("w")
79 | text = Path("foo.txt").read_text()
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
74 74 | from pathlib import Path
75 75 | 
76 76 | # Errors.
77    |-Path("foo.txt").open()
   77 |+Path("foo.txt").open(encoding="utf-8")
78 78 | Path("foo.txt").open("w")
79 79 | text = Path("foo.txt").read_text()
80 80 | Path("foo.txt").write_text(text)

PLW1514 [*] `pathlib.Path(...).open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:78:1
   |
76 | # Errors.
77 | Path("foo.txt").open()
78 | Path("foo.txt").open("w")
   | ^^^^^^^^^^^^^^^^^^^^
79 | text = Path("foo.txt").read_text()
80 | Path("foo.txt").write_text(text)
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
75 75 | 
76 76 | # Errors.
77 77 | Path("foo.txt").open()
78    |-Path("foo.txt").open("w")
   78 |+Path("foo.txt").open("w", encoding="utf-8")
79 79 | text = Path("foo.txt").read_text()
80 80 | Path("foo.txt").write_text(text)
81 81 | 

PLW1514 [*] `pathlib.Path(...).read_text` without explicit `encoding` argument
  --> unspecified_encoding.py:79:8
   |
77 | Path("foo.txt").open()
78 | Path("foo.txt").open("w")
79 | text = Path("foo.txt").read_text()
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^
80 | Path("foo.txt").write_text(text)
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
76 76 | # Errors.
77 77 | Path("foo.txt").open()
78 78 | Path("foo.txt").open("w")
79    |-text = Path("foo.txt").read_text()
   79 |+text = Path("foo.txt").read_text(encoding="utf-8")
80 80 | Path("foo.txt").write_text(text)
81 81 | 
82 82 | # Non-errors.

PLW1514 [*] `pathlib.Path(...).write_text` without explicit `encoding` argument
  --> unspecified_encoding.py:80:1
   |
78 | Path("foo.txt").open("w")
79 | text = Path("foo.txt").read_text()
80 | Path("foo.txt").write_text(text)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
81 |
82 | # Non-errors.
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
77 77 | Path("foo.txt").open()
78 78 | Path("foo.txt").open("w")
79 79 | text = Path("foo.txt").read_text()
80    |-Path("foo.txt").write_text(text)
   80 |+Path("foo.txt").write_text(text, encoding="utf-8")
81 81 | 
82 82 | # Non-errors.
83 83 | Path("foo.txt").open(encoding="utf-8")

PLW1514 [*] `pathlib.Path(...).open` in text mode without explicit `encoding` argument
  --> unspecified_encoding.py:96:1
   |
94 | # https://github.com/astral-sh/ruff/issues/19294
95 | x = Path("foo.txt")
96 | x.open()
   | ^^^^^^
97 |
98 | # https://github.com/astral-sh/ruff/issues/18107
   |
help: Add explicit `encoding` argument

ℹ Unsafe fix
93 93 | 
94 94 | # https://github.com/astral-sh/ruff/issues/19294
95 95 | x = Path("foo.txt")
96    |-x.open()
   96 |+x.open(encoding="utf-8")
97 97 | 
98 98 | # https://github.com/astral-sh/ruff/issues/18107
99 99 | codecs.open("plw1514.py", "r", "utf-8").close() # this is fine

PLW1514 [*] `pathlib.Path(...).open` in text mode without explicit `encoding` argument
   --> unspecified_encoding.py:105:10
    |
104 | def format_file(file: Path):
105 |     with file.open() as f:
    |          ^^^^^^^^^
106 |         contents = f.read()
    |
help: Add explicit `encoding` argument

ℹ Unsafe fix
102 102 | from pathlib import Path
103 103 | 
104 104 | def format_file(file: Path):
105     |-    with file.open() as f:
    105 |+    with file.open(encoding="utf-8") as f:
106 106 |         contents = f.read()
