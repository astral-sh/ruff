---
source: crates/ruff_linter/src/rules/pylint/mod.rs
---
useless_exception_statement.py:7:5: PLW0133 [*] Missing `raise` statement on exception
  |
5 | # Test case 1: Useless exception statement
6 | def func():
7 |     AssertionError("This is an assertion error")  # PLW0133
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0133
  |
  = help: Add `raise` keyword


useless_exception_statement.py:13:9: PLW0133 [*] Missing `raise` statement on exception
   |
11 | def func():
12 |     try:
13 |         Exception("This is an exception")  # PLW0133
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0133
14 |     except Exception as err:
15 |         pass
   |
   = help: Add `raise` keyword


useless_exception_statement.py:21:9: PLW0133 [*] Missing `raise` statement on exception
   |
19 | def func():
20 |     if True:
21 |         RuntimeError("This is an exception")  # PLW0133
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0133
   |
   = help: Add `raise` keyword


useless_exception_statement.py:28:13: PLW0133 [*] Missing `raise` statement on exception
   |
26 |     class Class:
27 |         def __init__(self):
28 |             TypeError("This is an exception")  # PLW0133
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0133
   |
   = help: Add `raise` keyword


useless_exception_statement.py:34:9: PLW0133 [*] Missing `raise` statement on exception
   |
32 | def func():
33 |     def inner():
34 |         IndexError("This is an exception")  # PLW0133
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0133
35 | 
36 |     inner()
   |
   = help: Add `raise` keyword


useless_exception_statement.py:42:9: PLW0133 [*] Missing `raise` statement on exception
   |
40 | def func():
41 |     while True:
42 |         KeyError("This is an exception")  # PLW0133
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0133
   |
   = help: Add `raise` keyword


useless_exception_statement.py:50:13: PLW0133 [*] Missing `raise` statement on exception
   |
48 |         @abstractmethod
49 |         def method(self):
50 |             NotImplementedError("This is an exception")  # PLW0133
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0133
   |
   = help: Add `raise` keyword


useless_exception_statement.py:56:9: PLW0133 [*] Missing `raise` statement on exception
   |
54 | def func():
55 |     with suppress(AttributeError):
56 |         AttributeError("This is an exception")  # PLW0133
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0133
   |
   = help: Add `raise` keyword


useless_exception_statement.py:61:5: PLW0133 [*] Missing `raise` statement on exception
   |
59 | # Test case 9: Useless exception statement in parentheses
60 | def func():
61 |     (RuntimeError("This is an exception"))  # PLW0133
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0133
   |
   = help: Add `raise` keyword


useless_exception_statement.py:66:12: PLW0133 [*] Missing `raise` statement on exception
   |
64 | # Test case 10: Useless exception statement in continuation
65 | def func():
66 |     x = 1; (RuntimeError("This is an exception")); y = 2  # PLW0133
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0133
   |
   = help: Add `raise` keyword


useless_exception_statement.py:71:5: PLW0133 [*] Missing `raise` statement on exception
   |
69 | # Test case 11: Useless warning statement
70 | def func():
71 |     UserWarning("This is an assertion error")  # PLW0133
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0133
   |
   = help: Add `raise` keyword
