---
source: crates/ruff_linter/src/rules/pylint/mod.rs
---
legacy_ternary.py:16:1: PLR1706 [*] Consider using ternary `'a' if 1 < 2 else 'b'`
   |
14 | # Ternary (Error)
15 | 
16 | 1<2 and 'a' or 'b'
   | ^^^^^^^^^^^^^^^^^^ PLR1706
17 | 
18 | 1<2 and 'a' or 'b' and 'c'
   |
   = help: Use `'a' if 1 < 2 else 'b'`

ℹ Fix
13 13 | 
14 14 | # Ternary (Error)
15 15 | 
16    |-1<2 and 'a' or 'b'
   16 |+'a' if 1 < 2 else 'b'
17 17 | 
18 18 | 1<2 and 'a' or 'b' and 'c'
19 19 | 

legacy_ternary.py:18:1: PLR1706 [*] Consider using ternary `'a' if 1 < 2 else 'b' and 'c'`
   |
16 | 1<2 and 'a' or 'b'
17 | 
18 | 1<2 and 'a' or 'b' and 'c'
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
19 | 
20 | 1<2 and 'a' or 'b' or 'c'
   |
   = help: Use `'a' if 1 < 2 else 'b' and 'c'`

ℹ Fix
15 15 | 
16 16 | 1<2 and 'a' or 'b'
17 17 | 
18    |-1<2 and 'a' or 'b' and 'c'
   18 |+'a' if 1 < 2 else 'b' and 'c'
19 19 | 
20 20 | 1<2 and 'a' or 'b' or 'c'
21 21 | 

legacy_ternary.py:20:1: PLR1706 [*] Consider using ternary `'a' if 1 < 2 else 'b' or 'c'`
   |
18 | 1<2 and 'a' or 'b' and 'c'
19 | 
20 | 1<2 and 'a' or 'b' or 'c'
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
21 | 
22 | 1<2 and 'a' or 'b' or 'c' or (lambda x: x+1)
   |
   = help: Use `'a' if 1 < 2 else 'b' or 'c'`

ℹ Fix
17 17 | 
18 18 | 1<2 and 'a' or 'b' and 'c'
19 19 | 
20    |-1<2 and 'a' or 'b' or 'c'
   20 |+'a' if 1 < 2 else 'b' or 'c'
21 21 | 
22 22 | 1<2 and 'a' or 'b' or 'c' or (lambda x: x+1)
23 23 | 

legacy_ternary.py:22:1: PLR1706 [*] Consider using ternary `'a' if 1 < 2 else 'b' or 'c' or (lambda x: x + 1)`
   |
20 | 1<2 and 'a' or 'b' or 'c'
21 | 
22 | 1<2 and 'a' or 'b' or 'c' or (lambda x: x+1)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
23 | 
24 | 1<2 and 'a' or 'b' or (lambda x: x+1) or 'c'
   |
   = help: Use `'a' if 1 < 2 else 'b' or 'c' or (lambda x: x + 1)`

ℹ Fix
19 19 | 
20 20 | 1<2 and 'a' or 'b' or 'c'
21 21 | 
22    |-1<2 and 'a' or 'b' or 'c' or (lambda x: x+1)
   22 |+'a' if 1 < 2 else 'b' or 'c' or (lambda x: x + 1)
23 23 | 
24 24 | 1<2 and 'a' or 'b' or (lambda x: x+1) or 'c'
25 25 | 

legacy_ternary.py:24:1: PLR1706 [*] Consider using ternary `'a' if 1 < 2 else 'b' or (lambda x: x + 1) or 'c'`
   |
22 | 1<2 and 'a' or 'b' or 'c' or (lambda x: x+1)
23 | 
24 | 1<2 and 'a' or 'b' or (lambda x: x+1) or 'c'
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
25 | 
26 | (lambda x: x+1) and 'a' or 'b'
   |
   = help: Use `'a' if 1 < 2 else 'b' or (lambda x: x + 1) or 'c'`

ℹ Fix
21 21 | 
22 22 | 1<2 and 'a' or 'b' or 'c' or (lambda x: x+1)
23 23 | 
24    |-1<2 and 'a' or 'b' or (lambda x: x+1) or 'c'
   24 |+'a' if 1 < 2 else 'b' or (lambda x: x + 1) or 'c'
25 25 | 
26 26 | (lambda x: x+1) and 'a' or 'b'
27 27 | 

legacy_ternary.py:26:1: PLR1706 [*] Consider using ternary `'a' if (lambda x: x + 1) else 'b'`
   |
24 | 1<2 and 'a' or 'b' or (lambda x: x+1) or 'c'
25 | 
26 | (lambda x: x+1) and 'a' or 'b'
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
27 | 
28 | 'a' and (lambda x: x+1) or 'orange'
   |
   = help: Use `'a' if (lambda x: x + 1) else 'b'`

ℹ Fix
23 23 | 
24 24 | 1<2 and 'a' or 'b' or (lambda x: x+1) or 'c'
25 25 | 
26    |-(lambda x: x+1) and 'a' or 'b'
   26 |+'a' if (lambda x: x + 1) else 'b'
27 27 | 
28 28 | 'a' and (lambda x: x+1) or 'orange'
29 29 | 

legacy_ternary.py:28:1: PLR1706 [*] Consider using ternary `(lambda x: x + 1) if 'a' else 'orange'`
   |
26 | (lambda x: x+1) and 'a' or 'b'
27 | 
28 | 'a' and (lambda x: x+1) or 'orange'
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
29 | 
30 | def has_oranges(oranges, apples=None) -> bool:
   |
   = help: Use `(lambda x: x + 1) if 'a' else 'orange'`

ℹ Fix
25 25 | 
26 26 | (lambda x: x+1) and 'a' or 'b'
27 27 | 
28    |-'a' and (lambda x: x+1) or 'orange'
   28 |+(lambda x: x + 1) if 'a' else 'orange'
29 29 | 
30 30 | def has_oranges(oranges, apples=None) -> bool:
31 31 |     return apples and False or oranges  # [simplify-boolean-expression]

legacy_ternary.py:31:12: PLR1706 [*] Consider using ternary `False if apples else oranges`
   |
30 | def has_oranges(oranges, apples=None) -> bool:
31 |     return apples and False or oranges  # [simplify-boolean-expression]
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR1706
32 | 
33 | a = 1
   |
   = help: Use `False if apples else oranges`

ℹ Fix
28 28 | 'a' and (lambda x: x+1) or 'orange'
29 29 | 
30 30 | def has_oranges(oranges, apples=None) -> bool:
31    |-    return apples and False or oranges  # [simplify-boolean-expression]
   31 |+    return False if apples else oranges  # [simplify-boolean-expression]
32 32 | 
33 33 | a = 1
34 34 | b = 2

legacy_ternary.py:36:1: PLR1706 [*] Consider using ternary `b if a else c`
   |
34 | b = 2
35 | c = 3
36 | a and b or c
   | ^^^^^^^^^^^^ PLR1706
   |
   = help: Use `b if a else c`

ℹ Fix
33 33 | a = 1
34 34 | b = 2
35 35 | c = 3
36    |-a and b or c
   36 |+b if a else c


