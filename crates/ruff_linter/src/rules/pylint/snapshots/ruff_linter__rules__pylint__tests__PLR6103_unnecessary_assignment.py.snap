---
source: crates/ruff_linter/src/rules/pylint/mod.rs
---
unnecessary_assignment.py:2:4: PLR6103 [*] Use walrus operator `(bad1 := 'example')`.
  |
1 | bad1 = 'example'
2 | if bad1: # [consider-using-assignment-expr]
  |    ^^^^ PLR6103
3 |     pass
  |
  = help: Move assignment into if statement using walrus operator `(bad1 := 'example')`.

ℹ Unsafe fix
1   |-bad1 = 'example'
2   |-if bad1: # [consider-using-assignment-expr]
  1 |+if (bad1 := 'example'): # [consider-using-assignment-expr]
3 2 |     pass
4 3 | 
5 4 | bad2 = 'example'

unnecessary_assignment.py:6:4: PLR6103 [*] Use walrus operator `(bad2 := 'example')`.
  |
5 | bad2 = 'example'
6 | if bad2 and True: # [consider-using-assignment-expr]
  |    ^^^^ PLR6103
7 |     pass
  |
  = help: Move assignment into if statement using walrus operator `(bad2 := 'example')`.

ℹ Unsafe fix
2 2 | if bad1: # [consider-using-assignment-expr]
3 3 |     pass
4 4 | 
5   |-bad2 = 'example'
6   |-if bad2 and True: # [consider-using-assignment-expr]
  5 |+if (bad2 := 'example') and True: # [consider-using-assignment-expr]
7 6 |     pass
8 7 | 
9 8 | bad3 = 'example'

unnecessary_assignment.py:10:4: PLR6103 [*] Use walrus operator `(bad3 := 'example')`.
   |
 9 | bad3 = 'example'
10 | if bad3 and bad3 == 'example': # [consider-using-assignment-expr]
   |    ^^^^ PLR6103
11 |     pass
   |
   = help: Move assignment into if statement using walrus operator `(bad3 := 'example')`.

ℹ Unsafe fix
6  6  | if bad2 and True: # [consider-using-assignment-expr]
7  7  |     pass
8  8  | 
9     |-bad3 = 'example'
10    |-if bad3 and bad3 == 'example': # [consider-using-assignment-expr]
   9  |+if (bad3 := 'example') and bad3 == 'example': # [consider-using-assignment-expr]
11 10 |     pass
12 11 | 
13 12 | 

unnecessary_assignment.py:16:8: PLR6103 [*] Use walrus operator `(bad4 := 0)`.
   |
14 | def foo():
15 |     bad4 = 0
16 |     if bad4: # [consider-using-assignment-expr]
   |        ^^^^ PLR6103
17 |         pass
   |
   = help: Move assignment into if statement using walrus operator `(bad4 := 0)`.

ℹ Unsafe fix
12 12 | 
13 13 | 
14 14 | def foo():
15    |-    bad4 = 0
16    |-    if bad4: # [consider-using-assignment-expr]
   15 |+    if (bad4 := 0): # [consider-using-assignment-expr]
17 16 |         pass
18 17 | 
19 18 | bad5 = (

unnecessary_assignment.py:31:4: PLR6103 [*] Use walrus operator `(bad5 := 'example', 'example', 'example', 'example', 'example', 'example', 'example', 'example', 'example', 'example')`.
   |
29 |     'example',
30 | )
31 | if bad5: # [consider-using-assignment-expr]
   |    ^^^^ PLR6103
32 |     pass
   |
   = help: Move assignment into if statement using walrus operator `(bad5 := 'example', 'example', 'example', 'example', 'example', 'example', 'example', 'example', 'example', 'example')`.

ℹ Unsafe fix
16 16 |     if bad4: # [consider-using-assignment-expr]
17 17 |         pass
18 18 | 
19    |-bad5 = (
20    |-    'example',
21    |-    'example',
22    |-    'example',
23    |-    'example',
24    |-    'example',
25    |-    'example',
26    |-    'example',
27    |-    'example',
28    |-    'example',
29    |-    'example',
30    |-)
31    |-if bad5: # [consider-using-assignment-expr]
   19 |+if (bad5 := 'example', 'example', 'example', 'example', 'example', 'example', 'example', 'example', 'example', 'example'): # [consider-using-assignment-expr]
32 20 |     pass
33 21 | 
34 22 | bad6 = 'example'

unnecessary_assignment.py:35:4: PLR6103 [*] Use walrus operator `(bad6 := 'example')`.
   |
34 | bad6 = 'example'
35 | if bad6 is not None: # [consider-using-assignment-expr]
   |    ^^^^ PLR6103
36 |     pass
   |
   = help: Move assignment into if statement using walrus operator `(bad6 := 'example')`.

ℹ Unsafe fix
31 31 | if bad5: # [consider-using-assignment-expr]
32 32 |     pass
33 33 | 
34    |-bad6 = 'example'
35    |-if bad6 is not None: # [consider-using-assignment-expr]
   34 |+if (bad6 := 'example') is not None: # [consider-using-assignment-expr]
36 35 |     pass
37 36 | 
38 37 | bad7 = 'example'

unnecessary_assignment.py:39:4: PLR6103 [*] Use walrus operator `(bad7 := 'example')`.
   |
38 | bad7 = 'example'
39 | if bad7 == 'something': # [consider-using-assignment-expr]
   |    ^^^^ PLR6103
40 |     pass
41 | elif bad7 == 'something else':
   |
   = help: Move assignment into if statement using walrus operator `(bad7 := 'example')`.

ℹ Unsafe fix
35 35 | if bad6 is not None: # [consider-using-assignment-expr]
36 36 |     pass
37 37 | 
38    |-bad7 = 'example'
39    |-if bad7 == 'something': # [consider-using-assignment-expr]
   38 |+if (bad7 := 'example') == 'something': # [consider-using-assignment-expr]
40 39 |     pass
41 40 | elif bad7 == 'something else':
42 41 |     pass
