---
source: crates/ruff_linter/src/rules/flake8_annotations/mod.rs
---
auto_return_type.py:1:5: ANN201 [*] Missing return type annotation for public function `func`
  |
1 | def func():
  |     ^^^^ ANN201
2 |     return 1
  |
  = help: Add return type annotation: `int`


auto_return_type.py:5:5: ANN201 [*] Missing return type annotation for public function `func`
  |
5 | def func():
  |     ^^^^ ANN201
6 |     return 1.5
  |
  = help: Add return type annotation: `float`


auto_return_type.py:9:5: ANN201 [*] Missing return type annotation for public function `func`
   |
 9 | def func(x: int):
   |     ^^^^ ANN201
10 |     if x > 0:
11 |         return 1
   |
   = help: Add return type annotation: `float`


auto_return_type.py:16:5: ANN201 [*] Missing return type annotation for public function `func`
   |
16 | def func():
   |     ^^^^ ANN201
17 |     return True
   |
   = help: Add return type annotation: `bool`


auto_return_type.py:20:5: ANN201 [*] Missing return type annotation for public function `func`
   |
20 | def func(x: int):
   |     ^^^^ ANN201
21 |     if x > 0:
22 |         return None
   |
   = help: Add return type annotation: `None`


auto_return_type.py:27:5: ANN201 [*] Missing return type annotation for public function `func`
   |
27 | def func(x: int):
   |     ^^^^ ANN201
28 |     return 1 or 2.5 if x > 0 else 1.5 or "str"
   |
   = help: Add return type annotation: `str | float`


auto_return_type.py:31:5: ANN201 [*] Missing return type annotation for public function `func`
   |
31 | def func(x: int):
   |     ^^^^ ANN201
32 |     return 1 + 2.5 if x > 0 else 1.5 or "str"
   |
   = help: Add return type annotation: `str | float`


auto_return_type.py:35:5: ANN201 Missing return type annotation for public function `func`
   |
35 | def func(x: int):
   |     ^^^^ ANN201
36 |     if not x:
37 |         return None
   |
   = help: Add return type annotation

auto_return_type.py:41:5: ANN201 Missing return type annotation for public function `func`
   |
41 | def func(x: int):
   |     ^^^^ ANN201
42 |     return {"foo": 1}
   |
   = help: Add return type annotation

auto_return_type.py:45:5: ANN201 [*] Missing return type annotation for public function `func`
   |
45 | def func(x: int):
   |     ^^^^ ANN201
46 |     if not x:
47 |         return 1
   |
   = help: Add return type annotation: `int`


auto_return_type.py:52:5: ANN201 [*] Missing return type annotation for public function `func`
   |
52 | def func(x: int):
   |     ^^^^ ANN201
53 |     if not x:
54 |         return 1
   |
   = help: Add return type annotation: `int | None`


auto_return_type.py:59:5: ANN201 [*] Missing return type annotation for public function `func`
   |
59 | def func(x: int):
   |     ^^^^ ANN201
60 |     if not x:
61 |         return 1
   |
   = help: Add return type annotation: `str | int | None`


auto_return_type.py:68:5: ANN201 [*] Missing return type annotation for public function `func`
   |
68 | def func(x: int):
   |     ^^^^ ANN201
69 |     if x:
70 |         return 1
   |
   = help: Add return type annotation: `int | None`


auto_return_type.py:73:5: ANN201 [*] Missing return type annotation for public function `func`
   |
73 | def func():
   |     ^^^^ ANN201
74 |     x = 1
   |
   = help: Add return type annotation: `None`


auto_return_type.py:77:5: ANN201 [*] Missing return type annotation for public function `func`
   |
77 | def func(x: int):
   |     ^^^^ ANN201
78 |     if x > 0:
79 |         return 1
   |
   = help: Add return type annotation: `int | None`


auto_return_type.py:82:5: ANN201 [*] Missing return type annotation for public function `func`
   |
82 | def func(x: int):
   |     ^^^^ ANN201
83 |     match x:
84 |         case [1, 2, 3]:
   |
   = help: Add return type annotation: `str | int | None`


auto_return_type.py:90:5: ANN201 [*] Missing return type annotation for public function `func`
   |
90 | def func(x: int):
   |     ^^^^ ANN201
91 |     for i in range(5):
92 |         if i > 0:
   |
   = help: Add return type annotation: `int | None`


auto_return_type.py:96:5: ANN201 [*] Missing return type annotation for public function `func`
   |
96 | def func(x: int):
   |     ^^^^ ANN201
97 |     for i in range(5):
98 |         if i > 0:
   |
   = help: Add return type annotation: `int`


auto_return_type.py:104:5: ANN201 [*] Missing return type annotation for public function `func`
    |
104 | def func(x: int):
    |     ^^^^ ANN201
105 |     for i in range(5):
106 |         if i > 0:
    |
    = help: Add return type annotation: `int | None`


auto_return_type.py:112:5: ANN201 [*] Missing return type annotation for public function `func`
    |
112 | def func(x: int):
    |     ^^^^ ANN201
113 |     try:
114 |         pass
    |
    = help: Add return type annotation: `int | None`


auto_return_type.py:119:5: ANN201 [*] Missing return type annotation for public function `func`
    |
119 | def func(x: int):
    |     ^^^^ ANN201
120 |     try:
121 |         pass
    |
    = help: Add return type annotation: `int`


auto_return_type.py:128:5: ANN201 [*] Missing return type annotation for public function `func`
    |
128 | def func(x: int):
    |     ^^^^ ANN201
129 |     try:
130 |         pass
    |
    = help: Add return type annotation: `int`


auto_return_type.py:137:5: ANN201 [*] Missing return type annotation for public function `func`
    |
137 | def func(x: int):
    |     ^^^^ ANN201
138 |     try:
139 |         return 1
    |
    = help: Add return type annotation: `int | None`


auto_return_type.py:146:5: ANN201 [*] Missing return type annotation for public function `func`
    |
146 | def func(x: int):
    |     ^^^^ ANN201
147 |     while x > 0:
148 |         break
    |
    = help: Add return type annotation: `int | None`


auto_return_type.py:158:9: ANN201 Missing return type annotation for public function `method`
    |
156 | class Foo(abc.ABC):
157 |     @abstractmethod
158 |     def method(self):
    |         ^^^^^^ ANN201
159 |         pass
    |
    = help: Add return type annotation

auto_return_type.py:162:9: ANN201 Missing return type annotation for public function `method`
    |
161 |     @abc.abstractmethod
162 |     def method(self):
    |         ^^^^^^ ANN201
163 |         """Docstring."""
    |
    = help: Add return type annotation

auto_return_type.py:166:9: ANN201 Missing return type annotation for public function `method`
    |
165 |     @abc.abstractmethod
166 |     def method(self):
    |         ^^^^^^ ANN201
167 |         ...
    |
    = help: Add return type annotation

auto_return_type.py:171:9: ANN205 Missing return type annotation for staticmethod `method`
    |
169 |     @staticmethod
170 |     @abstractmethod
171 |     def method():
    |         ^^^^^^ ANN205
172 |         pass
    |
    = help: Add return type annotation

auto_return_type.py:176:9: ANN206 Missing return type annotation for classmethod `method`
    |
174 |     @classmethod
175 |     @abstractmethod
176 |     def method(cls):
    |         ^^^^^^ ANN206
177 |         pass
    |
    = help: Add return type annotation

auto_return_type.py:180:9: ANN201 [*] Missing return type annotation for public function `method`
    |
179 |     @abstractmethod
180 |     def method(self):
    |         ^^^^^^ ANN201
181 |         if self.x > 0:
182 |             return 1
    |
    = help: Add return type annotation: `float`


auto_return_type.py:187:5: ANN201 [*] Missing return type annotation for public function `func`
    |
187 | def func(x: int):
    |     ^^^^ ANN201
188 |     try:
189 |         pass
    |
    = help: Add return type annotation: `int | None`


auto_return_type.py:194:5: ANN201 [*] Missing return type annotation for public function `func`
    |
194 | def func(x: int):
    |     ^^^^ ANN201
195 |     try:
196 |         pass
    |
    = help: Add return type annotation: `int`


auto_return_type.py:203:5: ANN201 [*] Missing return type annotation for public function `func`
    |
203 | def func(x: int):
    |     ^^^^ ANN201
204 |     if not x:
205 |         raise ValueError
    |
    = help: Add return type annotation: `Never`


auto_return_type.py:210:5: ANN201 [*] Missing return type annotation for public function `func`
    |
210 | def func(x: int):
    |     ^^^^ ANN201
211 |     if not x:
212 |         raise ValueError
    |
    = help: Add return type annotation: `int`


auto_return_type.py:234:5: ANN201 [*] Missing return type annotation for public function `func`
    |
234 | def func(x: int):
    |     ^^^^ ANN201
235 |     if not x:
236 |         return 1
    |
    = help: Add return type annotation: `int`


auto_return_type.py:240:5: ANN201 [*] Missing return type annotation for public function `func`
    |
240 | def func(x: int):
    |     ^^^^ ANN201
241 |     if not x:
242 |         return 1
    |
    = help: Add return type annotation: `int`


auto_return_type.py:248:5: ANN201 [*] Missing return type annotation for public function `func`
    |
248 | def func():
    |     ^^^^ ANN201
249 |     try:
250 |         raise ValueError
    |
    = help: Add return type annotation: `int | None`


auto_return_type.py:255:5: ANN201 [*] Missing return type annotation for public function `func`
    |
255 | def func():
    |     ^^^^ ANN201
256 |     try:
257 |         return 1
    |
    = help: Add return type annotation: `int | None`


auto_return_type.py:262:5: ANN201 [*] Missing return type annotation for public function `func`
    |
262 | def func(x: int):
    |     ^^^^ ANN201
263 |     for _ in range(3):
264 |         if x > 0:
    |
    = help: Add return type annotation: `int`


auto_return_type.py:269:5: ANN201 [*] Missing return type annotation for public function `func`
    |
269 | def func(x: int):
    |     ^^^^ ANN201
270 |     if x > 5:
271 |         raise ValueError
    |
    = help: Add return type annotation: `None`


auto_return_type.py:276:5: ANN201 [*] Missing return type annotation for public function `func`
    |
276 | def func(x: int):
    |     ^^^^ ANN201
277 |     if x > 5:
278 |         raise ValueError
    |
    = help: Add return type annotation: `None`


auto_return_type.py:283:5: ANN201 [*] Missing return type annotation for public function `func`
    |
283 | def func(x: int):
    |     ^^^^ ANN201
284 |     if x > 5:
285 |         raise ValueError
    |
    = help: Add return type annotation: `int | None`


auto_return_type.py:290:5: ANN201 [*] Missing return type annotation for public function `func`
    |
290 | def func():
    |     ^^^^ ANN201
291 |     try:
292 |         return 5
    |
    = help: Add return type annotation: `int`


auto_return_type.py:299:5: ANN201 [*] Missing return type annotation for public function `func`
    |
299 | def func(x: int):
    |     ^^^^ ANN201
300 |     match x:
301 |         case [1, 2, 3]:
    |
    = help: Add return type annotation: `str | int`
