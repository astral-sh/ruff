---
source: crates/ruff_linter/src/rules/flake8_annotations/mod.rs
---
annotation_presence.py:5:5: ANN201 [*] Missing return type annotation for public function `foo`
  |
4 | # Error
5 | def foo(a, b):
  |     ^^^ ANN201
6 |     pass
  |
  = help: Add return type annotation: `None`

ℹ Unsafe fix
2 2 | from typing_extensions import override
3 3 | 
4 4 | # Error
5   |-def foo(a, b):
  5 |+def foo(a, b) -> None:
6 6 |     pass
7 7 | 
8 8 | 

annotation_presence.py:5:9: ANN001 Missing type annotation for function argument `a`
  |
4 | # Error
5 | def foo(a, b):
  |         ^ ANN001
6 |     pass
  |

annotation_presence.py:5:12: ANN001 Missing type annotation for function argument `b`
  |
4 | # Error
5 | def foo(a, b):
  |            ^ ANN001
6 |     pass
  |

annotation_presence.py:10:5: ANN201 [*] Missing return type annotation for public function `foo`
   |
 9 | # Error
10 | def foo(a: int, b):
   |     ^^^ ANN201
11 |     pass
   |
   = help: Add return type annotation: `None`

ℹ Unsafe fix
7  7  | 
8  8  | 
9  9  | # Error
10    |-def foo(a: int, b):
   10 |+def foo(a: int, b) -> None:
11 11 |     pass
12 12 | 
13 13 | 

annotation_presence.py:10:17: ANN001 Missing type annotation for function argument `b`
   |
 9 | # Error
10 | def foo(a: int, b):
   |                 ^ ANN001
11 |     pass
   |

annotation_presence.py:15:17: ANN001 Missing type annotation for function argument `b`
   |
14 | # Error
15 | def foo(a: int, b) -> int:
   |                 ^ ANN001
16 |     pass
   |

annotation_presence.py:20:5: ANN201 [*] Missing return type annotation for public function `foo`
   |
19 | # Error
20 | def foo(a: int, b: int):
   |     ^^^ ANN201
21 |     pass
   |
   = help: Add return type annotation: `None`

ℹ Unsafe fix
17 17 | 
18 18 | 
19 19 | # Error
20    |-def foo(a: int, b: int):
   20 |+def foo(a: int, b: int) -> None:
21 21 |     pass
22 22 | 
23 23 | 

annotation_presence.py:25:5: ANN201 [*] Missing return type annotation for public function `foo`
   |
24 | # Error
25 | def foo():
   |     ^^^ ANN201
26 |     pass
   |
   = help: Add return type annotation: `None`

ℹ Unsafe fix
22 22 | 
23 23 | 
24 24 | # Error
25    |-def foo():
   25 |+def foo() -> None:
26 26 |     pass
27 27 | 
28 28 | 

annotation_presence.py:45:12: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `a`
   |
44 | # ANN401
45 | def foo(a: Any, *args: str, **kwargs: str) -> int:
   |            ^^^ ANN401
46 |     pass
   |

annotation_presence.py:50:47: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `foo`
   |
49 | # ANN401
50 | def foo(a: int, *args: str, **kwargs: str) -> Any:
   |                                               ^^^ ANN401
51 |     pass
   |

annotation_presence.py:55:24: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`
   |
54 | # ANN401
55 | def foo(a: int, *args: Any, **kwargs: Any) -> int:
   |                        ^^^ ANN401
56 |     pass
   |

annotation_presence.py:55:39: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
   |
54 | # ANN401
55 | def foo(a: int, *args: Any, **kwargs: Any) -> int:
   |                                       ^^^ ANN401
56 |     pass
   |

annotation_presence.py:60:24: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`
   |
59 | # ANN401
60 | def foo(a: int, *args: Any, **kwargs: str) -> int:
   |                        ^^^ ANN401
61 |     pass
   |

annotation_presence.py:65:39: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
   |
64 | # ANN401
65 | def foo(a: int, *args: str, **kwargs: Any) -> int:
   |                                       ^^^ ANN401
66 |     pass
   |

annotation_presence.py:79:29: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `a`
   |
78 |     # ANN401
79 |     def foo(self: "Foo", a: Any, *params: str, **options: str) -> int:
   |                             ^^^ ANN401
80 |         pass
   |

annotation_presence.py:83:67: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `foo`
   |
82 |     # ANN401
83 |     def foo(self: "Foo", a: int, *params: str, **options: str) -> Any:
   |                                                                   ^^^ ANN401
84 |         pass
   |

annotation_presence.py:87:43: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `*params`
   |
86 |     # ANN401
87 |     def foo(self: "Foo", a: int, *params: Any, **options: Any) -> int:
   |                                           ^^^ ANN401
88 |         pass
   |

annotation_presence.py:87:59: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `**options`
   |
86 |     # ANN401
87 |     def foo(self: "Foo", a: int, *params: Any, **options: Any) -> int:
   |                                                           ^^^ ANN401
88 |         pass
   |

annotation_presence.py:91:43: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `*params`
   |
90 |     # ANN401
91 |     def foo(self: "Foo", a: int, *params: Any, **options: str) -> int:
   |                                           ^^^ ANN401
92 |         pass
   |

annotation_presence.py:95:59: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `**options`
   |
94 |     # ANN401
95 |     def foo(self: "Foo", a: int, *params: str, **options: Any) -> int:
   |                                                           ^^^ ANN401
96 |         pass
   |

annotation_presence.py:149:10: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `a`
    |
148 | # ANN401
149 | def f(a: Any | int) -> None: ...
    |          ^^^^^^^^^ ANN401
150 | def f(a: int | Any) -> None: ...
151 | def f(a: Union[str, bytes, Any]) -> None: ...
    |

annotation_presence.py:150:10: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `a`
    |
148 | # ANN401
149 | def f(a: Any | int) -> None: ...
150 | def f(a: int | Any) -> None: ...
    |          ^^^^^^^^^ ANN401
151 | def f(a: Union[str, bytes, Any]) -> None: ...
152 | def f(a: Optional[Any]) -> None: ...
    |

annotation_presence.py:151:10: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `a`
    |
149 | def f(a: Any | int) -> None: ...
150 | def f(a: int | Any) -> None: ...
151 | def f(a: Union[str, bytes, Any]) -> None: ...
    |          ^^^^^^^^^^^^^^^^^^^^^^ ANN401
152 | def f(a: Optional[Any]) -> None: ...
153 | def f(a: Annotated[Any, ...]) -> None: ...
    |

annotation_presence.py:152:10: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `a`
    |
150 | def f(a: int | Any) -> None: ...
151 | def f(a: Union[str, bytes, Any]) -> None: ...
152 | def f(a: Optional[Any]) -> None: ...
    |          ^^^^^^^^^^^^^ ANN401
153 | def f(a: Annotated[Any, ...]) -> None: ...
154 | def f(a: "Union[str, bytes, Any]") -> None: ...
    |

annotation_presence.py:153:10: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `a`
    |
151 | def f(a: Union[str, bytes, Any]) -> None: ...
152 | def f(a: Optional[Any]) -> None: ...
153 | def f(a: Annotated[Any, ...]) -> None: ...
    |          ^^^^^^^^^^^^^^^^^^^ ANN401
154 | def f(a: "Union[str, bytes, Any]") -> None: ...
    |

annotation_presence.py:154:10: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `a`
    |
152 | def f(a: Optional[Any]) -> None: ...
153 | def f(a: Annotated[Any, ...]) -> None: ...
154 | def f(a: "Union[str, bytes, Any]") -> None: ...
    |          ^^^^^^^^^^^^^^^^^^^^^^^^ ANN401
    |

annotation_presence.py:159:9: ANN204 [*] Missing return type annotation for special method `__init__`
    |
157 | class Foo:
158 |     @decorator()
159 |     def __init__(self: "Foo", foo: int):
    |         ^^^^^^^^ ANN204
160 |        ...
    |
    = help: Add return type annotation: `None`

ℹ Unsafe fix
156 156 | 
157 157 | class Foo:
158 158 |     @decorator()
159     |-    def __init__(self: "Foo", foo: int):
    159 |+    def __init__(self: "Foo", foo: int) -> None:
160 160 |        ...
161 161 | 
162 162 | 

annotation_presence.py:165:9: ANN204 [*] Missing return type annotation for special method `__init__`
    |
163 | # Regression test for: https://github.com/astral-sh/ruff/issues/7711
164 | class Class:
165 |     def __init__(self):
    |         ^^^^^^^^ ANN204
166 |         print(f"{self.attr=}")
    |
    = help: Add return type annotation: `None`

ℹ Unsafe fix
162 162 | 
163 163 | # Regression test for: https://github.com/astral-sh/ruff/issues/7711
164 164 | class Class:
165     |-    def __init__(self):
    165 |+    def __init__(self) -> None:
166 166 |         print(f"{self.attr=}")
167 167 | 
168 168 | 

annotation_presence.py:173:5: ANN201 [*] Missing return type annotation for public function `f2`
    |
171 | # Checked for being valid Python using `typing.get_type_hints`
172 | 
173 | def f2(x: "'int'"): 
    |     ^^ ANN201
174 |     pass
    |
    = help: Add return type annotation: `None`

ℹ Unsafe fix
170 170 | # Regression test for: https://github.com/astral-sh/ruff/issues/14695
171 171 | # Checked for being valid Python using `typing.get_type_hints`
172 172 | 
173     |-def f2(x: "'int'"): 
    173 |+def f2(x: "'int'") -> None: 
174 174 |     pass
175 175 | 
176 176 | def f(x: "'in\x74'"): 

annotation_presence.py:176:5: ANN201 [*] Missing return type annotation for public function `f`
    |
174 |     pass
175 | 
176 | def f(x: "'in\x74'"): 
    |     ^ ANN201
177 |     pass
    |
    = help: Add return type annotation: `None`

ℹ Unsafe fix
173 173 | def f2(x: "'int'"): 
174 174 |     pass
175 175 | 
176     |-def f(x: "'in\x74'"): 
    176 |+def f(x: "'in\x74'") -> None: 
177 177 |     pass
178 178 | 
179 179 | def f3(x: "'HelloWorld'"): 

annotation_presence.py:179:5: ANN201 [*] Missing return type annotation for public function `f3`
    |
177 |     pass
178 | 
179 | def f3(x: "'HelloWorld'"): 
    |     ^^ ANN201
180 |     pass
    |
    = help: Add return type annotation: `None`

ℹ Unsafe fix
176 176 | def f(x: "'in\x74'"): 
177 177 |     pass
178 178 | 
179     |-def f3(x: "'HelloWorld'"): 
    179 |+def f3(x: "'HelloWorld'") -> None: 
180 180 |     pass
181 181 | 
182 182 | def g(x: "'An\x79'"): 

annotation_presence.py:182:5: ANN201 [*] Missing return type annotation for public function `g`
    |
180 |     pass
181 | 
182 | def g(x: "'An\x79'"): 
    |     ^ ANN201
183 |     pass
    |
    = help: Add return type annotation: `None`

ℹ Unsafe fix
179 179 | def f3(x: "'HelloWorld'"): 
180 180 |     pass
181 181 | 
182     |-def g(x: "'An\x79'"): 
    182 |+def g(x: "'An\x79'") -> None: 
183 183 |     pass
184 184 | 
185 185 | def g2(x: "'Any'"): 

annotation_presence.py:182:10: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `x`
    |
180 |     pass
181 | 
182 | def g(x: "'An\x79'"): 
    |          ^^^^^^^^^^ ANN401
183 |     pass
    |

annotation_presence.py:185:5: ANN201 [*] Missing return type annotation for public function `g2`
    |
183 |     pass
184 | 
185 | def g2(x: "'Any'"): 
    |     ^^ ANN201
186 |     pass
    |
    = help: Add return type annotation: `None`

ℹ Unsafe fix
182 182 | def g(x: "'An\x79'"): 
183 183 |     pass
184 184 | 
185     |-def g2(x: "'Any'"): 
    185 |+def g2(x: "'Any'") -> None: 
186 186 |     pass
187 187 | 
188 188 | def g3(x: "An\x79"): 

annotation_presence.py:185:11: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `x`
    |
183 |     pass
184 | 
185 | def g2(x: "'Any'"): 
    |           ^^^^^^^ ANN401
186 |     pass
    |

annotation_presence.py:188:5: ANN201 [*] Missing return type annotation for public function `g3`
    |
186 |     pass
187 | 
188 | def g3(x: "An\x79"): 
    |     ^^ ANN201
189 |     pass
    |
    = help: Add return type annotation: `None`

ℹ Unsafe fix
185 185 | def g2(x: "'Any'"): 
186 186 |     pass
187 187 | 
188     |-def g3(x: "An\x79"): 
    188 |+def g3(x: "An\x79") -> None: 
189 189 |     pass
190 190 | 
191 191 | def g4(x: "Any"): 

annotation_presence.py:188:11: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `x`
    |
186 |     pass
187 | 
188 | def g3(x: "An\x79"): 
    |           ^^^^^^^^ ANN401
189 |     pass
    |

annotation_presence.py:191:5: ANN201 [*] Missing return type annotation for public function `g4`
    |
189 |     pass
190 | 
191 | def g4(x: "Any"): 
    |     ^^ ANN201
192 |     pass
    |
    = help: Add return type annotation: `None`

ℹ Unsafe fix
188 188 | def g3(x: "An\x79"): 
189 189 |     pass
190 190 | 
191     |-def g4(x: "Any"): 
    191 |+def g4(x: "Any") -> None: 
192 192 |     pass
193 193 | 
194 194 | def h(x: "'Non\x65'"):

annotation_presence.py:191:11: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `x`
    |
189 |     pass
190 | 
191 | def g4(x: "Any"): 
    |           ^^^^^ ANN401
192 |     pass
    |

annotation_presence.py:194:5: ANN201 [*] Missing return type annotation for public function `h`
    |
192 |     pass
193 | 
194 | def h(x: "'Non\x65'"):
    |     ^ ANN201
195 |     pass
    |
    = help: Add return type annotation: `None`

ℹ Unsafe fix
191 191 | def g4(x: "Any"): 
192 192 |     pass
193 193 | 
194     |-def h(x: "'Non\x65'"):
    194 |+def h(x: "'Non\x65'") -> None:
195 195 |     pass
196 196 | 
197 197 | def f4(x: "'in''\x74'"): 

annotation_presence.py:197:5: ANN201 [*] Missing return type annotation for public function `f4`
    |
195 |     pass
196 | 
197 | def f4(x: "'in''\x74'"): 
    |     ^^ ANN201
198 |     pass
    |
    = help: Add return type annotation: `None`

ℹ Unsafe fix
194 194 | def h(x: "'Non\x65'"):
195 195 |     pass
196 196 | 
197     |-def f4(x: "'in''\x74'"): 
    197 |+def f4(x: "'in''\x74'") -> None: 
198 198 |     pass
199 199 | 
200 200 | def f5(x: "'An''\x79'"): 

annotation_presence.py:200:5: ANN201 [*] Missing return type annotation for public function `f5`
    |
198 |     pass
199 | 
200 | def f5(x: "'An''\x79'"): 
    |     ^^ ANN201
201 |     pass
    |
    = help: Add return type annotation: `None`

ℹ Unsafe fix
197 197 | def f4(x: "'in''\x74'"): 
198 198 |     pass
199 199 | 
200     |-def f5(x: "'An''\x79'"): 
    200 |+def f5(x: "'An''\x79'") -> None: 
201 201 |     pass

annotation_presence.py:200:11: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `x`
    |
198 |     pass
199 | 
200 | def f5(x: "'An''\x79'"): 
    |           ^^^^^^^^^^^^ ANN401
201 |     pass
    |
