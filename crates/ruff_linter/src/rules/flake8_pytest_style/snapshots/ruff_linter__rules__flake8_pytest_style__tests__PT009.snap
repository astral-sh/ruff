---
source: crates/ruff_linter/src/rules/flake8_pytest_style/mod.rs
---
PT009.py:11:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertTrue`
   |
 9 |         expr = 1
10 |         msg = "Must be True"
11 |         self.assertTrue(expr)  # Error
   |         ^^^^^^^^^^^^^^^ PT009
12 |         self.assertTrue(expr=expr)  # Error
13 |         self.assertTrue(expr, msg)  # Error
   |
   = help: Replace `assertTrue(...)` with `assert ...`


PT009.py:12:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertTrue`
   |
10 |         msg = "Must be True"
11 |         self.assertTrue(expr)  # Error
12 |         self.assertTrue(expr=expr)  # Error
   |         ^^^^^^^^^^^^^^^ PT009
13 |         self.assertTrue(expr, msg)  # Error
14 |         self.assertTrue(expr=expr, msg=msg)  # Error
   |
   = help: Replace `assertTrue(...)` with `assert ...`


PT009.py:13:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertTrue`
   |
11 |         self.assertTrue(expr)  # Error
12 |         self.assertTrue(expr=expr)  # Error
13 |         self.assertTrue(expr, msg)  # Error
   |         ^^^^^^^^^^^^^^^ PT009
14 |         self.assertTrue(expr=expr, msg=msg)  # Error
15 |         self.assertTrue(msg=msg, expr=expr)  # Error
   |
   = help: Replace `assertTrue(...)` with `assert ...`


PT009.py:14:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertTrue`
   |
12 |         self.assertTrue(expr=expr)  # Error
13 |         self.assertTrue(expr, msg)  # Error
14 |         self.assertTrue(expr=expr, msg=msg)  # Error
   |         ^^^^^^^^^^^^^^^ PT009
15 |         self.assertTrue(msg=msg, expr=expr)  # Error
16 |         self.assertTrue(*(expr, msg))  # Error, unfixable
   |
   = help: Replace `assertTrue(...)` with `assert ...`


PT009.py:15:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertTrue`
   |
13 |         self.assertTrue(expr, msg)  # Error
14 |         self.assertTrue(expr=expr, msg=msg)  # Error
15 |         self.assertTrue(msg=msg, expr=expr)  # Error
   |         ^^^^^^^^^^^^^^^ PT009
16 |         self.assertTrue(*(expr, msg))  # Error, unfixable
17 |         self.assertTrue(**{"expr": expr, "msg": msg})  # Error, unfixable
   |
   = help: Replace `assertTrue(...)` with `assert ...`


PT009.py:16:9: PT009 Use a regular `assert` instead of unittest-style `assertTrue`
   |
14 |         self.assertTrue(expr=expr, msg=msg)  # Error
15 |         self.assertTrue(msg=msg, expr=expr)  # Error
16 |         self.assertTrue(*(expr, msg))  # Error, unfixable
   |         ^^^^^^^^^^^^^^^ PT009
17 |         self.assertTrue(**{"expr": expr, "msg": msg})  # Error, unfixable
18 |         self.assertTrue(msg=msg, expr=expr, unexpected_arg=False)  # Error, unfixable
   |
   = help: Replace `assertTrue(...)` with `assert ...`

PT009.py:17:9: PT009 Use a regular `assert` instead of unittest-style `assertTrue`
   |
15 |         self.assertTrue(msg=msg, expr=expr)  # Error
16 |         self.assertTrue(*(expr, msg))  # Error, unfixable
17 |         self.assertTrue(**{"expr": expr, "msg": msg})  # Error, unfixable
   |         ^^^^^^^^^^^^^^^ PT009
18 |         self.assertTrue(msg=msg, expr=expr, unexpected_arg=False)  # Error, unfixable
19 |         self.assertTrue(msg=msg)  # Error, unfixable
   |
   = help: Replace `assertTrue(...)` with `assert ...`

PT009.py:18:9: PT009 Use a regular `assert` instead of unittest-style `assertTrue`
   |
16 |         self.assertTrue(*(expr, msg))  # Error, unfixable
17 |         self.assertTrue(**{"expr": expr, "msg": msg})  # Error, unfixable
18 |         self.assertTrue(msg=msg, expr=expr, unexpected_arg=False)  # Error, unfixable
   |         ^^^^^^^^^^^^^^^ PT009
19 |         self.assertTrue(msg=msg)  # Error, unfixable
20 |         (
   |
   = help: Replace `assertTrue(...)` with `assert ...`

PT009.py:19:9: PT009 Use a regular `assert` instead of unittest-style `assertTrue`
   |
17 |         self.assertTrue(**{"expr": expr, "msg": msg})  # Error, unfixable
18 |         self.assertTrue(msg=msg, expr=expr, unexpected_arg=False)  # Error, unfixable
19 |         self.assertTrue(msg=msg)  # Error, unfixable
   |         ^^^^^^^^^^^^^^^ PT009
20 |         (
21 |             self.assertIsNotNone(value)  # Error, unfixable
   |
   = help: Replace `assertTrue(...)` with `assert ...`

PT009.py:21:13: PT009 Use a regular `assert` instead of unittest-style `assertIsNotNone`
   |
19 |         self.assertTrue(msg=msg)  # Error, unfixable
20 |         (
21 |             self.assertIsNotNone(value)  # Error, unfixable
   |             ^^^^^^^^^^^^^^^^^^^^ PT009
22 |             if expect_condition
23 |             else self.assertIsNone(value)  # Error, unfixable
   |
   = help: Replace `assertIsNotNone(...)` with `assert ...`

PT009.py:23:18: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
   |
21 |             self.assertIsNotNone(value)  # Error, unfixable
22 |             if expect_condition
23 |             else self.assertIsNone(value)  # Error, unfixable
   |                  ^^^^^^^^^^^^^^^^^ PT009
24 |         )
25 |         return self.assertEqual(True,  False)  # Error, unfixable
   |
   = help: Replace `assertIsNone(...)` with `assert ...`

PT009.py:25:16: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
   |
23 |             else self.assertIsNone(value)  # Error, unfixable
24 |         )
25 |         return self.assertEqual(True,  False)  # Error, unfixable
   |                ^^^^^^^^^^^^^^^^ PT009
26 | 
27 |     def test_assert_false(self):
   |
   = help: Replace `assertEqual(...)` with `assert ...`

PT009.py:28:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertFalse`
   |
27 |     def test_assert_false(self):
28 |         self.assertFalse(True)  # Error
   |         ^^^^^^^^^^^^^^^^ PT009
29 | 
30 |     def test_assert_equal(self):
   |
   = help: Replace `assertFalse(...)` with `assert ...`


PT009.py:31:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertEqual`
   |
30 |     def test_assert_equal(self):
31 |         self.assertEqual(1, 2)  # Error
   |         ^^^^^^^^^^^^^^^^ PT009
32 | 
33 |     def test_assert_not_equal(self):
   |
   = help: Replace `assertEqual(...)` with `assert ...`


PT009.py:34:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertNotEqual`
   |
33 |     def test_assert_not_equal(self):
34 |         self.assertNotEqual(1, 1)  # Error
   |         ^^^^^^^^^^^^^^^^^^^ PT009
35 | 
36 |     def test_assert_greater(self):
   |
   = help: Replace `assertNotEqual(...)` with `assert ...`


PT009.py:37:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertGreater`
   |
36 |     def test_assert_greater(self):
37 |         self.assertGreater(1, 2)  # Error
   |         ^^^^^^^^^^^^^^^^^^ PT009
38 | 
39 |     def test_assert_greater_equal(self):
   |
   = help: Replace `assertGreater(...)` with `assert ...`


PT009.py:40:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertGreaterEqual`
   |
39 |     def test_assert_greater_equal(self):
40 |         self.assertGreaterEqual(1, 2)  # Error
   |         ^^^^^^^^^^^^^^^^^^^^^^^ PT009
41 | 
42 |     def test_assert_less(self):
   |
   = help: Replace `assertGreaterEqual(...)` with `assert ...`


PT009.py:43:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertLess`
   |
42 |     def test_assert_less(self):
43 |         self.assertLess(2, 1)  # Error
   |         ^^^^^^^^^^^^^^^ PT009
44 | 
45 |     def test_assert_less_equal(self):
   |
   = help: Replace `assertLess(...)` with `assert ...`


PT009.py:46:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertLessEqual`
   |
45 |     def test_assert_less_equal(self):
46 |         self.assertLessEqual(1, 2)  # Error
   |         ^^^^^^^^^^^^^^^^^^^^ PT009
47 | 
48 |     def test_assert_in(self):
   |
   = help: Replace `assertLessEqual(...)` with `assert ...`


PT009.py:49:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertIn`
   |
48 |     def test_assert_in(self):
49 |         self.assertIn(1, [2, 3])  # Error
   |         ^^^^^^^^^^^^^ PT009
50 | 
51 |     def test_assert_not_in(self):
   |
   = help: Replace `assertIn(...)` with `assert ...`


PT009.py:52:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertNotIn`
   |
51 |     def test_assert_not_in(self):
52 |         self.assertNotIn(2, [2, 3])  # Error
   |         ^^^^^^^^^^^^^^^^ PT009
53 | 
54 |     def test_assert_is_none(self):
   |
   = help: Replace `assertNotIn(...)` with `assert ...`


PT009.py:55:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertIsNone`
   |
54 |     def test_assert_is_none(self):
55 |         self.assertIsNone(0)  # Error
   |         ^^^^^^^^^^^^^^^^^ PT009
56 | 
57 |     def test_assert_is_not_none(self):
   |
   = help: Replace `assertIsNone(...)` with `assert ...`


PT009.py:58:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertIsNotNone`
   |
57 |     def test_assert_is_not_none(self):
58 |         self.assertIsNotNone(0)  # Error
   |         ^^^^^^^^^^^^^^^^^^^^ PT009
59 | 
60 |     def test_assert_is(self):
   |
   = help: Replace `assertIsNotNone(...)` with `assert ...`


PT009.py:61:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertIs`
   |
60 |     def test_assert_is(self):
61 |         self.assertIs([], [])  # Error
   |         ^^^^^^^^^^^^^ PT009
62 | 
63 |     def test_assert_is_not(self):
   |
   = help: Replace `assertIs(...)` with `assert ...`


PT009.py:64:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertIsNot`
   |
63 |     def test_assert_is_not(self):
64 |         self.assertIsNot(1, 1)  # Error
   |         ^^^^^^^^^^^^^^^^ PT009
65 | 
66 |     def test_assert_is_instance(self):
   |
   = help: Replace `assertIsNot(...)` with `assert ...`


PT009.py:67:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertIsInstance`
   |
66 |     def test_assert_is_instance(self):
67 |         self.assertIsInstance(1, str)  # Error
   |         ^^^^^^^^^^^^^^^^^^^^^ PT009
68 | 
69 |     def test_assert_is_not_instance(self):
   |
   = help: Replace `assertIsInstance(...)` with `assert ...`


PT009.py:70:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertNotIsInstance`
   |
69 |     def test_assert_is_not_instance(self):
70 |         self.assertNotIsInstance(1, int)  # Error
   |         ^^^^^^^^^^^^^^^^^^^^^^^^ PT009
71 | 
72 |     def test_assert_regex(self):
   |
   = help: Replace `assertNotIsInstance(...)` with `assert ...`


PT009.py:73:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertRegex`
   |
72 |     def test_assert_regex(self):
73 |         self.assertRegex("abc", r"def")  # Error
   |         ^^^^^^^^^^^^^^^^ PT009
74 | 
75 |     def test_assert_not_regex(self):
   |
   = help: Replace `assertRegex(...)` with `assert ...`


PT009.py:76:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertNotRegex`
   |
75 |     def test_assert_not_regex(self):
76 |         self.assertNotRegex("abc", r"abc")  # Error
   |         ^^^^^^^^^^^^^^^^^^^ PT009
77 | 
78 |     def test_assert_regexp_matches(self):
   |
   = help: Replace `assertNotRegex(...)` with `assert ...`


PT009.py:79:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertRegexpMatches`
   |
78 |     def test_assert_regexp_matches(self):
79 |         self.assertRegexpMatches("abc", r"def")  # Error
   |         ^^^^^^^^^^^^^^^^^^^^^^^^ PT009
80 | 
81 |     def test_assert_not_regexp_matches(self):
   |
   = help: Replace `assertRegexpMatches(...)` with `assert ...`


PT009.py:82:9: PT009 [*] Use a regular `assert` instead of unittest-style `assertNotRegex`
   |
81 |     def test_assert_not_regexp_matches(self):
82 |         self.assertNotRegex("abc", r"abc")  # Error
   |         ^^^^^^^^^^^^^^^^^^^ PT009
83 | 
84 |     def test_fail_if(self):
   |
   = help: Replace `assertNotRegex(...)` with `assert ...`


PT009.py:85:9: PT009 [*] Use a regular `assert` instead of unittest-style `failIf`
   |
84 |     def test_fail_if(self):
85 |         self.failIf("abc")  # Error
   |         ^^^^^^^^^^^ PT009
86 | 
87 |     def test_fail_unless(self):
   |
   = help: Replace `failIf(...)` with `assert ...`


PT009.py:88:9: PT009 [*] Use a regular `assert` instead of unittest-style `failUnless`
   |
87 |     def test_fail_unless(self):
88 |         self.failUnless("abc")  # Error
   |         ^^^^^^^^^^^^^^^ PT009
89 | 
90 |     def test_fail_unless_equal(self):
   |
   = help: Replace `failUnless(...)` with `assert ...`


PT009.py:91:9: PT009 [*] Use a regular `assert` instead of unittest-style `failUnlessEqual`
   |
90 |     def test_fail_unless_equal(self):
91 |         self.failUnlessEqual(1, 2)  # Error
   |         ^^^^^^^^^^^^^^^^^^^^ PT009
92 | 
93 |     def test_fail_if_equal(self):
   |
   = help: Replace `failUnlessEqual(...)` with `assert ...`


PT009.py:94:9: PT009 [*] Use a regular `assert` instead of unittest-style `failIfEqual`
   |
93 |     def test_fail_if_equal(self):
94 |         self.failIfEqual(1, 2)  # Error
   |         ^^^^^^^^^^^^^^^^ PT009
   |
   = help: Replace `failIfEqual(...)` with `assert ...`


PT009.py:98:2: PT009 [*] Use a regular `assert` instead of unittest-style `assertTrue`
    |
 97 | # Regression test for: https://github.com/astral-sh/ruff/issues/7455#issuecomment-1722459517
 98 | (self.assertTrue(
    |  ^^^^^^^^^^^^^^^ PT009
 99 |     "piAx_piAy_beta[r][x][y] = {17}".format(
100 |         self.model.piAx_piAy_beta[r][x][y])))
    |
    = help: Replace `assertTrue(...)` with `assert ...`
