---
source: crates/ruff_linter/src/rules/flake8_use_pathlib/mod.rs
---
full_name.py:7:5: PTH100 `os.path.abspath()` should be replaced by `Path.resolve()`
  |
5 | q = "bar"
6 | 
7 | a = os.path.abspath(p)
  |     ^^^^^^^^^^^^^^^ PTH100
8 | aa = os.chmod(p)
9 | aaa = os.mkdir(p)
  |

full_name.py:8:6: PTH101 `os.chmod()` should be replaced by `Path.chmod()`
   |
 7 | a = os.path.abspath(p)
 8 | aa = os.chmod(p)
   |      ^^^^^^^^ PTH101
 9 | aaa = os.mkdir(p)
10 | os.makedirs(p)
   |

full_name.py:9:7: PTH102 `os.mkdir()` should be replaced by `Path.mkdir()`
   |
 7 | a = os.path.abspath(p)
 8 | aa = os.chmod(p)
 9 | aaa = os.mkdir(p)
   |       ^^^^^^^^ PTH102
10 | os.makedirs(p)
11 | os.rename(p)
   |

full_name.py:10:1: PTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`
   |
 8 | aa = os.chmod(p)
 9 | aaa = os.mkdir(p)
10 | os.makedirs(p)
   | ^^^^^^^^^^^ PTH103
11 | os.rename(p)
12 | os.replace(p)
   |

full_name.py:11:1: PTH104 `os.rename()` should be replaced by `Path.rename()`
   |
 9 | aaa = os.mkdir(p)
10 | os.makedirs(p)
11 | os.rename(p)
   | ^^^^^^^^^ PTH104
12 | os.replace(p)
13 | os.rmdir(p)
   |

full_name.py:12:1: PTH105 `os.replace()` should be replaced by `Path.replace()`
   |
10 | os.makedirs(p)
11 | os.rename(p)
12 | os.replace(p)
   | ^^^^^^^^^^ PTH105
13 | os.rmdir(p)
14 | os.remove(p)
   |

full_name.py:13:1: PTH106 `os.rmdir()` should be replaced by `Path.rmdir()`
   |
11 | os.rename(p)
12 | os.replace(p)
13 | os.rmdir(p)
   | ^^^^^^^^ PTH106
14 | os.remove(p)
15 | os.unlink(p)
   |

full_name.py:14:1: PTH107 `os.remove()` should be replaced by `Path.unlink()`
   |
12 | os.replace(p)
13 | os.rmdir(p)
14 | os.remove(p)
   | ^^^^^^^^^ PTH107
15 | os.unlink(p)
16 | os.getcwd(p)
   |

full_name.py:15:1: PTH108 `os.unlink()` should be replaced by `Path.unlink()`
   |
13 | os.rmdir(p)
14 | os.remove(p)
15 | os.unlink(p)
   | ^^^^^^^^^ PTH108
16 | os.getcwd(p)
17 | b = os.path.exists(p)
   |

full_name.py:16:1: PTH109 `os.getcwd()` should be replaced by `Path.cwd()`
   |
14 | os.remove(p)
15 | os.unlink(p)
16 | os.getcwd(p)
   | ^^^^^^^^^ PTH109
17 | b = os.path.exists(p)
18 | bb = os.path.expanduser(p)
   |

full_name.py:17:5: PTH110 `os.path.exists()` should be replaced by `Path.exists()`
   |
15 | os.unlink(p)
16 | os.getcwd(p)
17 | b = os.path.exists(p)
   |     ^^^^^^^^^^^^^^ PTH110
18 | bb = os.path.expanduser(p)
19 | bbb = os.path.isdir(p)
   |

full_name.py:18:6: PTH111 `os.path.expanduser()` should be replaced by `Path.expanduser()`
   |
16 | os.getcwd(p)
17 | b = os.path.exists(p)
18 | bb = os.path.expanduser(p)
   |      ^^^^^^^^^^^^^^^^^^ PTH111
19 | bbb = os.path.isdir(p)
20 | bbbb = os.path.isfile(p)
   |

full_name.py:19:7: PTH112 `os.path.isdir()` should be replaced by `Path.is_dir()`
   |
17 | b = os.path.exists(p)
18 | bb = os.path.expanduser(p)
19 | bbb = os.path.isdir(p)
   |       ^^^^^^^^^^^^^ PTH112
20 | bbbb = os.path.isfile(p)
21 | bbbbb = os.path.islink(p)
   |

full_name.py:20:8: PTH113 `os.path.isfile()` should be replaced by `Path.is_file()`
   |
18 | bb = os.path.expanduser(p)
19 | bbb = os.path.isdir(p)
20 | bbbb = os.path.isfile(p)
   |        ^^^^^^^^^^^^^^ PTH113
21 | bbbbb = os.path.islink(p)
22 | os.readlink(p)
   |

full_name.py:21:9: PTH114 `os.path.islink()` should be replaced by `Path.is_symlink()`
   |
19 | bbb = os.path.isdir(p)
20 | bbbb = os.path.isfile(p)
21 | bbbbb = os.path.islink(p)
   |         ^^^^^^^^^^^^^^ PTH114
22 | os.readlink(p)
23 | os.stat(p)
   |

full_name.py:22:1: PTH115 `os.readlink()` should be replaced by `Path.readlink()`
   |
20 | bbbb = os.path.isfile(p)
21 | bbbbb = os.path.islink(p)
22 | os.readlink(p)
   | ^^^^^^^^^^^ PTH115
23 | os.stat(p)
24 | os.path.isabs(p)
   |

full_name.py:23:1: PTH116 `os.stat()` should be replaced by `Path.stat()`, `Path.owner()`, or `Path.group()`
   |
21 | bbbbb = os.path.islink(p)
22 | os.readlink(p)
23 | os.stat(p)
   | ^^^^^^^ PTH116
24 | os.path.isabs(p)
25 | os.path.join(p, q)
   |

full_name.py:24:1: PTH117 `os.path.isabs()` should be replaced by `Path.is_absolute()`
   |
22 | os.readlink(p)
23 | os.stat(p)
24 | os.path.isabs(p)
   | ^^^^^^^^^^^^^ PTH117
25 | os.path.join(p, q)
26 | os.sep.join([p, q])
   |

full_name.py:25:1: PTH118 `os.path.join()` should be replaced by `Path` with `/` operator
   |
23 | os.stat(p)
24 | os.path.isabs(p)
25 | os.path.join(p, q)
   | ^^^^^^^^^^^^ PTH118
26 | os.sep.join([p, q])
27 | os.sep.join((p, q))
   |

full_name.py:26:1: PTH118 `os.sep.join()` should be replaced by `Path` with `/` operator
   |
24 | os.path.isabs(p)
25 | os.path.join(p, q)
26 | os.sep.join([p, q])
   | ^^^^^^^^^^^ PTH118
27 | os.sep.join((p, q))
28 | os.path.basename(p)
   |

full_name.py:27:1: PTH118 `os.sep.join()` should be replaced by `Path` with `/` operator
   |
25 | os.path.join(p, q)
26 | os.sep.join([p, q])
27 | os.sep.join((p, q))
   | ^^^^^^^^^^^ PTH118
28 | os.path.basename(p)
29 | os.path.dirname(p)
   |

full_name.py:28:1: PTH119 `os.path.basename()` should be replaced by `Path.name`
   |
26 | os.sep.join([p, q])
27 | os.sep.join((p, q))
28 | os.path.basename(p)
   | ^^^^^^^^^^^^^^^^ PTH119
29 | os.path.dirname(p)
30 | os.path.samefile(p)
   |

full_name.py:29:1: PTH120 `os.path.dirname()` should be replaced by `Path.parent`
   |
27 | os.sep.join((p, q))
28 | os.path.basename(p)
29 | os.path.dirname(p)
   | ^^^^^^^^^^^^^^^ PTH120
30 | os.path.samefile(p)
31 | os.path.splitext(p)
   |

full_name.py:30:1: PTH121 `os.path.samefile()` should be replaced by `Path.samefile()`
   |
28 | os.path.basename(p)
29 | os.path.dirname(p)
30 | os.path.samefile(p)
   | ^^^^^^^^^^^^^^^^ PTH121
31 | os.path.splitext(p)
32 | with open(p) as fp:
   |

full_name.py:31:1: PTH122 `os.path.splitext()` should be replaced by `Path.suffix`, `Path.stem`, and `Path.parent`
   |
29 | os.path.dirname(p)
30 | os.path.samefile(p)
31 | os.path.splitext(p)
   | ^^^^^^^^^^^^^^^^ PTH122
32 | with open(p) as fp:
33 |     fp.read()
   |

full_name.py:32:6: PTH123 `open()` should be replaced by `Path.open()`
   |
30 | os.path.samefile(p)
31 | os.path.splitext(p)
32 | with open(p) as fp:
   |      ^^^^ PTH123
33 |     fp.read()
34 | open(p).close()
   |

full_name.py:34:1: PTH123 `open()` should be replaced by `Path.open()`
   |
32 | with open(p) as fp:
33 |     fp.read()
34 | open(p).close()
   | ^^^^ PTH123
35 | os.getcwdb(p)
36 | os.path.join(p, *q)
   |

full_name.py:35:1: PTH109 `os.getcwd()` should be replaced by `Path.cwd()`
   |
33 |     fp.read()
34 | open(p).close()
35 | os.getcwdb(p)
   | ^^^^^^^^^^ PTH109
36 | os.path.join(p, *q)
37 | os.sep.join(p, *q)
   |

full_name.py:36:1: PTH118 `os.path.join()` should be replaced by `Path.joinpath()`
   |
34 | open(p).close()
35 | os.getcwdb(p)
36 | os.path.join(p, *q)
   | ^^^^^^^^^^^^ PTH118
37 | os.sep.join(p, *q)
   |

full_name.py:37:1: PTH118 `os.sep.join()` should be replaced by `Path.joinpath()`
   |
35 | os.getcwdb(p)
36 | os.path.join(p, *q)
37 | os.sep.join(p, *q)
   | ^^^^^^^^^^^ PTH118
38 | 
39 | # https://github.com/astral-sh/ruff/issues/7620
   |

full_name.py:46:1: PTH123 `open()` should be replaced by `Path.open()`
   |
44 | open(p, closefd=False)
45 | open(p, opener=opener)
46 | open(p, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)
   | ^^^^ PTH123
47 | open(p, 'r', - 1, None, None, None, True, None)
48 | open(p, 'r', - 1, None, None, None, False, opener)
   |

full_name.py:47:1: PTH123 `open()` should be replaced by `Path.open()`
   |
45 | open(p, opener=opener)
46 | open(p, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)
47 | open(p, 'r', - 1, None, None, None, True, None)
   | ^^^^ PTH123
48 | open(p, 'r', - 1, None, None, None, False, opener)
   |


