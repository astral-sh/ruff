---
source: crates/ruff_linter/src/rules/flake8_use_pathlib/mod.rs
---
PTH100 `os.path.abspath()` should be replaced by `Path.resolve()`
 --> full_name.py:7:5
  |
5 | q = "bar"
6 |
7 | a = os.path.abspath(p)
  |     ^^^^^^^^^^^^^^^
8 | aa = os.chmod(p)
9 | aaa = os.mkdir(p)
  |
help: Replace with `Path(...).resolve()`

PTH101 `os.chmod()` should be replaced by `Path.chmod()`
  --> full_name.py:8:6
   |
 7 | a = os.path.abspath(p)
 8 | aa = os.chmod(p)
   |      ^^^^^^^^
 9 | aaa = os.mkdir(p)
10 | os.makedirs(p)
   |
help: Replace with `Path(...).chmod(...)`

PTH102 `os.mkdir()` should be replaced by `Path.mkdir()`
  --> full_name.py:9:7
   |
 7 | a = os.path.abspath(p)
 8 | aa = os.chmod(p)
 9 | aaa = os.mkdir(p)
   |       ^^^^^^^^
10 | os.makedirs(p)
11 | os.rename(p)
   |

PTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`
  --> full_name.py:10:1
   |
 8 | aa = os.chmod(p)
 9 | aaa = os.mkdir(p)
10 | os.makedirs(p)
   | ^^^^^^^^^^^
11 | os.rename(p)
12 | os.replace(p)
   |

PTH104 `os.rename()` should be replaced by `Path.rename()`
  --> full_name.py:11:1
   |
 9 | aaa = os.mkdir(p)
10 | os.makedirs(p)
11 | os.rename(p)
   | ^^^^^^^^^
12 | os.replace(p)
13 | os.rmdir(p)
   |
help: Replace with `Path(...).rename(...)`

PTH105 `os.replace()` should be replaced by `Path.replace()`
  --> full_name.py:12:1
   |
10 | os.makedirs(p)
11 | os.rename(p)
12 | os.replace(p)
   | ^^^^^^^^^^
13 | os.rmdir(p)
14 | os.remove(p)
   |
help: Replace with `Path(...).replace(...)`

PTH106 `os.rmdir()` should be replaced by `Path.rmdir()`
  --> full_name.py:13:1
   |
11 | os.rename(p)
12 | os.replace(p)
13 | os.rmdir(p)
   | ^^^^^^^^
14 | os.remove(p)
15 | os.unlink(p)
   |
help: Replace with `Path(...).rmdir()`

PTH107 `os.remove()` should be replaced by `Path.unlink()`
  --> full_name.py:14:1
   |
12 | os.replace(p)
13 | os.rmdir(p)
14 | os.remove(p)
   | ^^^^^^^^^
15 | os.unlink(p)
16 | os.getcwd(p)
   |
help: Replace with `Path(...).unlink()`

PTH108 `os.unlink()` should be replaced by `Path.unlink()`
  --> full_name.py:15:1
   |
13 | os.rmdir(p)
14 | os.remove(p)
15 | os.unlink(p)
   | ^^^^^^^^^
16 | os.getcwd(p)
17 | b = os.path.exists(p)
   |
help: Replace with `Path(...).unlink()`

PTH109 `os.getcwd()` should be replaced by `Path.cwd()`
  --> full_name.py:16:1
   |
14 | os.remove(p)
15 | os.unlink(p)
16 | os.getcwd(p)
   | ^^^^^^^^^
17 | b = os.path.exists(p)
18 | bb = os.path.expanduser(p)
   |
help: Replace with `Path.cwd()`

PTH110 `os.path.exists()` should be replaced by `Path.exists()`
  --> full_name.py:17:5
   |
15 | os.unlink(p)
16 | os.getcwd(p)
17 | b = os.path.exists(p)
   |     ^^^^^^^^^^^^^^
18 | bb = os.path.expanduser(p)
19 | bbb = os.path.isdir(p)
   |
help: Replace with `Path(...).exists()`

PTH111 `os.path.expanduser()` should be replaced by `Path.expanduser()`
  --> full_name.py:18:6
   |
16 | os.getcwd(p)
17 | b = os.path.exists(p)
18 | bb = os.path.expanduser(p)
   |      ^^^^^^^^^^^^^^^^^^
19 | bbb = os.path.isdir(p)
20 | bbbb = os.path.isfile(p)
   |
help: Replace with `Path(...).expanduser()`

PTH112 `os.path.isdir()` should be replaced by `Path.is_dir()`
  --> full_name.py:19:7
   |
17 | b = os.path.exists(p)
18 | bb = os.path.expanduser(p)
19 | bbb = os.path.isdir(p)
   |       ^^^^^^^^^^^^^
20 | bbbb = os.path.isfile(p)
21 | bbbbb = os.path.islink(p)
   |
help: Replace with `Path(...).is_dir()`

PTH113 `os.path.isfile()` should be replaced by `Path.is_file()`
  --> full_name.py:20:8
   |
18 | bb = os.path.expanduser(p)
19 | bbb = os.path.isdir(p)
20 | bbbb = os.path.isfile(p)
   |        ^^^^^^^^^^^^^^
21 | bbbbb = os.path.islink(p)
22 | os.readlink(p)
   |
help: Replace with `Path(...).is_file()`

PTH114 `os.path.islink()` should be replaced by `Path.is_symlink()`
  --> full_name.py:21:9
   |
19 | bbb = os.path.isdir(p)
20 | bbbb = os.path.isfile(p)
21 | bbbbb = os.path.islink(p)
   |         ^^^^^^^^^^^^^^
22 | os.readlink(p)
23 | os.stat(p)
   |
help: Replace with `Path(...).is_symlink()`

PTH115 `os.readlink()` should be replaced by `Path.readlink()`
  --> full_name.py:22:1
   |
20 | bbbb = os.path.isfile(p)
21 | bbbbb = os.path.islink(p)
22 | os.readlink(p)
   | ^^^^^^^^^^^
23 | os.stat(p)
24 | os.path.isabs(p)
   |
help: Replace with `Path(...).readlink()`

PTH116 `os.stat()` should be replaced by `Path.stat()`, `Path.owner()`, or `Path.group()`
  --> full_name.py:23:1
   |
21 | bbbbb = os.path.islink(p)
22 | os.readlink(p)
23 | os.stat(p)
   | ^^^^^^^
24 | os.path.isabs(p)
25 | os.path.join(p, q)
   |

PTH117 `os.path.isabs()` should be replaced by `Path.is_absolute()`
  --> full_name.py:24:1
   |
22 | os.readlink(p)
23 | os.stat(p)
24 | os.path.isabs(p)
   | ^^^^^^^^^^^^^
25 | os.path.join(p, q)
26 | os.sep.join([p, q])
   |
help: Replace with `Path(...).is_absolute()`

PTH118 `os.path.join()` should be replaced by `Path` with `/` operator
  --> full_name.py:25:1
   |
23 | os.stat(p)
24 | os.path.isabs(p)
25 | os.path.join(p, q)
   | ^^^^^^^^^^^^
26 | os.sep.join([p, q])
27 | os.sep.join((p, q))
   |

PTH118 `os.sep.join()` should be replaced by `Path` with `/` operator
  --> full_name.py:26:1
   |
24 | os.path.isabs(p)
25 | os.path.join(p, q)
26 | os.sep.join([p, q])
   | ^^^^^^^^^^^
27 | os.sep.join((p, q))
28 | os.path.basename(p)
   |

PTH118 `os.sep.join()` should be replaced by `Path` with `/` operator
  --> full_name.py:27:1
   |
25 | os.path.join(p, q)
26 | os.sep.join([p, q])
27 | os.sep.join((p, q))
   | ^^^^^^^^^^^
28 | os.path.basename(p)
29 | os.path.dirname(p)
   |

PTH119 `os.path.basename()` should be replaced by `Path.name`
  --> full_name.py:28:1
   |
26 | os.sep.join([p, q])
27 | os.sep.join((p, q))
28 | os.path.basename(p)
   | ^^^^^^^^^^^^^^^^
29 | os.path.dirname(p)
30 | os.path.samefile(p)
   |
help: Replace with `Path(...).name`

PTH120 `os.path.dirname()` should be replaced by `Path.parent`
  --> full_name.py:29:1
   |
27 | os.sep.join((p, q))
28 | os.path.basename(p)
29 | os.path.dirname(p)
   | ^^^^^^^^^^^^^^^
30 | os.path.samefile(p)
31 | os.path.splitext(p)
   |
help: Replace with `Path(...).parent`

PTH121 `os.path.samefile()` should be replaced by `Path.samefile()`
  --> full_name.py:30:1
   |
28 | os.path.basename(p)
29 | os.path.dirname(p)
30 | os.path.samefile(p)
   | ^^^^^^^^^^^^^^^^
31 | os.path.splitext(p)
32 | with open(p) as fp:
   |
help: Replace with `Path(...).samefile()`

PTH122 `os.path.splitext()` should be replaced by `Path.suffix`, `Path.stem`, and `Path.parent`
  --> full_name.py:31:1
   |
29 | os.path.dirname(p)
30 | os.path.samefile(p)
31 | os.path.splitext(p)
   | ^^^^^^^^^^^^^^^^
32 | with open(p) as fp:
33 |     fp.read()
   |

PTH123 `open()` should be replaced by `Path.open()`
  --> full_name.py:32:6
   |
30 | os.path.samefile(p)
31 | os.path.splitext(p)
32 | with open(p) as fp:
   |      ^^^^
33 |     fp.read()
34 | open(p).close()
   |

PTH123 `open()` should be replaced by `Path.open()`
  --> full_name.py:34:1
   |
32 | with open(p) as fp:
33 |     fp.read()
34 | open(p).close()
   | ^^^^
35 | os.getcwdb(p)
36 | os.path.join(p, *q)
   |

PTH109 `os.getcwd()` should be replaced by `Path.cwd()`
  --> full_name.py:35:1
   |
33 |     fp.read()
34 | open(p).close()
35 | os.getcwdb(p)
   | ^^^^^^^^^^
36 | os.path.join(p, *q)
37 | os.sep.join(p, *q)
   |
help: Replace with `Path.cwd()`

PTH118 `os.path.join()` should be replaced by `Path.joinpath()`
  --> full_name.py:36:1
   |
34 | open(p).close()
35 | os.getcwdb(p)
36 | os.path.join(p, *q)
   | ^^^^^^^^^^^^
37 | os.sep.join(p, *q)
   |

PTH118 `os.sep.join()` should be replaced by `Path.joinpath()`
  --> full_name.py:37:1
   |
35 | os.getcwdb(p)
36 | os.path.join(p, *q)
37 | os.sep.join(p, *q)
   | ^^^^^^^^^^^
38 |
39 | # https://github.com/astral-sh/ruff/issues/7620
   |

PTH123 `open()` should be replaced by `Path.open()`
  --> full_name.py:46:1
   |
44 | open(p, closefd=False)
45 | open(p, opener=opener)
46 | open(p, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)
   | ^^^^
47 | open(p, 'r', - 1, None, None, None, True, None)
48 | open(p, 'r', - 1, None, None, None, False, opener)
   |

PTH123 `open()` should be replaced by `Path.open()`
  --> full_name.py:47:1
   |
45 | open(p, opener=opener)
46 | open(p, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)
47 | open(p, 'r', - 1, None, None, None, True, None)
   | ^^^^
48 | open(p, 'r', - 1, None, None, None, False, opener)
   |

PTH123 `open()` should be replaced by `Path.open()`
  --> full_name.py:65:1
   |
63 | open(f())
64 |
65 | open(b"foo")
   | ^^^^
66 | byte_str = b"bar"
67 | open(byte_str)
   |

PTH123 `open()` should be replaced by `Path.open()`
  --> full_name.py:67:1
   |
65 | open(b"foo")
66 | byte_str = b"bar"
67 | open(byte_str)
   | ^^^^
68 |
69 | def bytes_str_func() -> bytes:
   |

PTH123 `open()` should be replaced by `Path.open()`
  --> full_name.py:71:1
   |
69 | def bytes_str_func() -> bytes:
70 |     return b"foo"
71 | open(bytes_str_func())
   | ^^^^
72 |
73 | # https://github.com/astral-sh/ruff/issues/17693
   |

PTH109 `os.getcwd()` should be replaced by `Path.cwd()`
   --> full_name.py:108:1
    |
106 | os.replace("src", "dst", dst_dir_fd=2)
107 |
108 | os.getcwd()
    | ^^^^^^^^^
109 | os.getcwdb()
    |
help: Replace with `Path.cwd()`

PTH109 `os.getcwd()` should be replaced by `Path.cwd()`
   --> full_name.py:109:1
    |
108 | os.getcwd()
109 | os.getcwdb()
    | ^^^^^^^^^^
    |
help: Replace with `Path.cwd()`
