---
source: crates/ruff_linter/src/rules/perflint/mod.rs
---
PERF401.py:6:13: PERF401 [*] Use a list comprehension to create a transformed list
  |
4 |     for i in items:
5 |         if i % 2:
6 |             result.append(i)  # PERF401
  |             ^^^^^^^^^^^^^^^^ PERF401
  |
  = help: Replace for loop with list comprehension

ℹ Unsafe fix
1 1 | def f():
2 2 |     items = [1, 2, 3, 4]
3   |-    result = []
4   |-    for i in items:
5   |-        if i % 2:
6   |-            result.append(i)  # PERF401
  3 |+    result = [i for i in items if i % 2]  # PERF401
7 4 | 
8 5 | 
9 6 | def f():

PERF401.py:13:9: PERF401 [*] Use a list comprehension to create a transformed list
   |
11 |     result = []
12 |     for i in items:
13 |         result.append(i * i)  # PERF401
   |         ^^^^^^^^^^^^^^^^^^^^ PERF401
   |
   = help: Replace for loop with list comprehension

ℹ Unsafe fix
8  8  | 
9  9  | def f():
10 10 |     items = [1, 2, 3, 4]
11    |-    result = []
12    |-    for i in items:
13    |-        result.append(i * i)  # PERF401
   11 |+    result = [i * i for i in items]  # PERF401
14 12 | 
15 13 | 
16 14 | def f():

PERF401.py:82:13: PERF401 [*] Use an async list comprehension to create a transformed list
   |
80 |     async for i in items:
81 |         if i % 2:
82 |             result.append(i)  # PERF401
   |             ^^^^^^^^^^^^^^^^ PERF401
   |
   = help: Replace for loop with list comprehension

ℹ Unsafe fix
76 76 | 
77 77 | def f():
78 78 |     items = [1, 2, 3, 4]
79    |-    result = []
80    |-    async for i in items:
81    |-        if i % 2:
82    |-            result.append(i)  # PERF401
   79 |+    result = [i async for i in items if i % 2]  # PERF401
83 80 | 
84 81 | 
85 82 | def f():

PERF401.py:89:9: PERF401 [*] Use an async list comprehension to create a transformed list
   |
87 |     result = []
88 |     async for i in items:
89 |         result.append(i)  # PERF401
   |         ^^^^^^^^^^^^^^^^ PERF401
   |
   = help: Replace for loop with list comprehension

ℹ Unsafe fix
84 84 | 
85 85 | def f():
86 86 |     items = [1, 2, 3, 4]
87    |-    result = []
88    |-    async for i in items:
89    |-        result.append(i)  # PERF401
   87 |+    result = [i async for i in items]  # PERF401
90 88 | 
91 89 | 
92 90 | def f():

PERF401.py:95:9: PERF401 [*] Use `list.extend` to create a transformed list
   |
93 |     result, _ = [1,2,3,4], ...
94 |     for i in range(10):
95 |         result.append(i*2)  # PERF401
   |         ^^^^^^^^^^^^^^^^^^ PERF401
   |
   = help: Replace for loop with list.extend

ℹ Unsafe fix
91 91 | 
92 92 | def f():
93 93 |     result, _ = [1,2,3,4], ...
94    |-    for i in range(10):
95    |-        result.append(i*2)  # PERF401
   94 |+    result.extend(i*2 for i in range(10))  # PERF401
96 95 | 
97 96 | 
98 97 | def f():

PERF401.py:104:17: PERF401 [*] Use `list.extend` to create a transformed list
    |
102 |             # single-line comment 2 should be protected
103 |             if i % 2: # single-line comment 3 should be protected 
104 |                 result.append(i) # PERF401
    |                 ^^^^^^^^^^^^^^^^ PERF401
    |
    = help: Replace for loop with list.extend

ℹ Unsafe fix
98  98  | def f():
99  99  |     result = []
100 100 |     if True:
101     |-        for i in range(10):  # single-line comment 1 should be protected
102     |-            # single-line comment 2 should be protected
103     |-            if i % 2: # single-line comment 3 should be protected 
104     |-                result.append(i) # PERF401
    101 |+        # single-line comment 1 should be protected
    102 |+        # single-line comment 2 should be protected
    103 |+        # single-line comment 3 should be protected 
    104 |+        result.extend(i for i in range(10) if i % 2) # PERF401
105 105 | 
106 106 | 
107 107 | def f():

PERF401.py:112:13: PERF401 [*] Use a list comprehension to create a transformed list
    |
110 |         # single-line comment 2 should be protected
111 |         if i % 2: # single-line comment 3 should be protected 
112 |             result.append(i) # PERF401
    |             ^^^^^^^^^^^^^^^^ PERF401
    |
    = help: Replace for loop with list comprehension

ℹ Unsafe fix
105 105 | 
106 106 | 
107 107 | def f():
108     |-    result = [] # comment after assignment should be protected
109     |-    for i in range(10):  # single-line comment 1 should be protected
110     |-        # single-line comment 2 should be protected
111     |-        if i % 2: # single-line comment 3 should be protected 
112     |-            result.append(i) # PERF401
    108 |+    # comment after assignment should be protected
    109 |+    # single-line comment 1 should be protected
    110 |+    # single-line comment 2 should be protected
    111 |+    # single-line comment 3 should be protected 
    112 |+    result = [i for i in range(10) if i % 2] # PERF401
113 113 | 
114 114 | 
115 115 | def f():

PERF401.py:127:13: PERF401 [*] Use a list comprehension to create a transformed list
    |
125 |         new_layers = []
126 |         for value in param:
127 |             new_layers.append(value * 3)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PERF401
128 | 
129 | def f():
    |
    = help: Replace for loop with list comprehension

ℹ Unsafe fix
122 122 |     # PERF401
123 123 |     # make sure the fix does not panic if there is no comments
124 124 |     if param:
125     |-        new_layers = []
126     |-        for value in param:
127     |-            new_layers.append(value * 3)
    125 |+        new_layers = [value * 3 for value in param]
128 126 | 
129 127 | def f():
130 128 |     result = []

PERF401.py:133:9: PERF401 [*] Use a list comprehension to create a transformed list
    |
131 |     var = 1
132 |     for _ in range(10):
133 |         result.append(var + 1) # PERF401
    |         ^^^^^^^^^^^^^^^^^^^^^^ PERF401
134 | 
135 | def f():
    |
    = help: Replace for loop with list comprehension

ℹ Unsafe fix
127 127 |             new_layers.append(value * 3)
128 128 | 
129 129 | def f():
130     |-    result = []
131 130 |     var = 1
132     |-    for _ in range(10):
133     |-        result.append(var + 1) # PERF401
    131 |+    result = [var + 1 for _ in range(10)] # PERF401
134 132 | 
135 133 | def f():
136 134 |     # make sure that `tmp` is not deleted

PERF401.py:139:9: PERF401 [*] Use a list comprehension to create a transformed list
    |
137 |     tmp = 1; result = [] # commment should be protected
138 |     for i in range(10):
139 |         result.append(i + 1) # PERF401
    |         ^^^^^^^^^^^^^^^^^^^^ PERF401
140 | 
141 | def f():
    |
    = help: Replace for loop with list comprehension

ℹ Unsafe fix
134 134 | 
135 135 | def f():
136 136 |     # make sure that `tmp` is not deleted
137     |-    tmp = 1; result = [] # commment should be protected
138     |-    for i in range(10):
139     |-        result.append(i + 1) # PERF401
    137 |+    # commment should be protected
    138 |+    result = [i + 1 for i in range(10)] # PERF401
140 139 | 
141 140 | def f():
142 141 |     # make sure that `tmp` is not deleted

PERF401.py:145:9: PERF401 [*] Use a list comprehension to create a transformed list
    |
143 |     result = []; tmp = 1 # commment should be protected
144 |     for i in range(10):
145 |         result.append(i + 1) # PERF401
    |         ^^^^^^^^^^^^^^^^^^^^ PERF401
    |
    = help: Replace for loop with list comprehension

ℹ Unsafe fix
140 140 | 
141 141 | def f():
142 142 |     # make sure that `tmp` is not deleted
143     |-    result = []; tmp = 1 # commment should be protected
144     |-    for i in range(10):
145     |-        result.append(i + 1) # PERF401
    143 |+    # commment should be protected
    144 |+    result = [i + 1 for i in range(10)] # PERF401
146 145 | 
147 146 | 
148 147 | def f():

PERF401.py:151:9: PERF401 [*] Use a list comprehension to create a transformed list
    |
149 |     result = [] # comment should be protected
150 |     for i in range(10):
151 |         result.append(i*2) # PERF401
    |         ^^^^^^^^^^^^^^^^^^ PERF401
    |
    = help: Replace for loop with list comprehension

ℹ Unsafe fix
146 146 | 
147 147 | 
148 148 | def f():
149     |-    result = [] # comment should be protected
150     |-    for i in range(10):
151     |-        result.append(i*2) # PERF401
    149 |+    # comment should be protected
    150 |+    result = [i*2 for i in range(10)] # PERF401
152 151 | 
153 152 | 
154 153 | def f():

PERF401.py:158:9: PERF401 [*] Use `list.extend` to create a transformed list
    |
156 |     result.append(1)
157 |     for i in range(10):
158 |         result.append(i*2) # PERF401
    |         ^^^^^^^^^^^^^^^^^^ PERF401
159 | 
160 | def f():
    |
    = help: Replace for loop with list.extend

ℹ Unsafe fix
154 154 | def f():
155 155 |     result = []
156 156 |     result.append(1)
157     |-    for i in range(10):
158     |-        result.append(i*2) # PERF401
    157 |+    result.extend(i*2 for i in range(10)) # PERF401
159 158 | 
160 159 | def f():
161 160 |     result = []

PERF401.py:169:9: PERF401 [*] Use a list comprehension to create a transformed list
    |
167 |     result = []
168 |     for val in range(5):
169 |         result.append(val * 2) # Ok
    |         ^^^^^^^^^^^^^^^^^^^^^^ PERF401
170 |     print(val)
    |
    = help: Replace for loop with list comprehension

ℹ Unsafe fix
164 164 |         result.append(i*2) # PERF401
165 165 | 
166 166 | def f():
167     |-    result = []
168     |-    for val in range(5):
169     |-        result.append(val * 2) # Ok
    167 |+    result = [val * 2 for val in range(5)] # Ok
170 168 |     print(val)
