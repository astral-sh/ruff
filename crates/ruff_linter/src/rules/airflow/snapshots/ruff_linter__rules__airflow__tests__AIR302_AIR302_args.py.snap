---
source: crates/ruff_linter/src/rules/airflow/mod.rs
snapshot_kind: text
---
AIR302_args.py:18:39: AIR302 [*] `schedule_interval` is removed in Airflow 3.0
   |
16 | DAG(dag_id="class_schedule", schedule="@hourly")
17 |
18 | DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
   |                                       ^^^^^^^^^^^^^^^^^ AIR302
19 |
20 | DAG(dag_id="class_timetable", timetable=NullTimetable())
   |
   = help: Use `schedule` instead

ℹ Safe fix
15 15 | 
16 16 | DAG(dag_id="class_schedule", schedule="@hourly")
17 17 | 
18    |-DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
   18 |+DAG(dag_id="class_schedule_interval", schedule="@hourly")
19 19 | 
20 20 | DAG(dag_id="class_timetable", timetable=NullTimetable())
21 21 | 

AIR302_args.py:20:31: AIR302 [*] `timetable` is removed in Airflow 3.0
   |
18 | DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
19 |
20 | DAG(dag_id="class_timetable", timetable=NullTimetable())
   |                               ^^^^^^^^^ AIR302
   |
   = help: Use `schedule` instead

ℹ Safe fix
17 17 | 
18 18 | DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
19 19 | 
20    |-DAG(dag_id="class_timetable", timetable=NullTimetable())
   20 |+DAG(dag_id="class_timetable", schedule=NullTimetable())
21 21 | 
22 22 | 
23 23 | def sla_callback(*arg, **kwargs):

AIR302_args.py:27:34: AIR302 `sla_miss_callback` is removed in Airflow 3.0
   |
27 | DAG(dag_id="class_sla_callback", sla_miss_callback=sla_callback)
   |                                  ^^^^^^^^^^^^^^^^^ AIR302
28 |
29 | DAG(dag_id="class_sla_callback", fail_stop=True)
   |

AIR302_args.py:29:34: AIR302 [*] `fail_stop` is removed in Airflow 3.0
   |
27 | DAG(dag_id="class_sla_callback", sla_miss_callback=sla_callback)
28 |
29 | DAG(dag_id="class_sla_callback", fail_stop=True)
   |                                  ^^^^^^^^^ AIR302
   |
   = help: Use `fail_fast` instead

ℹ Safe fix
26 26 | 
27 27 | DAG(dag_id="class_sla_callback", sla_miss_callback=sla_callback)
28 28 | 
29    |-DAG(dag_id="class_sla_callback", fail_stop=True)
   29 |+DAG(dag_id="class_sla_callback", fail_fast=True)
30 30 | 
31 31 | 
32 32 | @dag(schedule="0 * * * *")

AIR302_args.py:37:6: AIR302 [*] `schedule_interval` is removed in Airflow 3.0
   |
37 | @dag(schedule_interval="0 * * * *")
   |      ^^^^^^^^^^^^^^^^^ AIR302
38 | def decorator_schedule_interval():
39 |     pass
   |
   = help: Use `schedule` instead

ℹ Safe fix
34 34 |     pass
35 35 | 
36 36 | 
37    |-@dag(schedule_interval="0 * * * *")
   37 |+@dag(schedule="0 * * * *")
38 38 | def decorator_schedule_interval():
39 39 |     pass
40 40 | 

AIR302_args.py:42:6: AIR302 [*] `timetable` is removed in Airflow 3.0
   |
42 | @dag(timetable=NullTimetable())
   |      ^^^^^^^^^ AIR302
43 | def decorator_timetable():
44 |     pass
   |
   = help: Use `schedule` instead

ℹ Safe fix
39 39 |     pass
40 40 | 
41 41 | 
42    |-@dag(timetable=NullTimetable())
   42 |+@dag(schedule=NullTimetable())
43 43 | def decorator_timetable():
44 44 |     pass
45 45 | 

AIR302_args.py:47:6: AIR302 `sla_miss_callback` is removed in Airflow 3.0
   |
47 | @dag(sla_miss_callback=sla_callback)
   |      ^^^^^^^^^^^^^^^^^ AIR302
48 | def decorator_sla_callback():
49 |     pass
   |

AIR302_args.py:55:39: AIR302 [*] `execution_date` is removed in Airflow 3.0
   |
53 | def decorator_deprecated_operator_args():
54 |     trigger_dagrun_op = trigger_dagrun.TriggerDagRunOperator(
55 |         task_id="trigger_dagrun_op1", execution_date="2024-12-04"
   |                                       ^^^^^^^^^^^^^^ AIR302
56 |     )
57 |     trigger_dagrun_op2 = TriggerDagRunOperator(
   |
   = help: Use `logical_date` instead

ℹ Safe fix
52 52 | @dag()
53 53 | def decorator_deprecated_operator_args():
54 54 |     trigger_dagrun_op = trigger_dagrun.TriggerDagRunOperator(
55    |-        task_id="trigger_dagrun_op1", execution_date="2024-12-04"
   55 |+        task_id="trigger_dagrun_op1", logical_date="2024-12-04"
56 56 |     )
57 57 |     trigger_dagrun_op2 = TriggerDagRunOperator(
58 58 |         task_id="trigger_dagrun_op2", execution_date="2024-12-04"

AIR302_args.py:58:39: AIR302 [*] `execution_date` is removed in Airflow 3.0
   |
56 |     )
57 |     trigger_dagrun_op2 = TriggerDagRunOperator(
58 |         task_id="trigger_dagrun_op2", execution_date="2024-12-04"
   |                                       ^^^^^^^^^^^^^^ AIR302
59 |     )
   |
   = help: Use `logical_date` instead

ℹ Safe fix
55 55 |         task_id="trigger_dagrun_op1", execution_date="2024-12-04"
56 56 |     )
57 57 |     trigger_dagrun_op2 = TriggerDagRunOperator(
58    |-        task_id="trigger_dagrun_op2", execution_date="2024-12-04"
   58 |+        task_id="trigger_dagrun_op2", logical_date="2024-12-04"
59 59 |     )
60 60 | 
61 61 |     branch_dt_op = datetime.BranchDateTimeOperator(

AIR302_args.py:62:33: AIR302 [*] `use_task_execution_day` is removed in Airflow 3.0
   |
61 |     branch_dt_op = datetime.BranchDateTimeOperator(
62 |         task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   |                                 ^^^^^^^^^^^^^^^^^^^^^^ AIR302
63 |     )
64 |     branch_dt_op2 = BranchDateTimeOperator(
   |
   = help: Use `use_task_logical_date` instead

ℹ Safe fix
59 59 |     )
60 60 | 
61 61 |     branch_dt_op = datetime.BranchDateTimeOperator(
62    |-        task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   62 |+        task_id="branch_dt_op", use_task_logical_date=True, task_concurrency=5
63 63 |     )
64 64 |     branch_dt_op2 = BranchDateTimeOperator(
65 65 |         task_id="branch_dt_op2",

AIR302_args.py:62:62: AIR302 [*] `task_concurrency` is removed in Airflow 3.0
   |
61 |     branch_dt_op = datetime.BranchDateTimeOperator(
62 |         task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   |                                                              ^^^^^^^^^^^^^^^^ AIR302
63 |     )
64 |     branch_dt_op2 = BranchDateTimeOperator(
   |
   = help: Use `max_active_tis_per_dag` instead

ℹ Safe fix
59 59 |     )
60 60 | 
61 61 |     branch_dt_op = datetime.BranchDateTimeOperator(
62    |-        task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   62 |+        task_id="branch_dt_op", use_task_execution_day=True, max_active_tis_per_dag=5
63 63 |     )
64 64 |     branch_dt_op2 = BranchDateTimeOperator(
65 65 |         task_id="branch_dt_op2",

AIR302_args.py:66:9: AIR302 [*] `use_task_execution_day` is removed in Airflow 3.0
   |
64 |     branch_dt_op2 = BranchDateTimeOperator(
65 |         task_id="branch_dt_op2",
66 |         use_task_execution_day=True,
   |         ^^^^^^^^^^^^^^^^^^^^^^ AIR302
67 |         sla=timedelta(seconds=10),
68 |     )
   |
   = help: Use `use_task_logical_date` instead

ℹ Safe fix
63 63 |     )
64 64 |     branch_dt_op2 = BranchDateTimeOperator(
65 65 |         task_id="branch_dt_op2",
66    |-        use_task_execution_day=True,
   66 |+        use_task_logical_date=True,
67 67 |         sla=timedelta(seconds=10),
68 68 |     )
69 69 | 

AIR302_args.py:67:9: AIR302 `sla` is removed in Airflow 3.0
   |
65 |         task_id="branch_dt_op2",
66 |         use_task_execution_day=True,
67 |         sla=timedelta(seconds=10),
   |         ^^^ AIR302
68 |     )
   |

AIR302_args.py:89:15: AIR302 `filename_template` is removed in Airflow 3.0
   |
88 | # deprecated filename_template arugment in FileTaskHandler
89 | S3TaskHandler(filename_template="/tmp/test")
   |               ^^^^^^^^^^^^^^^^^ AIR302
90 | HdfsTaskHandler(filename_template="/tmp/test")
91 | ElasticsearchTaskHandler(filename_template="/tmp/test")
   |

AIR302_args.py:90:17: AIR302 `filename_template` is removed in Airflow 3.0
   |
88 | # deprecated filename_template arugment in FileTaskHandler
89 | S3TaskHandler(filename_template="/tmp/test")
90 | HdfsTaskHandler(filename_template="/tmp/test")
   |                 ^^^^^^^^^^^^^^^^^ AIR302
91 | ElasticsearchTaskHandler(filename_template="/tmp/test")
92 | GCSTaskHandler(filename_template="/tmp/test")
   |

AIR302_args.py:91:26: AIR302 `filename_template` is removed in Airflow 3.0
   |
89 | S3TaskHandler(filename_template="/tmp/test")
90 | HdfsTaskHandler(filename_template="/tmp/test")
91 | ElasticsearchTaskHandler(filename_template="/tmp/test")
   |                          ^^^^^^^^^^^^^^^^^ AIR302
92 | GCSTaskHandler(filename_template="/tmp/test")
   |

AIR302_args.py:92:16: AIR302 `filename_template` is removed in Airflow 3.0
   |
90 | HdfsTaskHandler(filename_template="/tmp/test")
91 | ElasticsearchTaskHandler(filename_template="/tmp/test")
92 | GCSTaskHandler(filename_template="/tmp/test")
   |                ^^^^^^^^^^^^^^^^^ AIR302
93 |
94 | FabAuthManager(None)
   |

AIR302_args.py:94:15: AIR302 `appbuilder` is removed in Airflow 3.0; The constructor takes no parameter now
   |
92 | GCSTaskHandler(filename_template="/tmp/test")
93 |
94 | FabAuthManager(None)
   |               ^^^^^^ AIR302
   |
