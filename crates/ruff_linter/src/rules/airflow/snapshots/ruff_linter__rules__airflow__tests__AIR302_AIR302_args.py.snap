---
source: crates/ruff_linter/src/rules/airflow/mod.rs
snapshot_kind: text
---
AIR302_args.py:20:39: AIR302 [*] `schedule_interval` is removed in Airflow 3.0
   |
18 | DAG(dag_id="class_schedule", schedule="@hourly")
19 |
20 | DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
   |                                       ^^^^^^^^^^^^^^^^^ AIR302
21 |
22 | DAG(dag_id="class_timetable", timetable=NullTimetable())
   |
   = help: Use `schedule` instead

ℹ Safe fix
17 17 | 
18 18 | DAG(dag_id="class_schedule", schedule="@hourly")
19 19 | 
20    |-DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
   20 |+DAG(dag_id="class_schedule_interval", schedule="@hourly")
21 21 | 
22 22 | DAG(dag_id="class_timetable", timetable=NullTimetable())
23 23 | 

AIR302_args.py:22:31: AIR302 [*] `timetable` is removed in Airflow 3.0
   |
20 | DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
21 |
22 | DAG(dag_id="class_timetable", timetable=NullTimetable())
   |                               ^^^^^^^^^ AIR302
   |
   = help: Use `schedule` instead

ℹ Safe fix
19 19 | 
20 20 | DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
21 21 | 
22    |-DAG(dag_id="class_timetable", timetable=NullTimetable())
   22 |+DAG(dag_id="class_timetable", schedule=NullTimetable())
23 23 | 
24 24 | 
25 25 | def sla_callback(*arg, **kwargs):

AIR302_args.py:29:34: AIR302 `sla_miss_callback` is removed in Airflow 3.0
   |
29 | DAG(dag_id="class_sla_callback", sla_miss_callback=sla_callback)
   |                                  ^^^^^^^^^^^^^^^^^ AIR302
30 |
31 | DAG(dag_id="class_fail_stop", fail_stop=True)
   |

AIR302_args.py:31:31: AIR302 [*] `fail_stop` is removed in Airflow 3.0
   |
29 | DAG(dag_id="class_sla_callback", sla_miss_callback=sla_callback)
30 |
31 | DAG(dag_id="class_fail_stop", fail_stop=True)
   |                               ^^^^^^^^^ AIR302
32 |
33 | DAG(dag_id="class_default_view", default_view="dag_default_view")
   |
   = help: Use `fail_fast` instead

ℹ Safe fix
28 28 | 
29 29 | DAG(dag_id="class_sla_callback", sla_miss_callback=sla_callback)
30 30 | 
31    |-DAG(dag_id="class_fail_stop", fail_stop=True)
   31 |+DAG(dag_id="class_fail_stop", fail_fast=True)
32 32 | 
33 33 | DAG(dag_id="class_default_view", default_view="dag_default_view")
34 34 | 

AIR302_args.py:33:34: AIR302 `default_view` is removed in Airflow 3.0
   |
31 | DAG(dag_id="class_fail_stop", fail_stop=True)
32 |
33 | DAG(dag_id="class_default_view", default_view="dag_default_view")
   |                                  ^^^^^^^^^^^^ AIR302
34 |
35 | DAG(dag_id="class_orientation", orientation="BT")
   |

AIR302_args.py:35:33: AIR302 `orientation` is removed in Airflow 3.0
   |
33 | DAG(dag_id="class_default_view", default_view="dag_default_view")
34 |
35 | DAG(dag_id="class_orientation", orientation="BT")
   |                                 ^^^^^^^^^^^ AIR302
36 |
37 | allow_future_exec_dates_dag = DAG(dag_id="class_allow_future_exec_dates")
   |

AIR302_args.py:38:29: AIR302 `allow_future_exec_dates` is removed in Airflow 3.0
   |
37 | allow_future_exec_dates_dag = DAG(dag_id="class_allow_future_exec_dates")
38 | allow_future_exec_dates_dag.allow_future_exec_dates
   |                             ^^^^^^^^^^^^^^^^^^^^^^^ AIR302
   |

AIR302_args.py:46:6: AIR302 [*] `schedule_interval` is removed in Airflow 3.0
   |
46 | @dag(schedule_interval="0 * * * *")
   |      ^^^^^^^^^^^^^^^^^ AIR302
47 | def decorator_schedule_interval():
48 |     pass
   |
   = help: Use `schedule` instead

ℹ Safe fix
43 43 |     pass
44 44 | 
45 45 | 
46    |-@dag(schedule_interval="0 * * * *")
   46 |+@dag(schedule="0 * * * *")
47 47 | def decorator_schedule_interval():
48 48 |     pass
49 49 | 

AIR302_args.py:51:6: AIR302 [*] `timetable` is removed in Airflow 3.0
   |
51 | @dag(timetable=NullTimetable())
   |      ^^^^^^^^^ AIR302
52 | def decorator_timetable():
53 |     pass
   |
   = help: Use `schedule` instead

ℹ Safe fix
48 48 |     pass
49 49 | 
50 50 | 
51    |-@dag(timetable=NullTimetable())
   51 |+@dag(schedule=NullTimetable())
52 52 | def decorator_timetable():
53 53 |     pass
54 54 | 

AIR302_args.py:56:6: AIR302 `sla_miss_callback` is removed in Airflow 3.0
   |
56 | @dag(sla_miss_callback=sla_callback)
   |      ^^^^^^^^^^^^^^^^^ AIR302
57 | def decorator_sla_callback():
58 |     pass
   |

AIR302_args.py:64:39: AIR302 [*] `execution_date` is removed in Airflow 3.0
   |
62 | def decorator_deprecated_operator_args():
63 |     trigger_dagrun_op = trigger_dagrun.TriggerDagRunOperator(
64 |         task_id="trigger_dagrun_op1", execution_date="2024-12-04"
   |                                       ^^^^^^^^^^^^^^ AIR302
65 |     )
66 |     trigger_dagrun_op2 = TriggerDagRunOperator(
   |
   = help: Use `logical_date` instead

ℹ Safe fix
61 61 | @dag()
62 62 | def decorator_deprecated_operator_args():
63 63 |     trigger_dagrun_op = trigger_dagrun.TriggerDagRunOperator(
64    |-        task_id="trigger_dagrun_op1", execution_date="2024-12-04"
   64 |+        task_id="trigger_dagrun_op1", logical_date="2024-12-04"
65 65 |     )
66 66 |     trigger_dagrun_op2 = TriggerDagRunOperator(
67 67 |         task_id="trigger_dagrun_op2", execution_date="2024-12-04"

AIR302_args.py:67:39: AIR302 [*] `execution_date` is removed in Airflow 3.0
   |
65 |     )
66 |     trigger_dagrun_op2 = TriggerDagRunOperator(
67 |         task_id="trigger_dagrun_op2", execution_date="2024-12-04"
   |                                       ^^^^^^^^^^^^^^ AIR302
68 |     )
   |
   = help: Use `logical_date` instead

ℹ Safe fix
64 64 |         task_id="trigger_dagrun_op1", execution_date="2024-12-04"
65 65 |     )
66 66 |     trigger_dagrun_op2 = TriggerDagRunOperator(
67    |-        task_id="trigger_dagrun_op2", execution_date="2024-12-04"
   67 |+        task_id="trigger_dagrun_op2", logical_date="2024-12-04"
68 68 |     )
69 69 | 
70 70 |     branch_dt_op = datetime.BranchDateTimeOperator(

AIR302_args.py:71:33: AIR302 [*] `use_task_execution_day` is removed in Airflow 3.0
   |
70 |     branch_dt_op = datetime.BranchDateTimeOperator(
71 |         task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   |                                 ^^^^^^^^^^^^^^^^^^^^^^ AIR302
72 |     )
73 |     branch_dt_op2 = BranchDateTimeOperator(
   |
   = help: Use `use_task_logical_date` instead

ℹ Safe fix
68 68 |     )
69 69 | 
70 70 |     branch_dt_op = datetime.BranchDateTimeOperator(
71    |-        task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   71 |+        task_id="branch_dt_op", use_task_logical_date=True, task_concurrency=5
72 72 |     )
73 73 |     branch_dt_op2 = BranchDateTimeOperator(
74 74 |         task_id="branch_dt_op2",

AIR302_args.py:71:62: AIR302 [*] `task_concurrency` is removed in Airflow 3.0
   |
70 |     branch_dt_op = datetime.BranchDateTimeOperator(
71 |         task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   |                                                              ^^^^^^^^^^^^^^^^ AIR302
72 |     )
73 |     branch_dt_op2 = BranchDateTimeOperator(
   |
   = help: Use `max_active_tis_per_dag` instead

ℹ Safe fix
68 68 |     )
69 69 | 
70 70 |     branch_dt_op = datetime.BranchDateTimeOperator(
71    |-        task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   71 |+        task_id="branch_dt_op", use_task_execution_day=True, max_active_tis_per_dag=5
72 72 |     )
73 73 |     branch_dt_op2 = BranchDateTimeOperator(
74 74 |         task_id="branch_dt_op2",

AIR302_args.py:75:9: AIR302 [*] `use_task_execution_day` is removed in Airflow 3.0
   |
73 |     branch_dt_op2 = BranchDateTimeOperator(
74 |         task_id="branch_dt_op2",
75 |         use_task_execution_day=True,
   |         ^^^^^^^^^^^^^^^^^^^^^^ AIR302
76 |         sla=timedelta(seconds=10),
77 |     )
   |
   = help: Use `use_task_logical_date` instead

ℹ Safe fix
72 72 |     )
73 73 |     branch_dt_op2 = BranchDateTimeOperator(
74 74 |         task_id="branch_dt_op2",
75    |-        use_task_execution_day=True,
   75 |+        use_task_logical_date=True,
76 76 |         sla=timedelta(seconds=10),
77 77 |     )
78 78 | 

AIR302_args.py:76:9: AIR302 `sla` is removed in Airflow 3.0
   |
74 |         task_id="branch_dt_op2",
75 |         use_task_execution_day=True,
76 |         sla=timedelta(seconds=10),
   |         ^^^ AIR302
77 |     )
   |

AIR302_args.py:98:15: AIR302 `filename_template` is removed in Airflow 3.0
    |
 97 | # deprecated filename_template argument in FileTaskHandler
 98 | S3TaskHandler(filename_template="/tmp/test")
    |               ^^^^^^^^^^^^^^^^^ AIR302
 99 | HdfsTaskHandler(filename_template="/tmp/test")
100 | ElasticsearchTaskHandler(filename_template="/tmp/test")
    |

AIR302_args.py:99:17: AIR302 `filename_template` is removed in Airflow 3.0
    |
 97 | # deprecated filename_template argument in FileTaskHandler
 98 | S3TaskHandler(filename_template="/tmp/test")
 99 | HdfsTaskHandler(filename_template="/tmp/test")
    |                 ^^^^^^^^^^^^^^^^^ AIR302
100 | ElasticsearchTaskHandler(filename_template="/tmp/test")
101 | GCSTaskHandler(filename_template="/tmp/test")
    |

AIR302_args.py:100:26: AIR302 `filename_template` is removed in Airflow 3.0
    |
 98 | S3TaskHandler(filename_template="/tmp/test")
 99 | HdfsTaskHandler(filename_template="/tmp/test")
100 | ElasticsearchTaskHandler(filename_template="/tmp/test")
    |                          ^^^^^^^^^^^^^^^^^ AIR302
101 | GCSTaskHandler(filename_template="/tmp/test")
    |

AIR302_args.py:101:16: AIR302 `filename_template` is removed in Airflow 3.0
    |
 99 | HdfsTaskHandler(filename_template="/tmp/test")
100 | ElasticsearchTaskHandler(filename_template="/tmp/test")
101 | GCSTaskHandler(filename_template="/tmp/test")
    |                ^^^^^^^^^^^^^^^^^ AIR302
102 |
103 | FabAuthManager(None)
    |

AIR302_args.py:103:15: AIR302 `appbuilder` is removed in Airflow 3.0; The constructor takes no parameter now
    |
101 | GCSTaskHandler(filename_template="/tmp/test")
102 |
103 | FabAuthManager(None)
    |               ^^^^^^ AIR302
    |
