---
source: crates/ruff_linter/src/rules/airflow/mod.rs
---
AIR302 [*] `airflow.hooks.S3_hook.S3Hook` is moved into `amazon` provider in Airflow 3.0;
  --> AIR302_amazon.py:14:1
   |
12 | from airflow.sensors.s3_key_sensor import S3KeySensor
13 |
14 | S3Hook()
   | ^^^^^^
15 | provide_bucket_name()
   |
help: Install `apache-airflow-providers-amazon>=1.0.0` and use `S3Hook` from `airflow.providers.amazon.aws.hooks.s3` instead.
1  | from __future__ import annotations
2  | 
3  | from airflow.hooks.S3_hook import (
   -     S3Hook,
4  |     provide_bucket_name,
5  | )
6  | from airflow.operators.gcs_to_s3 import GCSToS3Operator
--------------------------------------------------------------------------------
9  | from airflow.operators.s3_file_transform_operator import S3FileTransformOperator
10 | from airflow.operators.s3_to_redshift_operator import S3ToRedshiftOperator
11 | from airflow.sensors.s3_key_sensor import S3KeySensor
12 + from airflow.providers.amazon.aws.hooks.s3 import S3Hook
13 | 
14 | S3Hook()
15 | provide_bucket_name()
note: This is an unsafe fix and may remove comments or change runtime behavior

AIR302 [*] `airflow.hooks.S3_hook.provide_bucket_name` is moved into `amazon` provider in Airflow 3.0;
  --> AIR302_amazon.py:15:1
   |
14 | S3Hook()
15 | provide_bucket_name()
   | ^^^^^^^^^^^^^^^^^^^
16 |
17 | GCSToS3Operator()
   |
help: Install `apache-airflow-providers-amazon>=1.0.0` and use `provide_bucket_name` from `airflow.providers.amazon.aws.hooks.s3` instead.
2  | 
3  | from airflow.hooks.S3_hook import (
4  |     S3Hook,
   -     provide_bucket_name,
5  | )
6  | from airflow.operators.gcs_to_s3 import GCSToS3Operator
7  | from airflow.operators.google_api_to_s3_transfer import GoogleApiToS3Operator
--------------------------------------------------------------------------------
9  | from airflow.operators.s3_file_transform_operator import S3FileTransformOperator
10 | from airflow.operators.s3_to_redshift_operator import S3ToRedshiftOperator
11 | from airflow.sensors.s3_key_sensor import S3KeySensor
12 + from airflow.providers.amazon.aws.hooks.s3 import provide_bucket_name
13 | 
14 | S3Hook()
15 | provide_bucket_name()
note: This is an unsafe fix and may remove comments or change runtime behavior

AIR302 [*] `airflow.operators.gcs_to_s3.GCSToS3Operator` is moved into `amazon` provider in Airflow 3.0;
  --> AIR302_amazon.py:17:1
   |
15 | provide_bucket_name()
16 |
17 | GCSToS3Operator()
   | ^^^^^^^^^^^^^^^
18 | GoogleApiToS3Operator()
19 | RedshiftToS3Operator()
   |
help: Install `apache-airflow-providers-amazon>=1.0.0` and use `GCSToS3Operator` from `airflow.providers.amazon.aws.transfers.gcs_to_s3` instead.
4  |     S3Hook,
5  |     provide_bucket_name,
6  | )
   - from airflow.operators.gcs_to_s3 import GCSToS3Operator
7  | from airflow.operators.google_api_to_s3_transfer import GoogleApiToS3Operator
8  | from airflow.operators.redshift_to_s3_operator import RedshiftToS3Operator
9  | from airflow.operators.s3_file_transform_operator import S3FileTransformOperator
10 | from airflow.operators.s3_to_redshift_operator import S3ToRedshiftOperator
11 | from airflow.sensors.s3_key_sensor import S3KeySensor
12 + from airflow.providers.amazon.aws.transfers.gcs_to_s3 import GCSToS3Operator
13 | 
14 | S3Hook()
15 | provide_bucket_name()
note: This is an unsafe fix and may remove comments or change runtime behavior

AIR302 [*] `airflow.operators.google_api_to_s3_transfer.GoogleApiToS3Operator` is moved into `amazon` provider in Airflow 3.0;
  --> AIR302_amazon.py:18:1
   |
17 | GCSToS3Operator()
18 | GoogleApiToS3Operator()
   | ^^^^^^^^^^^^^^^^^^^^^
19 | RedshiftToS3Operator()
20 | S3FileTransformOperator()
   |
help: Install `apache-airflow-providers-amazon>=1.0.0` and use `GoogleApiToS3Operator` from `airflow.providers.amazon.aws.transfers.google_api_to_s3` instead.
5  |     provide_bucket_name,
6  | )
7  | from airflow.operators.gcs_to_s3 import GCSToS3Operator
   - from airflow.operators.google_api_to_s3_transfer import GoogleApiToS3Operator
8  | from airflow.operators.redshift_to_s3_operator import RedshiftToS3Operator
9  | from airflow.operators.s3_file_transform_operator import S3FileTransformOperator
10 | from airflow.operators.s3_to_redshift_operator import S3ToRedshiftOperator
11 | from airflow.sensors.s3_key_sensor import S3KeySensor
12 + from airflow.providers.amazon.aws.transfers.google_api_to_s3 import GoogleApiToS3Operator
13 | 
14 | S3Hook()
15 | provide_bucket_name()
note: This is an unsafe fix and may remove comments or change runtime behavior

AIR302 [*] `airflow.operators.redshift_to_s3_operator.RedshiftToS3Operator` is moved into `amazon` provider in Airflow 3.0;
  --> AIR302_amazon.py:19:1
   |
17 | GCSToS3Operator()
18 | GoogleApiToS3Operator()
19 | RedshiftToS3Operator()
   | ^^^^^^^^^^^^^^^^^^^^
20 | S3FileTransformOperator()
21 | S3ToRedshiftOperator()
   |
help: Install `apache-airflow-providers-amazon>=1.0.0` and use `RedshiftToS3Operator` from `airflow.providers.amazon.aws.transfers.redshift_to_s3` instead.
6  | )
7  | from airflow.operators.gcs_to_s3 import GCSToS3Operator
8  | from airflow.operators.google_api_to_s3_transfer import GoogleApiToS3Operator
   - from airflow.operators.redshift_to_s3_operator import RedshiftToS3Operator
9  | from airflow.operators.s3_file_transform_operator import S3FileTransformOperator
10 | from airflow.operators.s3_to_redshift_operator import S3ToRedshiftOperator
11 | from airflow.sensors.s3_key_sensor import S3KeySensor
12 + from airflow.providers.amazon.aws.transfers.redshift_to_s3 import RedshiftToS3Operator
13 | 
14 | S3Hook()
15 | provide_bucket_name()
note: This is an unsafe fix and may remove comments or change runtime behavior

AIR302 [*] `airflow.operators.s3_file_transform_operator.S3FileTransformOperator` is moved into `amazon` provider in Airflow 3.0;
  --> AIR302_amazon.py:20:1
   |
18 | GoogleApiToS3Operator()
19 | RedshiftToS3Operator()
20 | S3FileTransformOperator()
   | ^^^^^^^^^^^^^^^^^^^^^^^
21 | S3ToRedshiftOperator()
22 | S3KeySensor()
   |
help: Install `apache-airflow-providers-amazon>=3.0.0` and use `S3FileTransformOperator` from `airflow.providers.amazon.aws.operators.s3` instead.
7  | from airflow.operators.gcs_to_s3 import GCSToS3Operator
8  | from airflow.operators.google_api_to_s3_transfer import GoogleApiToS3Operator
9  | from airflow.operators.redshift_to_s3_operator import RedshiftToS3Operator
   - from airflow.operators.s3_file_transform_operator import S3FileTransformOperator
10 | from airflow.operators.s3_to_redshift_operator import S3ToRedshiftOperator
11 | from airflow.sensors.s3_key_sensor import S3KeySensor
12 + from airflow.providers.amazon.aws.operators.s3 import S3FileTransformOperator
13 | 
14 | S3Hook()
15 | provide_bucket_name()
note: This is an unsafe fix and may remove comments or change runtime behavior

AIR302 [*] `airflow.operators.s3_to_redshift_operator.S3ToRedshiftOperator` is moved into `amazon` provider in Airflow 3.0;
  --> AIR302_amazon.py:21:1
   |
19 | RedshiftToS3Operator()
20 | S3FileTransformOperator()
21 | S3ToRedshiftOperator()
   | ^^^^^^^^^^^^^^^^^^^^
22 | S3KeySensor()
   |
help: Install `apache-airflow-providers-amazon>=1.0.0` and use `S3ToRedshiftOperator` from `airflow.providers.amazon.aws.transfers.s3_to_redshift` instead.
8  | from airflow.operators.google_api_to_s3_transfer import GoogleApiToS3Operator
9  | from airflow.operators.redshift_to_s3_operator import RedshiftToS3Operator
10 | from airflow.operators.s3_file_transform_operator import S3FileTransformOperator
   - from airflow.operators.s3_to_redshift_operator import S3ToRedshiftOperator
11 | from airflow.sensors.s3_key_sensor import S3KeySensor
12 + from airflow.providers.amazon.aws.transfers.s3_to_redshift import S3ToRedshiftOperator
13 | 
14 | S3Hook()
15 | provide_bucket_name()
note: This is an unsafe fix and may remove comments or change runtime behavior

AIR302 [*] `airflow.sensors.s3_key_sensor.S3KeySensor` is moved into `amazon` provider in Airflow 3.0;
  --> AIR302_amazon.py:22:1
   |
20 | S3FileTransformOperator()
21 | S3ToRedshiftOperator()
22 | S3KeySensor()
   | ^^^^^^^^^^^
23 |
24 | from airflow.operators.google_api_to_s3_transfer import GoogleApiToS3Transfer
   |
help: Install `apache-airflow-providers-amazon>=1.0.0` and use `S3KeySensor` from `airflow.providers.amazon.aws.sensors.s3` instead.
9  | from airflow.operators.redshift_to_s3_operator import RedshiftToS3Operator
10 | from airflow.operators.s3_file_transform_operator import S3FileTransformOperator
11 | from airflow.operators.s3_to_redshift_operator import S3ToRedshiftOperator
   - from airflow.sensors.s3_key_sensor import S3KeySensor
12 + from airflow.providers.amazon.aws.sensors.s3 import S3KeySensor
13 | 
14 | S3Hook()
15 | provide_bucket_name()
note: This is an unsafe fix and may remove comments or change runtime behavior

AIR302 [*] `airflow.operators.google_api_to_s3_transfer.GoogleApiToS3Transfer` is moved into `amazon` provider in Airflow 3.0;
  --> AIR302_amazon.py:26:1
   |
24 | from airflow.operators.google_api_to_s3_transfer import GoogleApiToS3Transfer
25 |
26 | GoogleApiToS3Transfer()
   | ^^^^^^^^^^^^^^^^^^^^^
27 |
28 | from airflow.operators.redshift_to_s3_operator import RedshiftToS3Transfer
   |
help: Install `apache-airflow-providers-amazon>=1.0.0` and use `GoogleApiToS3Operator` from `airflow.providers.amazon.aws.transfers.google_api_to_s3` instead.
22 | S3KeySensor()
23 | 
24 | from airflow.operators.google_api_to_s3_transfer import GoogleApiToS3Transfer
25 + from airflow.providers.amazon.aws.transfers.google_api_to_s3 import GoogleApiToS3Operator
26 | 
27 | GoogleApiToS3Transfer()
28 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

AIR302 [*] `airflow.operators.redshift_to_s3_operator.RedshiftToS3Transfer` is moved into `amazon` provider in Airflow 3.0;
  --> AIR302_amazon.py:30:1
   |
28 | from airflow.operators.redshift_to_s3_operator import RedshiftToS3Transfer
29 |
30 | RedshiftToS3Transfer()
   | ^^^^^^^^^^^^^^^^^^^^
31 |
32 | from airflow.operators.s3_to_redshift_operator import S3ToRedshiftTransfer
   |
help: Install `apache-airflow-providers-amazon>=1.0.0` and use `RedshiftToS3Operator` from `airflow.providers.amazon.aws.transfers.redshift_to_s3` instead.
26 | GoogleApiToS3Transfer()
27 | 
28 | from airflow.operators.redshift_to_s3_operator import RedshiftToS3Transfer
29 + from airflow.providers.amazon.aws.transfers.redshift_to_s3 import RedshiftToS3Operator
30 | 
31 | RedshiftToS3Transfer()
32 | 
note: This is an unsafe fix and may remove comments or change runtime behavior

AIR302 [*] `airflow.operators.s3_to_redshift_operator.S3ToRedshiftTransfer` is moved into `amazon` provider in Airflow 3.0;
  --> AIR302_amazon.py:34:1
   |
32 | from airflow.operators.s3_to_redshift_operator import S3ToRedshiftTransfer
33 |
34 | S3ToRedshiftTransfer()
   | ^^^^^^^^^^^^^^^^^^^^
   |
help: Install `apache-airflow-providers-amazon>=1.0.0` and use `S3ToRedshiftOperator` from `airflow.providers.amazon.aws.transfers.s3_to_redshift` instead.
30 | RedshiftToS3Transfer()
31 | 
32 | from airflow.operators.s3_to_redshift_operator import S3ToRedshiftTransfer
33 + from airflow.providers.amazon.aws.transfers.s3_to_redshift import S3ToRedshiftOperator
34 | 
35 | S3ToRedshiftTransfer()
note: This is an unsafe fix and may remove comments or change runtime behavior
