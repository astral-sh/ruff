---
source: crates/ruff_linter/src/rules/airflow/mod.rs
---
AIR301_names.py:56:1: AIR301 `airflow.PY36` is removed in Airflow 3.0
   |
55 | # airflow root
56 | PY36, PY37, PY38, PY39, PY310, PY311, PY312
   | ^^^^ AIR301
57 |
58 | # airflow.api_connexion.security
   |
   = help: Use `sys.version_info` instead

AIR301_names.py:56:7: AIR301 `airflow.PY37` is removed in Airflow 3.0
   |
55 | # airflow root
56 | PY36, PY37, PY38, PY39, PY310, PY311, PY312
   |       ^^^^ AIR301
57 |
58 | # airflow.api_connexion.security
   |
   = help: Use `sys.version_info` instead

AIR301_names.py:56:13: AIR301 `airflow.PY38` is removed in Airflow 3.0
   |
55 | # airflow root
56 | PY36, PY37, PY38, PY39, PY310, PY311, PY312
   |             ^^^^ AIR301
57 |
58 | # airflow.api_connexion.security
   |
   = help: Use `sys.version_info` instead

AIR301_names.py:56:19: AIR301 `airflow.PY39` is removed in Airflow 3.0
   |
55 | # airflow root
56 | PY36, PY37, PY38, PY39, PY310, PY311, PY312
   |                   ^^^^ AIR301
57 |
58 | # airflow.api_connexion.security
   |
   = help: Use `sys.version_info` instead

AIR301_names.py:56:25: AIR301 `airflow.PY310` is removed in Airflow 3.0
   |
55 | # airflow root
56 | PY36, PY37, PY38, PY39, PY310, PY311, PY312
   |                         ^^^^^ AIR301
57 |
58 | # airflow.api_connexion.security
   |
   = help: Use `sys.version_info` instead

AIR301_names.py:56:32: AIR301 `airflow.PY311` is removed in Airflow 3.0
   |
55 | # airflow root
56 | PY36, PY37, PY38, PY39, PY310, PY311, PY312
   |                                ^^^^^ AIR301
57 |
58 | # airflow.api_connexion.security
   |
   = help: Use `sys.version_info` instead

AIR301_names.py:56:39: AIR301 `airflow.PY312` is removed in Airflow 3.0
   |
55 | # airflow root
56 | PY36, PY37, PY38, PY39, PY310, PY311, PY312
   |                                       ^^^^^ AIR301
57 |
58 | # airflow.api_connexion.security
   |
   = help: Use `sys.version_info` instead

AIR301_names.py:59:1: AIR301 `airflow.api_connexion.security.requires_access` is removed in Airflow 3.0
   |
58 | # airflow.api_connexion.security
59 | requires_access
   | ^^^^^^^^^^^^^^^ AIR301
   |
   = help: Use `airflow.api_connexion.security.requires_access_*` instead

AIR301_names.py:63:1: AIR301 `airflow.configuration.get` is removed in Airflow 3.0
   |
62 | # airflow.configuration
63 | get, getboolean, getfloat, getint, has_option, remove_option, as_dict, set
   | ^^^ AIR301
   |
   = help: Use `airflow.configuration.conf.get` instead

AIR301_names.py:63:6: AIR301 `airflow.configuration.getboolean` is removed in Airflow 3.0
   |
62 | # airflow.configuration
63 | get, getboolean, getfloat, getint, has_option, remove_option, as_dict, set
   |      ^^^^^^^^^^ AIR301
   |
   = help: Use `airflow.configuration.conf.getboolean` instead

AIR301_names.py:63:18: AIR301 `airflow.configuration.getfloat` is removed in Airflow 3.0
   |
62 | # airflow.configuration
63 | get, getboolean, getfloat, getint, has_option, remove_option, as_dict, set
   |                  ^^^^^^^^ AIR301
   |
   = help: Use `airflow.configuration.conf.getfloat` instead

AIR301_names.py:63:28: AIR301 `airflow.configuration.getint` is removed in Airflow 3.0
   |
62 | # airflow.configuration
63 | get, getboolean, getfloat, getint, has_option, remove_option, as_dict, set
   |                            ^^^^^^ AIR301
   |
   = help: Use `airflow.configuration.conf.getint` instead

AIR301_names.py:63:36: AIR301 `airflow.configuration.has_option` is removed in Airflow 3.0
   |
62 | # airflow.configuration
63 | get, getboolean, getfloat, getint, has_option, remove_option, as_dict, set
   |                                    ^^^^^^^^^^ AIR301
   |
   = help: Use `airflow.configuration.conf.has_option` instead

AIR301_names.py:63:48: AIR301 `airflow.configuration.remove_option` is removed in Airflow 3.0
   |
62 | # airflow.configuration
63 | get, getboolean, getfloat, getint, has_option, remove_option, as_dict, set
   |                                                ^^^^^^^^^^^^^ AIR301
   |
   = help: Use `airflow.configuration.conf.remove_option` instead

AIR301_names.py:63:63: AIR301 `airflow.configuration.as_dict` is removed in Airflow 3.0
   |
62 | # airflow.configuration
63 | get, getboolean, getfloat, getint, has_option, remove_option, as_dict, set
   |                                                               ^^^^^^^ AIR301
   |
   = help: Use `airflow.configuration.conf.as_dict` instead

AIR301_names.py:63:72: AIR301 `airflow.configuration.set` is removed in Airflow 3.0
   |
62 | # airflow.configuration
63 | get, getboolean, getfloat, getint, has_option, remove_option, as_dict, set
   |                                                                        ^^^ AIR301
   |
   = help: Use `airflow.configuration.conf.set` instead

AIR301_names.py:67:1: AIR301 `airflow.contrib.aws_athena_hook.AWSAthenaHook` is removed in Airflow 3.0; The whole `airflow.contrib` module has been removed.
   |
66 | # airflow.contrib.*
67 | AWSAthenaHook()
   | ^^^^^^^^^^^^^ AIR301
   |

AIR301_names.py:71:1: AIR301 `airflow.datasets.DatasetAliasEvent` is removed in Airflow 3.0
   |
70 | # airflow.datasets
71 | DatasetAliasEvent()
   | ^^^^^^^^^^^^^^^^^ AIR301
   |

AIR301_names.py:75:1: AIR301 `airflow.hooks.base_hook.BaseHook` is removed in Airflow 3.0
   |
74 | # airflow.hooks
75 | BaseHook()
   | ^^^^^^^^ AIR301
   |
   = help: Use `airflow.hooks.base.BaseHook` instead

AIR301_names.py:79:1: AIR301 `airflow.operators.subdag.SubDagOperator` is removed in Airflow 3.0; The whole `airflow.subdag` module has been removed.
   |
78 | # airflow.operators.subdag.*
79 | SubDagOperator()
   | ^^^^^^^^^^^^^^ AIR301
80 |
81 | # airflow.providers.mysql
   |

AIR301_names.py:82:7: AIR301 `airflow.providers.mysql.datasets.mysql.sanitize_uri` is removed in Airflow 3.0
   |
81 | # airflow.providers.mysql
82 | mysql.sanitize_uri
   |       ^^^^^^^^^^^^ AIR301
83 |
84 | # airflow.providers.postgres
   |
   = help: Use `airflow.providers.mysql.assets.mysql.sanitize_uri` instead

AIR301_names.py:85:10: AIR301 `airflow.providers.postgres.datasets.postgres.sanitize_uri` is removed in Airflow 3.0
   |
84 | # airflow.providers.postgres
85 | postgres.sanitize_uri
   |          ^^^^^^^^^^^^ AIR301
86 |
87 | # airflow.providers.trino
   |
   = help: Use `airflow.providers.postgres.assets.postgres.sanitize_uri` instead

AIR301_names.py:88:7: AIR301 `airflow.providers.trino.datasets.trino.sanitize_uri` is removed in Airflow 3.0
   |
87 | # airflow.providers.trino
88 | trino.sanitize_uri
   |       ^^^^^^^^^^^^ AIR301
89 |
90 | # airflow.secrets
   |
   = help: Use `airflow.providers.trino.assets.trino.sanitize_uri` instead

AIR301_names.py:96:1: AIR301 `airflow.sensors.base_sensor_operator.BaseSensorOperator` is removed in Airflow 3.0
   |
95 | # airflow.sensors.base_sensor_operator
96 | BaseSensorOperator()
   | ^^^^^^^^^^^^^^^^^^ AIR301
   |
   = help: Use `airflow.sdk.bases.sensor.BaseSensorOperator` instead

AIR301_names.py:100:1: AIR301 `airflow.triggers.external_task.TaskStateTrigger` is removed in Airflow 3.0
    |
 99 | # airflow.triggers.external_task
100 | TaskStateTrigger()
    | ^^^^^^^^^^^^^^^^ AIR301
101 |
102 | # airflow.utils.date
    |

AIR301_names.py:103:7: AIR301 `airflow.utils.dates.date_range` is removed in Airflow 3.0
    |
102 | # airflow.utils.date
103 | dates.date_range
    |       ^^^^^^^^^^ AIR301
104 | dates.days_ago
    |

AIR301_names.py:104:7: AIR301 `airflow.utils.dates.days_ago` is removed in Airflow 3.0
    |
102 | # airflow.utils.date
103 | dates.date_range
104 | dates.days_ago
    |       ^^^^^^^^ AIR301
105 |
106 | date_range
    |
    = help: Use `pendulum.today('UTC').add(days=-N, ...)` instead

AIR301_names.py:106:1: AIR301 `airflow.utils.dates.date_range` is removed in Airflow 3.0
    |
104 | dates.days_ago
105 |
106 | date_range
    | ^^^^^^^^^^ AIR301
107 | days_ago
108 | infer_time_unit
    |

AIR301_names.py:107:1: AIR301 `airflow.utils.dates.days_ago` is removed in Airflow 3.0
    |
106 | date_range
107 | days_ago
    | ^^^^^^^^ AIR301
108 | infer_time_unit
109 | parse_execution_date
    |
    = help: Use `pendulum.today('UTC').add(days=-N, ...)` instead

AIR301_names.py:108:1: AIR301 `airflow.utils.dates.infer_time_unit` is removed in Airflow 3.0
    |
106 | date_range
107 | days_ago
108 | infer_time_unit
    | ^^^^^^^^^^^^^^^ AIR301
109 | parse_execution_date
110 | round_time
    |

AIR301_names.py:109:1: AIR301 `airflow.utils.dates.parse_execution_date` is removed in Airflow 3.0
    |
107 | days_ago
108 | infer_time_unit
109 | parse_execution_date
    | ^^^^^^^^^^^^^^^^^^^^ AIR301
110 | round_time
111 | scale_time_units
    |

AIR301_names.py:110:1: AIR301 `airflow.utils.dates.round_time` is removed in Airflow 3.0
    |
108 | infer_time_unit
109 | parse_execution_date
110 | round_time
    | ^^^^^^^^^^ AIR301
111 | scale_time_units
    |

AIR301_names.py:111:1: AIR301 `airflow.utils.dates.scale_time_units` is removed in Airflow 3.0
    |
109 | parse_execution_date
110 | round_time
111 | scale_time_units
    | ^^^^^^^^^^^^^^^^ AIR301
112 |
113 | # This one was not deprecated.
    |

AIR301_names.py:118:1: AIR301 `airflow.utils.dag_cycle_tester.test_cycle` is removed in Airflow 3.0
    |
117 | # airflow.utils.dag_cycle_tester
118 | test_cycle
    | ^^^^^^^^^^ AIR301
    |

AIR301_names.py:122:1: AIR301 `airflow.utils.db.create_session` is removed in Airflow 3.0
    |
121 | # airflow.utils.db
122 | create_session
    | ^^^^^^^^^^^^^^ AIR301
123 |
124 | # airflow.utils.decorators
    |

AIR301_names.py:125:1: AIR301 `airflow.utils.decorators.apply_defaults` is removed in Airflow 3.0; `apply_defaults` is now unconditionally done and can be safely removed.
    |
124 | # airflow.utils.decorators
125 | apply_defaults
    | ^^^^^^^^^^^^^^ AIR301
126 |
127 | # airflow.utils.file
    |

AIR301_names.py:128:1: AIR301 `airflow.utils.file.TemporaryDirectory` is removed in Airflow 3.0
    |
127 | # airflow.utils.file
128 | TemporaryDirectory()
    | ^^^^^^^^^^^^^^^^^^ AIR301
129 | mkdirs
    |
    = help: Use `tempfile.TemporaryDirectory` instead

AIR301_names.py:129:1: AIR301 `airflow.utils.file.mkdirs` is removed in Airflow 3.0
    |
127 | # airflow.utils.file
128 | TemporaryDirectory()
129 | mkdirs
    | ^^^^^^ AIR301
130 |
131 | #  airflow.utils.helpers
    |
    = help: Use `pathlib.Path({path}).mkdir` instead

AIR301_names.py:132:1: AIR301 `airflow.utils.helpers.chain` is removed in Airflow 3.0
    |
131 | #  airflow.utils.helpers
132 | helper_chain
    | ^^^^^^^^^^^^ AIR301
133 | helper_cross_downstream
    |
    = help: Use `airflow.sdk.chain` instead

AIR301_names.py:133:1: AIR301 `airflow.utils.helpers.cross_downstream` is removed in Airflow 3.0
    |
131 | #  airflow.utils.helpers
132 | helper_chain
133 | helper_cross_downstream
    | ^^^^^^^^^^^^^^^^^^^^^^^ AIR301
134 |
135 | #  airflow.utils.log
    |
    = help: Use `airflow.sdk.cross_downstream` instead

AIR301_names.py:136:1: AIR301 `airflow.utils.log.secrets_masker` is removed in Airflow 3.0
    |
135 | #  airflow.utils.log
136 | secrets_masker
    | ^^^^^^^^^^^^^^ AIR301
137 |
138 | # airflow.utils.state
    |
    = help: Use `airflow.sdk.execution_time.secrets_masker` instead

AIR301_names.py:139:1: AIR301 `airflow.utils.state.SHUTDOWN` is removed in Airflow 3.0
    |
138 | # airflow.utils.state
139 | SHUTDOWN
    | ^^^^^^^^ AIR301
140 | terminating_states
    |

AIR301_names.py:140:1: AIR301 `airflow.utils.state.terminating_states` is removed in Airflow 3.0
    |
138 | # airflow.utils.state
139 | SHUTDOWN
140 | terminating_states
    | ^^^^^^^^^^^^^^^^^^ AIR301
141 |
142 | #  airflow.utils.trigger_rule
    |

AIR301_names.py:143:13: AIR301 `airflow.utils.trigger_rule.TriggerRule.DUMMY` is removed in Airflow 3.0
    |
142 | #  airflow.utils.trigger_rule
143 | TriggerRule.DUMMY
    |             ^^^^^ AIR301
144 | TriggerRule.NONE_FAILED_OR_SKIPPED
    |

AIR301_names.py:144:13: AIR301 `airflow.utils.trigger_rule.TriggerRule.NONE_FAILED_OR_SKIPPED` is removed in Airflow 3.0
    |
142 | #  airflow.utils.trigger_rule
143 | TriggerRule.DUMMY
144 | TriggerRule.NONE_FAILED_OR_SKIPPED
    |             ^^^^^^^^^^^^^^^^^^^^^^ AIR301
    |

AIR301_names.py:148:1: AIR301 `airflow.www.auth.has_access` is removed in Airflow 3.0
    |
147 | # airflow.www.auth
148 | has_access
    | ^^^^^^^^^^ AIR301
149 |
150 | # airflow.www.utils
    |
    = help: Use `airflow.www.auth.has_access_*` instead

AIR301_names.py:151:1: AIR301 `airflow.www.utils.get_sensitive_variables_fields` is removed in Airflow 3.0
    |
150 | # airflow.www.utils
151 | get_sensitive_variables_fields
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ AIR301
152 | should_hide_value_for_key
    |
    = help: Use `airflow.utils.log.secrets_masker.get_sensitive_variables_fields` instead

AIR301_names.py:152:1: AIR301 `airflow.www.utils.should_hide_value_for_key` is removed in Airflow 3.0
    |
150 | # airflow.www.utils
151 | get_sensitive_variables_fields
152 | should_hide_value_for_key
    | ^^^^^^^^^^^^^^^^^^^^^^^^^ AIR301
153 |
154 | # airflow.operators.python
    |
    = help: Use `airflow.utils.log.secrets_masker.should_hide_value_for_key` instead

AIR301_names.py:157:1: AIR301 `airflow.operators.python.get_current_context` is removed in Airflow 3.0
    |
155 | from airflow.operators.python import get_current_context
156 |
157 | get_current_context()
    | ^^^^^^^^^^^^^^^^^^^ AIR301
    |
    = help: Use `airflow.sdk.get_current_context` instead
