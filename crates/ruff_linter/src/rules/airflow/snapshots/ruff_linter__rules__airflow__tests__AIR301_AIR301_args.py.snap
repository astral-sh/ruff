---
source: crates/ruff_linter/src/rules/airflow/mod.rs
---
AIR301 [*] `schedule_interval` is removed in Airflow 3.0
  --> AIR301_args.py:21:39
   |
19 | DAG(dag_id="class_schedule", schedule="@hourly")
20 |
21 | DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
   |                                       ^^^^^^^^^^^^^^^^^
22 |
23 | DAG(dag_id="class_timetable", timetable=NullTimetable())
   |
help: Use `schedule` instead

ℹ Safe fix
18 18 | 
19 19 | DAG(dag_id="class_schedule", schedule="@hourly")
20 20 | 
21    |-DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
   21 |+DAG(dag_id="class_schedule_interval", schedule="@hourly")
22 22 | 
23 23 | DAG(dag_id="class_timetable", timetable=NullTimetable())
24 24 | 

AIR301 [*] `timetable` is removed in Airflow 3.0
  --> AIR301_args.py:23:31
   |
21 | DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
22 |
23 | DAG(dag_id="class_timetable", timetable=NullTimetable())
   |                               ^^^^^^^^^
   |
help: Use `schedule` instead

ℹ Safe fix
20 20 | 
21 21 | DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
22 22 | 
23    |-DAG(dag_id="class_timetable", timetable=NullTimetable())
   23 |+DAG(dag_id="class_timetable", schedule=NullTimetable())
24 24 | 
25 25 | 
26 26 | DAG(dag_id="class_fail_stop", fail_stop=True)

AIR301 [*] `fail_stop` is removed in Airflow 3.0
  --> AIR301_args.py:26:31
   |
26 | DAG(dag_id="class_fail_stop", fail_stop=True)
   |                               ^^^^^^^^^
27 |
28 | DAG(dag_id="class_default_view", default_view="dag_default_view")
   |
help: Use `fail_fast` instead

ℹ Safe fix
23 23 | DAG(dag_id="class_timetable", timetable=NullTimetable())
24 24 | 
25 25 | 
26    |-DAG(dag_id="class_fail_stop", fail_stop=True)
   26 |+DAG(dag_id="class_fail_stop", fail_fast=True)
27 27 | 
28 28 | DAG(dag_id="class_default_view", default_view="dag_default_view")
29 29 | 

AIR301 `default_view` is removed in Airflow 3.0
  --> AIR301_args.py:28:34
   |
26 | DAG(dag_id="class_fail_stop", fail_stop=True)
27 |
28 | DAG(dag_id="class_default_view", default_view="dag_default_view")
   |                                  ^^^^^^^^^^^^
29 |
30 | DAG(dag_id="class_orientation", orientation="BT")
   |

AIR301 `orientation` is removed in Airflow 3.0
  --> AIR301_args.py:30:33
   |
28 | DAG(dag_id="class_default_view", default_view="dag_default_view")
29 |
30 | DAG(dag_id="class_orientation", orientation="BT")
   |                                 ^^^^^^^^^^^
31 |
32 | allow_future_exec_dates_dag = DAG(dag_id="class_allow_future_exec_dates")
   |

AIR301 [*] `schedule_interval` is removed in Airflow 3.0
  --> AIR301_args.py:41:6
   |
41 | @dag(schedule_interval="0 * * * *")
   |      ^^^^^^^^^^^^^^^^^
42 | def decorator_schedule_interval():
43 |     pass
   |
help: Use `schedule` instead

ℹ Safe fix
38 38 |     pass
39 39 | 
40 40 | 
41    |-@dag(schedule_interval="0 * * * *")
   41 |+@dag(schedule="0 * * * *")
42 42 | def decorator_schedule_interval():
43 43 |     pass
44 44 | 

AIR301 [*] `timetable` is removed in Airflow 3.0
  --> AIR301_args.py:46:6
   |
46 | @dag(timetable=NullTimetable())
   |      ^^^^^^^^^
47 | def decorator_timetable():
48 |     pass
   |
help: Use `schedule` instead

ℹ Safe fix
43 43 |     pass
44 44 | 
45 45 | 
46    |-@dag(timetable=NullTimetable())
   46 |+@dag(schedule=NullTimetable())
47 47 | def decorator_timetable():
48 48 |     pass
49 49 | 

AIR301 [*] `execution_date` is removed in Airflow 3.0
  --> AIR301_args.py:54:62
   |
52 | def decorator_deprecated_operator_args():
53 |     trigger_dagrun_op = trigger_dagrun.TriggerDagRunOperator(
54 |         task_id="trigger_dagrun_op1", trigger_dag_id="test", execution_date="2024-12-04"
   |                                                              ^^^^^^^^^^^^^^
55 |     )
56 |     trigger_dagrun_op2 = TriggerDagRunOperator(
   |
help: Use `logical_date` instead

ℹ Safe fix
51 51 | @dag()
52 52 | def decorator_deprecated_operator_args():
53 53 |     trigger_dagrun_op = trigger_dagrun.TriggerDagRunOperator(
54    |-        task_id="trigger_dagrun_op1", trigger_dag_id="test", execution_date="2024-12-04"
   54 |+        task_id="trigger_dagrun_op1", trigger_dag_id="test", logical_date="2024-12-04"
55 55 |     )
56 56 |     trigger_dagrun_op2 = TriggerDagRunOperator(
57 57 |         task_id="trigger_dagrun_op2", trigger_dag_id="test", execution_date="2024-12-04"

AIR301 [*] `execution_date` is removed in Airflow 3.0
  --> AIR301_args.py:57:62
   |
55 |     )
56 |     trigger_dagrun_op2 = TriggerDagRunOperator(
57 |         task_id="trigger_dagrun_op2", trigger_dag_id="test", execution_date="2024-12-04"
   |                                                              ^^^^^^^^^^^^^^
58 |     )
   |
help: Use `logical_date` instead

ℹ Safe fix
54 54 |         task_id="trigger_dagrun_op1", trigger_dag_id="test", execution_date="2024-12-04"
55 55 |     )
56 56 |     trigger_dagrun_op2 = TriggerDagRunOperator(
57    |-        task_id="trigger_dagrun_op2", trigger_dag_id="test", execution_date="2024-12-04"
   57 |+        task_id="trigger_dagrun_op2", trigger_dag_id="test", logical_date="2024-12-04"
58 58 |     )
59 59 | 
60 60 |     branch_dt_op = datetime.BranchDateTimeOperator(

AIR301 [*] `use_task_execution_day` is removed in Airflow 3.0
  --> AIR301_args.py:61:33
   |
60 |     branch_dt_op = datetime.BranchDateTimeOperator(
61 |         task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   |                                 ^^^^^^^^^^^^^^^^^^^^^^
62 |     )
63 |     branch_dt_op2 = BranchDateTimeOperator(
   |
help: Use `use_task_logical_date` instead

ℹ Safe fix
58 58 |     )
59 59 | 
60 60 |     branch_dt_op = datetime.BranchDateTimeOperator(
61    |-        task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   61 |+        task_id="branch_dt_op", use_task_logical_date=True, task_concurrency=5
62 62 |     )
63 63 |     branch_dt_op2 = BranchDateTimeOperator(
64 64 |         task_id="branch_dt_op2",

AIR301 [*] `task_concurrency` is removed in Airflow 3.0
  --> AIR301_args.py:61:62
   |
60 |     branch_dt_op = datetime.BranchDateTimeOperator(
61 |         task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   |                                                              ^^^^^^^^^^^^^^^^
62 |     )
63 |     branch_dt_op2 = BranchDateTimeOperator(
   |
help: Use `max_active_tis_per_dag` instead

ℹ Safe fix
58 58 |     )
59 59 | 
60 60 |     branch_dt_op = datetime.BranchDateTimeOperator(
61    |-        task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   61 |+        task_id="branch_dt_op", use_task_execution_day=True, max_active_tis_per_dag=5
62 62 |     )
63 63 |     branch_dt_op2 = BranchDateTimeOperator(
64 64 |         task_id="branch_dt_op2",

AIR301 [*] `use_task_execution_day` is removed in Airflow 3.0
  --> AIR301_args.py:65:9
   |
63 |     branch_dt_op2 = BranchDateTimeOperator(
64 |         task_id="branch_dt_op2",
65 |         use_task_execution_day=True,
   |         ^^^^^^^^^^^^^^^^^^^^^^
66 |         sla=timedelta(seconds=10),
67 |     )
   |
help: Use `use_task_logical_date` instead

ℹ Safe fix
62 62 |     )
63 63 |     branch_dt_op2 = BranchDateTimeOperator(
64 64 |         task_id="branch_dt_op2",
65    |-        use_task_execution_day=True,
   65 |+        use_task_logical_date=True,
66 66 |         sla=timedelta(seconds=10),
67 67 |     )
68 68 | 

AIR301 [*] `use_task_execution_day` is removed in Airflow 3.0
  --> AIR301_args.py:92:9
   |
90 |         follow_task_ids_if_true=None,
91 |         week_day=1,
92 |         use_task_execution_day=True,
   |         ^^^^^^^^^^^^^^^^^^^^^^
93 |     )
   |
help: Use `use_task_logical_date` instead

ℹ Safe fix
89 89 |         follow_task_ids_if_false=None,
90 90 |         follow_task_ids_if_true=None,
91 91 |         week_day=1,
92    |-        use_task_execution_day=True,
   92 |+        use_task_logical_date=True,
93 93 |     )
94 94 | 
95 95 |     trigger_dagrun_op >> trigger_dagrun_op2

AIR301 `filename_template` is removed in Airflow 3.0
   --> AIR301_args.py:102:15
    |
101 | # deprecated filename_template argument in FileTaskHandler
102 | S3TaskHandler(filename_template="/tmp/test")
    |               ^^^^^^^^^^^^^^^^^
103 | HdfsTaskHandler(filename_template="/tmp/test")
104 | ElasticsearchTaskHandler(filename_template="/tmp/test")
    |

AIR301 `filename_template` is removed in Airflow 3.0
   --> AIR301_args.py:103:17
    |
101 | # deprecated filename_template argument in FileTaskHandler
102 | S3TaskHandler(filename_template="/tmp/test")
103 | HdfsTaskHandler(filename_template="/tmp/test")
    |                 ^^^^^^^^^^^^^^^^^
104 | ElasticsearchTaskHandler(filename_template="/tmp/test")
105 | GCSTaskHandler(filename_template="/tmp/test")
    |

AIR301 `filename_template` is removed in Airflow 3.0
   --> AIR301_args.py:104:26
    |
102 | S3TaskHandler(filename_template="/tmp/test")
103 | HdfsTaskHandler(filename_template="/tmp/test")
104 | ElasticsearchTaskHandler(filename_template="/tmp/test")
    |                          ^^^^^^^^^^^^^^^^^
105 | GCSTaskHandler(filename_template="/tmp/test")
    |

AIR301 `filename_template` is removed in Airflow 3.0
   --> AIR301_args.py:105:16
    |
103 | HdfsTaskHandler(filename_template="/tmp/test")
104 | ElasticsearchTaskHandler(filename_template="/tmp/test")
105 | GCSTaskHandler(filename_template="/tmp/test")
    |                ^^^^^^^^^^^^^^^^^
106 |
107 | FabAuthManager(None)
    |

AIR301 `appbuilder` is removed in Airflow 3.0
   --> AIR301_args.py:107:15
    |
105 | GCSTaskHandler(filename_template="/tmp/test")
106 |
107 | FabAuthManager(None)
    |               ^^^^^^
    |
help: The constructor takes no parameter now
