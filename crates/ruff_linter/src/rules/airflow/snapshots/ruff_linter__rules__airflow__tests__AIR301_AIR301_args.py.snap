---
source: crates/ruff_linter/src/rules/airflow/mod.rs
---
AIR301_args.py:20:39: AIR301 [*] `schedule_interval` is removed in Airflow 3.0
   |
18 | DAG(dag_id="class_schedule", schedule="@hourly")
19 |
20 | DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
   |                                       ^^^^^^^^^^^^^^^^^ AIR301
21 |
22 | DAG(dag_id="class_timetable", timetable=NullTimetable())
   |
   = help: Use `schedule` instead

ℹ Safe fix
17 17 | 
18 18 | DAG(dag_id="class_schedule", schedule="@hourly")
19 19 | 
20    |-DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
   20 |+DAG(dag_id="class_schedule_interval", schedule="@hourly")
21 21 | 
22 22 | DAG(dag_id="class_timetable", timetable=NullTimetable())
23 23 | 

AIR301_args.py:22:31: AIR301 [*] `timetable` is removed in Airflow 3.0
   |
20 | DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
21 |
22 | DAG(dag_id="class_timetable", timetable=NullTimetable())
   |                               ^^^^^^^^^ AIR301
   |
   = help: Use `schedule` instead

ℹ Safe fix
19 19 | 
20 20 | DAG(dag_id="class_schedule_interval", schedule_interval="@hourly")
21 21 | 
22    |-DAG(dag_id="class_timetable", timetable=NullTimetable())
   22 |+DAG(dag_id="class_timetable", schedule=NullTimetable())
23 23 | 
24 24 | 
25 25 | DAG(dag_id="class_fail_stop", fail_stop=True)

AIR301_args.py:25:31: AIR301 [*] `fail_stop` is removed in Airflow 3.0
   |
25 | DAG(dag_id="class_fail_stop", fail_stop=True)
   |                               ^^^^^^^^^ AIR301
26 |
27 | DAG(dag_id="class_default_view", default_view="dag_default_view")
   |
   = help: Use `fail_fast` instead

ℹ Safe fix
22 22 | DAG(dag_id="class_timetable", timetable=NullTimetable())
23 23 | 
24 24 | 
25    |-DAG(dag_id="class_fail_stop", fail_stop=True)
   25 |+DAG(dag_id="class_fail_stop", fail_fast=True)
26 26 | 
27 27 | DAG(dag_id="class_default_view", default_view="dag_default_view")
28 28 | 

AIR301_args.py:27:34: AIR301 `default_view` is removed in Airflow 3.0
   |
25 | DAG(dag_id="class_fail_stop", fail_stop=True)
26 |
27 | DAG(dag_id="class_default_view", default_view="dag_default_view")
   |                                  ^^^^^^^^^^^^ AIR301
28 |
29 | DAG(dag_id="class_orientation", orientation="BT")
   |

AIR301_args.py:29:33: AIR301 `orientation` is removed in Airflow 3.0
   |
27 | DAG(dag_id="class_default_view", default_view="dag_default_view")
28 |
29 | DAG(dag_id="class_orientation", orientation="BT")
   |                                 ^^^^^^^^^^^ AIR301
30 |
31 | allow_future_exec_dates_dag = DAG(dag_id="class_allow_future_exec_dates")
   |

AIR301_args.py:40:6: AIR301 [*] `schedule_interval` is removed in Airflow 3.0
   |
40 | @dag(schedule_interval="0 * * * *")
   |      ^^^^^^^^^^^^^^^^^ AIR301
41 | def decorator_schedule_interval():
42 |     pass
   |
   = help: Use `schedule` instead

ℹ Safe fix
37 37 |     pass
38 38 | 
39 39 | 
40    |-@dag(schedule_interval="0 * * * *")
   40 |+@dag(schedule="0 * * * *")
41 41 | def decorator_schedule_interval():
42 42 |     pass
43 43 | 

AIR301_args.py:45:6: AIR301 [*] `timetable` is removed in Airflow 3.0
   |
45 | @dag(timetable=NullTimetable())
   |      ^^^^^^^^^ AIR301
46 | def decorator_timetable():
47 |     pass
   |
   = help: Use `schedule` instead

ℹ Safe fix
42 42 |     pass
43 43 | 
44 44 | 
45    |-@dag(timetable=NullTimetable())
   45 |+@dag(schedule=NullTimetable())
46 46 | def decorator_timetable():
47 47 |     pass
48 48 | 

AIR301_args.py:53:39: AIR301 [*] `execution_date` is removed in Airflow 3.0
   |
51 | def decorator_deprecated_operator_args():
52 |     trigger_dagrun_op = trigger_dagrun.TriggerDagRunOperator(
53 |         task_id="trigger_dagrun_op1", execution_date="2024-12-04"
   |                                       ^^^^^^^^^^^^^^ AIR301
54 |     )
55 |     trigger_dagrun_op2 = TriggerDagRunOperator(
   |
   = help: Use `logical_date` instead

ℹ Safe fix
50 50 | @dag()
51 51 | def decorator_deprecated_operator_args():
52 52 |     trigger_dagrun_op = trigger_dagrun.TriggerDagRunOperator(
53    |-        task_id="trigger_dagrun_op1", execution_date="2024-12-04"
   53 |+        task_id="trigger_dagrun_op1", logical_date="2024-12-04"
54 54 |     )
55 55 |     trigger_dagrun_op2 = TriggerDagRunOperator(
56 56 |         task_id="trigger_dagrun_op2", execution_date="2024-12-04"

AIR301_args.py:56:39: AIR301 [*] `execution_date` is removed in Airflow 3.0
   |
54 |     )
55 |     trigger_dagrun_op2 = TriggerDagRunOperator(
56 |         task_id="trigger_dagrun_op2", execution_date="2024-12-04"
   |                                       ^^^^^^^^^^^^^^ AIR301
57 |     )
   |
   = help: Use `logical_date` instead

ℹ Safe fix
53 53 |         task_id="trigger_dagrun_op1", execution_date="2024-12-04"
54 54 |     )
55 55 |     trigger_dagrun_op2 = TriggerDagRunOperator(
56    |-        task_id="trigger_dagrun_op2", execution_date="2024-12-04"
   56 |+        task_id="trigger_dagrun_op2", logical_date="2024-12-04"
57 57 |     )
58 58 | 
59 59 |     branch_dt_op = datetime.BranchDateTimeOperator(

AIR301_args.py:60:33: AIR301 [*] `use_task_execution_day` is removed in Airflow 3.0
   |
59 |     branch_dt_op = datetime.BranchDateTimeOperator(
60 |         task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   |                                 ^^^^^^^^^^^^^^^^^^^^^^ AIR301
61 |     )
62 |     branch_dt_op2 = BranchDateTimeOperator(
   |
   = help: Use `use_task_logical_date` instead

ℹ Safe fix
57 57 |     )
58 58 | 
59 59 |     branch_dt_op = datetime.BranchDateTimeOperator(
60    |-        task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   60 |+        task_id="branch_dt_op", use_task_logical_date=True, task_concurrency=5
61 61 |     )
62 62 |     branch_dt_op2 = BranchDateTimeOperator(
63 63 |         task_id="branch_dt_op2",

AIR301_args.py:60:62: AIR301 [*] `task_concurrency` is removed in Airflow 3.0
   |
59 |     branch_dt_op = datetime.BranchDateTimeOperator(
60 |         task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   |                                                              ^^^^^^^^^^^^^^^^ AIR301
61 |     )
62 |     branch_dt_op2 = BranchDateTimeOperator(
   |
   = help: Use `max_active_tis_per_dag` instead

ℹ Safe fix
57 57 |     )
58 58 | 
59 59 |     branch_dt_op = datetime.BranchDateTimeOperator(
60    |-        task_id="branch_dt_op", use_task_execution_day=True, task_concurrency=5
   60 |+        task_id="branch_dt_op", use_task_execution_day=True, max_active_tis_per_dag=5
61 61 |     )
62 62 |     branch_dt_op2 = BranchDateTimeOperator(
63 63 |         task_id="branch_dt_op2",

AIR301_args.py:64:9: AIR301 [*] `use_task_execution_day` is removed in Airflow 3.0
   |
62 |     branch_dt_op2 = BranchDateTimeOperator(
63 |         task_id="branch_dt_op2",
64 |         use_task_execution_day=True,
   |         ^^^^^^^^^^^^^^^^^^^^^^ AIR301
65 |         sla=timedelta(seconds=10),
66 |     )
   |
   = help: Use `use_task_logical_date` instead

ℹ Safe fix
61 61 |     )
62 62 |     branch_dt_op2 = BranchDateTimeOperator(
63 63 |         task_id="branch_dt_op2",
64    |-        use_task_execution_day=True,
   64 |+        use_task_logical_date=True,
65 65 |         sla=timedelta(seconds=10),
66 66 |     )
67 67 | 

AIR301_args.py:87:15: AIR301 `filename_template` is removed in Airflow 3.0
   |
86 | # deprecated filename_template argument in FileTaskHandler
87 | S3TaskHandler(filename_template="/tmp/test")
   |               ^^^^^^^^^^^^^^^^^ AIR301
88 | HdfsTaskHandler(filename_template="/tmp/test")
89 | ElasticsearchTaskHandler(filename_template="/tmp/test")
   |

AIR301_args.py:88:17: AIR301 `filename_template` is removed in Airflow 3.0
   |
86 | # deprecated filename_template argument in FileTaskHandler
87 | S3TaskHandler(filename_template="/tmp/test")
88 | HdfsTaskHandler(filename_template="/tmp/test")
   |                 ^^^^^^^^^^^^^^^^^ AIR301
89 | ElasticsearchTaskHandler(filename_template="/tmp/test")
90 | GCSTaskHandler(filename_template="/tmp/test")
   |

AIR301_args.py:89:26: AIR301 `filename_template` is removed in Airflow 3.0
   |
87 | S3TaskHandler(filename_template="/tmp/test")
88 | HdfsTaskHandler(filename_template="/tmp/test")
89 | ElasticsearchTaskHandler(filename_template="/tmp/test")
   |                          ^^^^^^^^^^^^^^^^^ AIR301
90 | GCSTaskHandler(filename_template="/tmp/test")
   |

AIR301_args.py:90:16: AIR301 `filename_template` is removed in Airflow 3.0
   |
88 | HdfsTaskHandler(filename_template="/tmp/test")
89 | ElasticsearchTaskHandler(filename_template="/tmp/test")
90 | GCSTaskHandler(filename_template="/tmp/test")
   |                ^^^^^^^^^^^^^^^^^ AIR301
91 |
92 | FabAuthManager(None)
   |

AIR301_args.py:92:15: AIR301 `appbuilder` is removed in Airflow 3.0
   |
90 | GCSTaskHandler(filename_template="/tmp/test")
91 |
92 | FabAuthManager(None)
   |               ^^^^^^ AIR301
   |
   = help: The constructor takes no parameter now
