---
source: crates/ruff_linter/src/rules/flake8_async/mod.rs
---
ASYNC116.py:11:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
10 |     # These examples are probably not meant to ever wake up:
11 |     await trio.sleep(100000)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^^ ASYNC116
12 |
13 |     # 'inf literal' overflow trick
   |
   = help: Replace with `trio.sleep_forever()`

ℹ Unsafe fix
8  8  |     import trio
9  9  | 
10 10 |     # These examples are probably not meant to ever wake up:
11    |-    await trio.sleep(100000)  # error: 116, "async"
   11 |+    await trio.sleep_forever()  # error: 116, "async"
12 12 | 
13 13 |     # 'inf literal' overflow trick
14 14 |     await trio.sleep(1e999)  # error: 116, "async"

ASYNC116.py:14:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
13 |     # 'inf literal' overflow trick
14 |     await trio.sleep(1e999)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^ ASYNC116
15 |
16 |     await trio.sleep(86399)
   |
   = help: Replace with `trio.sleep_forever()`

ℹ Unsafe fix
11 11 |     await trio.sleep(100000)  # error: 116, "async"
12 12 | 
13 13 |     # 'inf literal' overflow trick
14    |-    await trio.sleep(1e999)  # error: 116, "async"
   14 |+    await trio.sleep_forever()  # error: 116, "async"
15 15 | 
16 16 |     await trio.sleep(86399)
17 17 |     await trio.sleep(86400)

ASYNC116.py:18:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
16 |     await trio.sleep(86399)
17 |     await trio.sleep(86400)
18 |     await trio.sleep(86400.01)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^^^^ ASYNC116
19 |     await trio.sleep(86401)  # error: 116, "async"
   |
   = help: Replace with `trio.sleep_forever()`

ℹ Unsafe fix
15 15 | 
16 16 |     await trio.sleep(86399)
17 17 |     await trio.sleep(86400)
18    |-    await trio.sleep(86400.01)  # error: 116, "async"
   18 |+    await trio.sleep_forever()  # error: 116, "async"
19 19 |     await trio.sleep(86401)  # error: 116, "async"
20 20 | 
21 21 |     await trio.sleep(-1)  # will raise a runtime error

ASYNC116.py:19:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
17 |     await trio.sleep(86400)
18 |     await trio.sleep(86400.01)  # error: 116, "async"
19 |     await trio.sleep(86401)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^ ASYNC116
20 |
21 |     await trio.sleep(-1)  # will raise a runtime error
   |
   = help: Replace with `trio.sleep_forever()`

ℹ Unsafe fix
16 16 |     await trio.sleep(86399)
17 17 |     await trio.sleep(86400)
18 18 |     await trio.sleep(86400.01)  # error: 116, "async"
19    |-    await trio.sleep(86401)  # error: 116, "async"
   19 |+    await trio.sleep_forever()  # error: 116, "async"
20 20 | 
21 21 |     await trio.sleep(-1)  # will raise a runtime error
22 22 |     await trio.sleep(0)  # handled by different check

ASYNC116.py:48:5: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
47 |     # does not require the call to be awaited, nor in an async fun
48 |     trio.sleep(86401)  # error: 116, "async"
   |     ^^^^^^^^^^^^^^^^^ ASYNC116
49 |     # also checks that we don't break visit_Call
50 |     trio.run(trio.sleep(86401))  # error: 116, "async"
   |
   = help: Replace with `trio.sleep_forever()`

ℹ Unsafe fix
45 45 |     import trio
46 46 | 
47 47 |     # does not require the call to be awaited, nor in an async fun
48    |-    trio.sleep(86401)  # error: 116, "async"
   48 |+    trio.sleep_forever()  # error: 116, "async"
49 49 |     # also checks that we don't break visit_Call
50 50 |     trio.run(trio.sleep(86401))  # error: 116, "async"
51 51 | 

ASYNC116.py:50:14: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
48 |     trio.sleep(86401)  # error: 116, "async"
49 |     # also checks that we don't break visit_Call
50 |     trio.run(trio.sleep(86401))  # error: 116, "async"
   |              ^^^^^^^^^^^^^^^^^ ASYNC116
   |
   = help: Replace with `trio.sleep_forever()`

ℹ Unsafe fix
47 47 |     # does not require the call to be awaited, nor in an async fun
48 48 |     trio.sleep(86401)  # error: 116, "async"
49 49 |     # also checks that we don't break visit_Call
50    |-    trio.run(trio.sleep(86401))  # error: 116, "async"
   50 |+    trio.run(trio.sleep_forever())  # error: 116, "async"
51 51 | 
52 52 | 
53 53 | async def import_from_trio():

ASYNC116.py:57:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
56 |     # catch from import
57 |     await sleep(86401)  # error: 116, "async"
   |           ^^^^^^^^^^^^ ASYNC116
   |
   = help: Replace with `trio.sleep_forever()`

ℹ Unsafe fix
2  2  | # ASYNCIO_NO_ERROR - no asyncio.sleep_forever, so check intentionally doesn't trigger.
3  3  | import math
4  4  | from math import inf
   5  |+from trio import sleep_forever
5  6  | 
6  7  | 
7  8  | async def import_trio():
--------------------------------------------------------------------------------
54 55 |     from trio import sleep
55 56 | 
56 57 |     # catch from import
57    |-    await sleep(86401)  # error: 116, "async"
   58 |+    await sleep_forever()  # error: 116, "async"
58 59 | 
59 60 | 
60 61 | async def import_anyio():

ASYNC116.py:64:11: ASYNC116 [*] `anyio.sleep()` with >24 hour interval should usually be `anyio.sleep_forever()`
   |
63 |     # These examples are probably not meant to ever wake up:
64 |     await anyio.sleep(100000)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^^^ ASYNC116
65 |
66 |     # 'inf literal' overflow trick
   |
   = help: Replace with `anyio.sleep_forever()`

ℹ Unsafe fix
61 61 |     import anyio
62 62 | 
63 63 |     # These examples are probably not meant to ever wake up:
64    |-    await anyio.sleep(100000)  # error: 116, "async"
   64 |+    await anyio.sleep_forever()  # error: 116, "async"
65 65 | 
66 66 |     # 'inf literal' overflow trick
67 67 |     await anyio.sleep(1e999)  # error: 116, "async"

ASYNC116.py:67:11: ASYNC116 [*] `anyio.sleep()` with >24 hour interval should usually be `anyio.sleep_forever()`
   |
66 |     # 'inf literal' overflow trick
67 |     await anyio.sleep(1e999)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^^ ASYNC116
68 |
69 |     await anyio.sleep(86399)
   |
   = help: Replace with `anyio.sleep_forever()`

ℹ Unsafe fix
64 64 |     await anyio.sleep(100000)  # error: 116, "async"
65 65 | 
66 66 |     # 'inf literal' overflow trick
67    |-    await anyio.sleep(1e999)  # error: 116, "async"
   67 |+    await anyio.sleep_forever()  # error: 116, "async"
68 68 | 
69 69 |     await anyio.sleep(86399)
70 70 |     await anyio.sleep(86400)

ASYNC116.py:71:11: ASYNC116 [*] `anyio.sleep()` with >24 hour interval should usually be `anyio.sleep_forever()`
   |
69 |     await anyio.sleep(86399)
70 |     await anyio.sleep(86400)
71 |     await anyio.sleep(86400.01)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^^^^^ ASYNC116
72 |     await anyio.sleep(86401)  # error: 116, "async"
   |
   = help: Replace with `anyio.sleep_forever()`

ℹ Unsafe fix
68 68 | 
69 69 |     await anyio.sleep(86399)
70 70 |     await anyio.sleep(86400)
71    |-    await anyio.sleep(86400.01)  # error: 116, "async"
   71 |+    await anyio.sleep_forever()  # error: 116, "async"
72 72 |     await anyio.sleep(86401)  # error: 116, "async"
73 73 | 
74 74 |     await anyio.sleep(-1)  # will raise a runtime error

ASYNC116.py:72:11: ASYNC116 [*] `anyio.sleep()` with >24 hour interval should usually be `anyio.sleep_forever()`
   |
70 |     await anyio.sleep(86400)
71 |     await anyio.sleep(86400.01)  # error: 116, "async"
72 |     await anyio.sleep(86401)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^^ ASYNC116
73 |
74 |     await anyio.sleep(-1)  # will raise a runtime error
   |
   = help: Replace with `anyio.sleep_forever()`

ℹ Unsafe fix
69 69 |     await anyio.sleep(86399)
70 70 |     await anyio.sleep(86400)
71 71 |     await anyio.sleep(86400.01)  # error: 116, "async"
72    |-    await anyio.sleep(86401)  # error: 116, "async"
   72 |+    await anyio.sleep_forever()  # error: 116, "async"
73 73 | 
74 74 |     await anyio.sleep(-1)  # will raise a runtime error
75 75 |     await anyio.sleep(0)  # handled by different check

ASYNC116.py:101:5: ASYNC116 [*] `anyio.sleep()` with >24 hour interval should usually be `anyio.sleep_forever()`
    |
100 |     # does not require the call to be awaited, nor in an async fun
101 |     anyio.sleep(86401)  # error: 116, "async"
    |     ^^^^^^^^^^^^^^^^^^ ASYNC116
102 |     # also checks that we don't break visit_Call
103 |     anyio.run(anyio.sleep(86401))  # error: 116, "async"
    |
    = help: Replace with `anyio.sleep_forever()`

ℹ Unsafe fix
98  98  |     import anyio
99  99  | 
100 100 |     # does not require the call to be awaited, nor in an async fun
101     |-    anyio.sleep(86401)  # error: 116, "async"
    101 |+    anyio.sleep_forever()  # error: 116, "async"
102 102 |     # also checks that we don't break visit_Call
103 103 |     anyio.run(anyio.sleep(86401))  # error: 116, "async"
104 104 | 

ASYNC116.py:103:15: ASYNC116 [*] `anyio.sleep()` with >24 hour interval should usually be `anyio.sleep_forever()`
    |
101 |     anyio.sleep(86401)  # error: 116, "async"
102 |     # also checks that we don't break visit_Call
103 |     anyio.run(anyio.sleep(86401))  # error: 116, "async"
    |               ^^^^^^^^^^^^^^^^^^ ASYNC116
    |
    = help: Replace with `anyio.sleep_forever()`

ℹ Unsafe fix
100 100 |     # does not require the call to be awaited, nor in an async fun
101 101 |     anyio.sleep(86401)  # error: 116, "async"
102 102 |     # also checks that we don't break visit_Call
103     |-    anyio.run(anyio.sleep(86401))  # error: 116, "async"
    103 |+    anyio.run(anyio.sleep_forever())  # error: 116, "async"
104 104 | 
105 105 | 
106 106 | async def import_from_anyio():

ASYNC116.py:110:11: ASYNC116 [*] `anyio.sleep()` with >24 hour interval should usually be `anyio.sleep_forever()`
    |
109 |     # catch from import
110 |     await sleep(86401)  # error: 116, "async"
    |           ^^^^^^^^^^^^ ASYNC116
    |
    = help: Replace with `anyio.sleep_forever()`

ℹ Unsafe fix
2   2   | # ASYNCIO_NO_ERROR - no asyncio.sleep_forever, so check intentionally doesn't trigger.
3   3   | import math
4   4   | from math import inf
    5   |+from anyio import sleep_forever
5   6   | 
6   7   | 
7   8   | async def import_trio():
--------------------------------------------------------------------------------
107 108 |     from anyio import sleep
108 109 | 
109 110 |     # catch from import
110     |-    await sleep(86401)  # error: 116, "async"
    111 |+    await sleep_forever()  # error: 116, "async"
111 112 | 
112 113 | 
113 114 | async def test_anyio_async116_helpers():

ASYNC116.py:119:11: ASYNC116 [*] `anyio.sleep()` with >24 hour interval should usually be `anyio.sleep_forever()`
    |
117 |     await anyio.sleep(seconds=1)  # OK
118 |
119 |     await anyio.sleep(delay=86401)  # ASYNC116
    |           ^^^^^^^^^^^^^^^^^^^^^^^^ ASYNC116
120 |     await anyio.sleep(seconds=86401)  # OK
    |
    = help: Replace with `anyio.sleep_forever()`

ℹ Unsafe fix
116 116 |     await anyio.sleep(delay=1)  # OK
117 117 |     await anyio.sleep(seconds=1)  # OK
118 118 | 
119     |-    await anyio.sleep(delay=86401)  # ASYNC116
    119 |+    await anyio.sleep_forever()  # ASYNC116
120 120 |     await anyio.sleep(seconds=86401)  # OK
121 121 | 
122 122 | 

ASYNC116.py:129:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
    |
127 |     await trio.sleep(delay=1)  # OK
128 |
129 |     await trio.sleep(seconds=86401)  # ASYNC116
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^ ASYNC116
130 |     await trio.sleep(delay=86401)  # OK
    |
    = help: Replace with `trio.sleep_forever()`

ℹ Unsafe fix
126 126 |     await trio.sleep(seconds=1)  # OK
127 127 |     await trio.sleep(delay=1)  # OK
128 128 | 
129     |-    await trio.sleep(seconds=86401)  # ASYNC116
    129 |+    await trio.sleep_forever()  # ASYNC116
130 130 |     await trio.sleep(delay=86401)  # OK
131 131 | 
132 132 | 

ASYNC116.py:137:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
    |
135 |     from trio import sleep
136 |
137 |     await sleep(18446744073709551616)
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ ASYNC116
138 |     await trio.sleep(99999999999999999999)
    |
    = help: Replace with `trio.sleep_forever()`

ℹ Unsafe fix
134 134 |     import trio
135 135 |     from trio import sleep
136 136 | 
137     |-    await sleep(18446744073709551616)
    137 |+    await trio.sleep_forever()
138 138 |     await trio.sleep(99999999999999999999)

ASYNC116.py:138:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
    |
137 |     await sleep(18446744073709551616)
138 |     await trio.sleep(99999999999999999999)
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ASYNC116
    |
    = help: Replace with `trio.sleep_forever()`

ℹ Unsafe fix
135 135 |     from trio import sleep
136 136 | 
137 137 |     await sleep(18446744073709551616)
138     |-    await trio.sleep(99999999999999999999)
    138 |+    await trio.sleep_forever()
