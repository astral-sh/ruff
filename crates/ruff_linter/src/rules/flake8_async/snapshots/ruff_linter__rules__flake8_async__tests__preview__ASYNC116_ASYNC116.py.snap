---
source: crates/ruff_linter/src/rules/flake8_async/mod.rs
---
ASYNC116.py:11:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
10 |     # These examples are probably not meant to ever wake up:
11 |     await trio.sleep(100000)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^^ ASYNC116
12 | 
13 |     # 'inf literal' overflow trick
   |
   = help: Replace with `trio.sleep_forever()`


ASYNC116.py:14:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
13 |     # 'inf literal' overflow trick
14 |     await trio.sleep(1e999)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^ ASYNC116
15 | 
16 |     await trio.sleep(86399)
   |
   = help: Replace with `trio.sleep_forever()`


ASYNC116.py:18:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
16 |     await trio.sleep(86399)
17 |     await trio.sleep(86400)
18 |     await trio.sleep(86400.01)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^^^^ ASYNC116
19 |     await trio.sleep(86401)  # error: 116, "async"
   |
   = help: Replace with `trio.sleep_forever()`


ASYNC116.py:19:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
17 |     await trio.sleep(86400)
18 |     await trio.sleep(86400.01)  # error: 116, "async"
19 |     await trio.sleep(86401)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^ ASYNC116
20 | 
21 |     await trio.sleep(-1)  # will raise a runtime error
   |
   = help: Replace with `trio.sleep_forever()`


ASYNC116.py:48:5: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
47 |     # does not require the call to be awaited, nor in an async fun
48 |     trio.sleep(86401)  # error: 116, "async"
   |     ^^^^^^^^^^^^^^^^^ ASYNC116
49 |     # also checks that we don't break visit_Call
50 |     trio.run(trio.sleep(86401))  # error: 116, "async"
   |
   = help: Replace with `trio.sleep_forever()`


ASYNC116.py:50:14: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
48 |     trio.sleep(86401)  # error: 116, "async"
49 |     # also checks that we don't break visit_Call
50 |     trio.run(trio.sleep(86401))  # error: 116, "async"
   |              ^^^^^^^^^^^^^^^^^ ASYNC116
   |
   = help: Replace with `trio.sleep_forever()`


ASYNC116.py:57:11: ASYNC116 [*] `trio.sleep()` with >24 hour interval should usually be `trio.sleep_forever()`
   |
56 |     # catch from import
57 |     await sleep(86401)  # error: 116, "async"
   |           ^^^^^^^^^^^^ ASYNC116
   |
   = help: Replace with `trio.sleep_forever()`


ASYNC116.py:64:11: ASYNC116 [*] `asyncio.sleep()` with >24 hour interval should usually be `asyncio.sleep_forever()`
   |
63 |     # These examples are probably not meant to ever wake up:
64 |     await anyio.sleep(100000)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^^^ ASYNC116
65 | 
66 |     # 'inf literal' overflow trick
   |
   = help: Replace with `asyncio.sleep_forever()`


ASYNC116.py:67:11: ASYNC116 [*] `asyncio.sleep()` with >24 hour interval should usually be `asyncio.sleep_forever()`
   |
66 |     # 'inf literal' overflow trick
67 |     await anyio.sleep(1e999)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^^ ASYNC116
68 | 
69 |     await anyio.sleep(86399)
   |
   = help: Replace with `asyncio.sleep_forever()`


ASYNC116.py:71:11: ASYNC116 [*] `asyncio.sleep()` with >24 hour interval should usually be `asyncio.sleep_forever()`
   |
69 |     await anyio.sleep(86399)
70 |     await anyio.sleep(86400)
71 |     await anyio.sleep(86400.01)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^^^^^ ASYNC116
72 |     await anyio.sleep(86401)  # error: 116, "async"
   |
   = help: Replace with `asyncio.sleep_forever()`


ASYNC116.py:72:11: ASYNC116 [*] `asyncio.sleep()` with >24 hour interval should usually be `asyncio.sleep_forever()`
   |
70 |     await anyio.sleep(86400)
71 |     await anyio.sleep(86400.01)  # error: 116, "async"
72 |     await anyio.sleep(86401)  # error: 116, "async"
   |           ^^^^^^^^^^^^^^^^^^ ASYNC116
73 | 
74 |     await anyio.sleep(-1)  # will raise a runtime error
   |
   = help: Replace with `asyncio.sleep_forever()`


ASYNC116.py:101:5: ASYNC116 [*] `asyncio.sleep()` with >24 hour interval should usually be `asyncio.sleep_forever()`
    |
100 |     # does not require the call to be awaited, nor in an async fun
101 |     anyio.sleep(86401)  # error: 116, "async"
    |     ^^^^^^^^^^^^^^^^^^ ASYNC116
102 |     # also checks that we don't break visit_Call
103 |     anyio.run(anyio.sleep(86401))  # error: 116, "async"
    |
    = help: Replace with `asyncio.sleep_forever()`


ASYNC116.py:103:15: ASYNC116 [*] `asyncio.sleep()` with >24 hour interval should usually be `asyncio.sleep_forever()`
    |
101 |     anyio.sleep(86401)  # error: 116, "async"
102 |     # also checks that we don't break visit_Call
103 |     anyio.run(anyio.sleep(86401))  # error: 116, "async"
    |               ^^^^^^^^^^^^^^^^^^ ASYNC116
    |
    = help: Replace with `asyncio.sleep_forever()`


ASYNC116.py:110:11: ASYNC116 [*] `asyncio.sleep()` with >24 hour interval should usually be `asyncio.sleep_forever()`
    |
109 |     # catch from import
110 |     await sleep(86401)  # error: 116, "async"
    |           ^^^^^^^^^^^^ ASYNC116
    |
    = help: Replace with `asyncio.sleep_forever()`
