"""Things that were moved from `typing_extensions` to `typing`."""
from typing_extensions import AbstractSet
from typing_extensions import AnyStr
from typing_extensions import AsyncIterable
from typing_extensions import AsyncIterator
from typing_extensions import Awaitable
from typing_extensions import BinaryIO
from typing_extensions import Callable
from typing_extensions import ClassVar
from typing_extensions import Collection
from typing_extensions import Container
from typing_extensions import ContextManager
from typing_extensions import Coroutine
from typing_extensions import DefaultDict
from typing_extensions import Dict
from typing_extensions import FrozenSet
from typing_extensions import Generator
from typing_extensions import Generic
from typing_extensions import Hashable
from typing_extensions import IO
from typing_extensions import ItemsView
from typing_extensions import Iterable
from typing_extensions import KeysView
from typing_extensions import List
from typing_extensions import Mapping
from typing_extensions import MappingView
from typing_extensions import Match
from typing_extensions import MutableMapping
from typing_extensions import MutableSequence
from typing_extensions import MutableSet
from typing_extensions import Optional
from typing_extensions import Pattern
from typing_extensions import Reversible
from typing_extensions import Sequence
from typing_extensions import Set
from typing_extensions import Sized
from typing_extensions import TYPE_CHECKING
from typing_extensions import Text
from typing_extensions import TextIO
from typing_extensions import Tuple
from typing_extensions import Type
from typing_extensions import Union
from typing_extensions import ValuesView
from typing_extensions import cast
from typing_extensions import no_type_check
from typing_extensions import no_type_check_decorator

from typing_extensions import AsyncContextManager
from typing_extensions import AsyncGenerator
from typing_extensions import ChainMap
from typing_extensions import Counter
from typing_extensions import Deque
from typing_extensions import ForwardRef
from typing_extensions import NoReturn

from typing_extensions import Final
from typing_extensions import OrderedDict
from typing_extensions import runtime_checkable

from typing_extensions import Annotated
from typing_extensions import get_type_hints

from typing_extensions import Concatenate
from typing_extensions import Literal
from typing_extensions import NewType
from typing_extensions import ParamSpecArgs
from typing_extensions import ParamSpecKwargs
from typing_extensions import TypeAlias
from typing_extensions import TypeGuard
from typing_extensions import get_args
from typing_extensions import get_origin
from typing_extensions import is_typeddict

from typing_extensions import Any
from typing_extensions import LiteralString
from typing_extensions import Never
from typing_extensions import NotRequired
from typing_extensions import Required
from typing_extensions import Self
from typing_extensions import assert_never
from typing_extensions import assert_type
from typing_extensions import clear_overloads
from typing_extensions import final
from typing_extensions import get_overloads
from typing_extensions import overload
from typing_extensions import reveal_type

from typing_extensions import Protocol
from typing_extensions import SupportsAbs
from typing_extensions import SupportsBytes
from typing_extensions import SupportsComplex
from typing_extensions import SupportsFloat
from typing_extensions import SupportsInt
from typing_extensions import SupportsRound
from typing_extensions import Unpack
from typing_extensions import dataclass_transform
from typing_extensions import NamedTuple
from typing_extensions import TypedDict
