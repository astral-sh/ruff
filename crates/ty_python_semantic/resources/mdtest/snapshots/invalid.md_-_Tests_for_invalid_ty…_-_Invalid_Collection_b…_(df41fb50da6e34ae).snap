---
source: crates/ty_test/src/lib.rs
expression: snapshot
---
---
mdtest name: invalid.md - Tests for invalid types in type expressions - Invalid Collection based AST nodes
mdtest path: crates/ty_python_semantic/resources/mdtest/annotations/invalid.md
---

# Python source files

## mdtest_snippet.py

```
 1 | from typing_extensions import reveal_type
 2 | 
 3 | def _(
 4 |     a: {1: 2},  # error: [invalid-type-form] "Dict literals are not allowed in type expressions"
 5 |     b: {1, 2},  # error: [invalid-type-form] "Set literals are not allowed in type expressions"
 6 |     c: {k: v for k, v in [(1, 2)]},  # error: [invalid-type-form] "Dict comprehensions are not allowed in type expressions"
 7 |     d: [k for k in [1, 2]],  # error: [invalid-type-form] "List comprehensions are not allowed in type expressions"
 8 |     e: {k for k in [1, 2]},  # error: [invalid-type-form] "Set comprehensions are not allowed in type expressions"
 9 |     f: (k for k in [1, 2]),  # error: [invalid-type-form] "Generator expressions are not allowed in type expressions"
10 |     g: [int, str],  # error: [invalid-type-form] "List literals are not allowed in this context in a type expression"
11 |     h: (int, str),  # error: [invalid-type-form] "Tuple literals are not allowed in this context in a type expression"
12 |     i: (),  # error: [invalid-type-form] "Tuple literals are not allowed in this context in a type expression"
13 | ):
14 |     reveal_type(a)  # revealed: Unknown
15 |     reveal_type(b)  # revealed: Unknown
16 |     reveal_type(c)  # revealed: Unknown
17 |     reveal_type(d)  # revealed: Unknown
18 |     reveal_type(e)  # revealed: Unknown
19 |     reveal_type(f)  # revealed: Unknown
20 |     reveal_type(g)  # revealed: Unknown
21 |     reveal_type(h)  # revealed: Unknown
22 |     reveal_type(i)  # revealed: Unknown
```

# Diagnostics

```
error[invalid-type-form]: Dict literals are not allowed in type expressions
 --> src/mdtest_snippet.py:4:8
  |
3 | def _(
4 |     a: {1: 2},  # error: [invalid-type-form] "Dict literals are not allowed in type expressions"
  |        ^^^^^^
5 |     b: {1, 2},  # error: [invalid-type-form] "Set literals are not allowed in type expressions"
6 |     c: {k: v for k, v in [(1, 2)]},  # error: [invalid-type-form] "Dict comprehensions are not allowed in type expressions"
  |
info: See the following page for a reference on valid type expressions:
info: https://typing.python.org/en/latest/spec/annotations.html#type-and-annotation-expressions
info: rule `invalid-type-form` is enabled by default

```

```
error[invalid-type-form]: Set literals are not allowed in type expressions
 --> src/mdtest_snippet.py:5:8
  |
3 | def _(
4 |     a: {1: 2},  # error: [invalid-type-form] "Dict literals are not allowed in type expressions"
5 |     b: {1, 2},  # error: [invalid-type-form] "Set literals are not allowed in type expressions"
  |        ^^^^^^
6 |     c: {k: v for k, v in [(1, 2)]},  # error: [invalid-type-form] "Dict comprehensions are not allowed in type expressions"
7 |     d: [k for k in [1, 2]],  # error: [invalid-type-form] "List comprehensions are not allowed in type expressions"
  |
info: See the following page for a reference on valid type expressions:
info: https://typing.python.org/en/latest/spec/annotations.html#type-and-annotation-expressions
info: rule `invalid-type-form` is enabled by default

```

```
error[invalid-type-form]: Dict comprehensions are not allowed in type expressions
 --> src/mdtest_snippet.py:6:8
  |
4 |     a: {1: 2},  # error: [invalid-type-form] "Dict literals are not allowed in type expressions"
5 |     b: {1, 2},  # error: [invalid-type-form] "Set literals are not allowed in type expressions"
6 |     c: {k: v for k, v in [(1, 2)]},  # error: [invalid-type-form] "Dict comprehensions are not allowed in type expressions"
  |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
7 |     d: [k for k in [1, 2]],  # error: [invalid-type-form] "List comprehensions are not allowed in type expressions"
8 |     e: {k for k in [1, 2]},  # error: [invalid-type-form] "Set comprehensions are not allowed in type expressions"
  |
info: See the following page for a reference on valid type expressions:
info: https://typing.python.org/en/latest/spec/annotations.html#type-and-annotation-expressions
info: rule `invalid-type-form` is enabled by default

```

```
error[invalid-type-form]: List comprehensions are not allowed in type expressions
 --> src/mdtest_snippet.py:7:8
  |
5 |     b: {1, 2},  # error: [invalid-type-form] "Set literals are not allowed in type expressions"
6 |     c: {k: v for k, v in [(1, 2)]},  # error: [invalid-type-form] "Dict comprehensions are not allowed in type expressions"
7 |     d: [k for k in [1, 2]],  # error: [invalid-type-form] "List comprehensions are not allowed in type expressions"
  |        ^^^^^^^^^^^^^^^^^^^
8 |     e: {k for k in [1, 2]},  # error: [invalid-type-form] "Set comprehensions are not allowed in type expressions"
9 |     f: (k for k in [1, 2]),  # error: [invalid-type-form] "Generator expressions are not allowed in type expressions"
  |
info: See the following page for a reference on valid type expressions:
info: https://typing.python.org/en/latest/spec/annotations.html#type-and-annotation-expressions
info: rule `invalid-type-form` is enabled by default

```

```
error[invalid-type-form]: Set comprehensions are not allowed in type expressions
  --> src/mdtest_snippet.py:8:8
   |
 6 |     c: {k: v for k, v in [(1, 2)]},  # error: [invalid-type-form] "Dict comprehensions are not allowed in type expressions"
 7 |     d: [k for k in [1, 2]],  # error: [invalid-type-form] "List comprehensions are not allowed in type expressions"
 8 |     e: {k for k in [1, 2]},  # error: [invalid-type-form] "Set comprehensions are not allowed in type expressions"
   |        ^^^^^^^^^^^^^^^^^^^
 9 |     f: (k for k in [1, 2]),  # error: [invalid-type-form] "Generator expressions are not allowed in type expressions"
10 |     g: [int, str],  # error: [invalid-type-form] "List literals are not allowed in this context in a type expression"
   |
info: See the following page for a reference on valid type expressions:
info: https://typing.python.org/en/latest/spec/annotations.html#type-and-annotation-expressions
info: rule `invalid-type-form` is enabled by default

```

```
error[invalid-type-form]: Generator expressions are not allowed in type expressions
  --> src/mdtest_snippet.py:9:8
   |
 7 |     d: [k for k in [1, 2]],  # error: [invalid-type-form] "List comprehensions are not allowed in type expressions"
 8 |     e: {k for k in [1, 2]},  # error: [invalid-type-form] "Set comprehensions are not allowed in type expressions"
 9 |     f: (k for k in [1, 2]),  # error: [invalid-type-form] "Generator expressions are not allowed in type expressions"
   |        ^^^^^^^^^^^^^^^^^^^
10 |     g: [int, str],  # error: [invalid-type-form] "List literals are not allowed in this context in a type expression"
11 |     h: (int, str),  # error: [invalid-type-form] "Tuple literals are not allowed in this context in a type expression"
   |
info: See the following page for a reference on valid type expressions:
info: https://typing.python.org/en/latest/spec/annotations.html#type-and-annotation-expressions
info: rule `invalid-type-form` is enabled by default

```

```
error[invalid-type-form]: List literals are not allowed in this context in a type expression
  --> src/mdtest_snippet.py:10:8
   |
 8 |     e: {k for k in [1, 2]},  # error: [invalid-type-form] "Set comprehensions are not allowed in type expressions"
 9 |     f: (k for k in [1, 2]),  # error: [invalid-type-form] "Generator expressions are not allowed in type expressions"
10 |     g: [int, str],  # error: [invalid-type-form] "List literals are not allowed in this context in a type expression"
   |        ^^^^^^^^^^
11 |     h: (int, str),  # error: [invalid-type-form] "Tuple literals are not allowed in this context in a type expression"
12 |     i: (),  # error: [invalid-type-form] "Tuple literals are not allowed in this context in a type expression"
   |
info: Did you mean to use `list[...]` instead?
info: See the following page for a reference on valid type expressions:
info: https://typing.python.org/en/latest/spec/annotations.html#type-and-annotation-expressions
info: rule `invalid-type-form` is enabled by default

```

```
error[invalid-type-form]: Tuple literals are not allowed in this context in a type expression
  --> src/mdtest_snippet.py:11:8
   |
 9 |     f: (k for k in [1, 2]),  # error: [invalid-type-form] "Generator expressions are not allowed in type expressions"
10 |     g: [int, str],  # error: [invalid-type-form] "List literals are not allowed in this context in a type expression"
11 |     h: (int, str),  # error: [invalid-type-form] "Tuple literals are not allowed in this context in a type expression"
   |        ^^^^^^^^^^
12 |     i: (),  # error: [invalid-type-form] "Tuple literals are not allowed in this context in a type expression"
13 | ):
   |
info: Did you mean to use `tuple[...]` instead if (...)?
info: See the following page for a reference on valid type expressions:
info: https://typing.python.org/en/latest/spec/annotations.html#type-and-annotation-expressions
info: rule `invalid-type-form` is enabled by default

```

```
error[invalid-type-form]: Tuple literals are not allowed in this context in a type expression
  --> src/mdtest_snippet.py:12:8
   |
10 |     g: [int, str],  # error: [invalid-type-form] "List literals are not allowed in this context in a type expression"
11 |     h: (int, str),  # error: [invalid-type-form] "Tuple literals are not allowed in this context in a type expression"
12 |     i: (),  # error: [invalid-type-form] "Tuple literals are not allowed in this context in a type expression"
   |        ^^
13 | ):
14 |     reveal_type(a)  # revealed: Unknown
   |
info: Did you mean to use `tuple[()]` instead if ()?
info: See the following page for a reference on valid type expressions:
info: https://typing.python.org/en/latest/spec/annotations.html#type-and-annotation-expressions
info: rule `invalid-type-form` is enabled by default

```

```
info[revealed-type]: Revealed type
  --> src/mdtest_snippet.py:14:17
   |
12 |     i: (),  # error: [invalid-type-form] "Tuple literals are not allowed in this context in a type expression"
13 | ):
14 |     reveal_type(a)  # revealed: Unknown
   |                 ^ `Unknown`
15 |     reveal_type(b)  # revealed: Unknown
16 |     reveal_type(c)  # revealed: Unknown
   |

```

```
info[revealed-type]: Revealed type
  --> src/mdtest_snippet.py:15:17
   |
13 | ):
14 |     reveal_type(a)  # revealed: Unknown
15 |     reveal_type(b)  # revealed: Unknown
   |                 ^ `Unknown`
16 |     reveal_type(c)  # revealed: Unknown
17 |     reveal_type(d)  # revealed: Unknown
   |

```

```
info[revealed-type]: Revealed type
  --> src/mdtest_snippet.py:16:17
   |
14 |     reveal_type(a)  # revealed: Unknown
15 |     reveal_type(b)  # revealed: Unknown
16 |     reveal_type(c)  # revealed: Unknown
   |                 ^ `Unknown`
17 |     reveal_type(d)  # revealed: Unknown
18 |     reveal_type(e)  # revealed: Unknown
   |

```

```
info[revealed-type]: Revealed type
  --> src/mdtest_snippet.py:17:17
   |
15 |     reveal_type(b)  # revealed: Unknown
16 |     reveal_type(c)  # revealed: Unknown
17 |     reveal_type(d)  # revealed: Unknown
   |                 ^ `Unknown`
18 |     reveal_type(e)  # revealed: Unknown
19 |     reveal_type(f)  # revealed: Unknown
   |

```

```
info[revealed-type]: Revealed type
  --> src/mdtest_snippet.py:18:17
   |
16 |     reveal_type(c)  # revealed: Unknown
17 |     reveal_type(d)  # revealed: Unknown
18 |     reveal_type(e)  # revealed: Unknown
   |                 ^ `Unknown`
19 |     reveal_type(f)  # revealed: Unknown
20 |     reveal_type(g)  # revealed: Unknown
   |

```

```
info[revealed-type]: Revealed type
  --> src/mdtest_snippet.py:19:17
   |
17 |     reveal_type(d)  # revealed: Unknown
18 |     reveal_type(e)  # revealed: Unknown
19 |     reveal_type(f)  # revealed: Unknown
   |                 ^ `Unknown`
20 |     reveal_type(g)  # revealed: Unknown
21 |     reveal_type(h)  # revealed: Unknown
   |

```

```
info[revealed-type]: Revealed type
  --> src/mdtest_snippet.py:20:17
   |
18 |     reveal_type(e)  # revealed: Unknown
19 |     reveal_type(f)  # revealed: Unknown
20 |     reveal_type(g)  # revealed: Unknown
   |                 ^ `Unknown`
21 |     reveal_type(h)  # revealed: Unknown
22 |     reveal_type(i)  # revealed: Unknown
   |

```

```
info[revealed-type]: Revealed type
  --> src/mdtest_snippet.py:21:17
   |
19 |     reveal_type(f)  # revealed: Unknown
20 |     reveal_type(g)  # revealed: Unknown
21 |     reveal_type(h)  # revealed: Unknown
   |                 ^ `Unknown`
22 |     reveal_type(i)  # revealed: Unknown
   |

```

```
info[revealed-type]: Revealed type
  --> src/mdtest_snippet.py:22:17
   |
20 |     reveal_type(g)  # revealed: Unknown
21 |     reveal_type(h)  # revealed: Unknown
22 |     reveal_type(i)  # revealed: Unknown
   |                 ^ `Unknown`
   |

```
