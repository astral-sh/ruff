---
source: crates/ty_test/src/lib.rs
expression: snapshot
---
---
mdtest name: async_for.md - Async - Error cases - No `__aiter__` method
mdtest path: crates/ty_python_semantic/resources/mdtest/loops/async_for.md
---

# Python source files

## mdtest_snippet.py

```
1 | class NotAsyncIterable: ...
2 | 
3 | async def foo():
4 |     # error: [not-iterable] "Object of type `NotAsyncIterable` is not async-iterable"
5 |     async for x in NotAsyncIterable():
6 |         reveal_type(x)  # revealed: Unknown
```

# Diagnostics

```
error[not-iterable]: Object of type `NotAsyncIterable` is not async-iterable
 --> src/mdtest_snippet.py:5:20
  |
3 | async def foo():
4 |     # error: [not-iterable] "Object of type `NotAsyncIterable` is not async-iterable"
5 |     async for x in NotAsyncIterable():
  |                    ^^^^^^^^^^^^^^^^^^
6 |         reveal_type(x)  # revealed: Unknown
  |
info: It has no `__aiter__` method
info: rule `not-iterable` is enabled by default

```
