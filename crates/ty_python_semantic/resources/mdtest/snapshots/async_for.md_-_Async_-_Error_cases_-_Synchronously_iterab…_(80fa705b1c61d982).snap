---
source: crates/ty_test/src/lib.rs
expression: snapshot
---
---
mdtest name: async_for.md - Async - Error cases - Synchronously iterable, but not asynchronously iterable
mdtest path: crates/ty_python_semantic/resources/mdtest/loops/async_for.md
---

# Python source files

## mdtest_snippet.py

```
 1 | from typing_extensions import reveal_type
 2 | 
 3 | async def foo():
 4 |     class Iterator:
 5 |         def __next__(self) -> int:
 6 |             return 42
 7 | 
 8 |     class Iterable:
 9 |         def __iter__(self) -> Iterator:
10 |             return Iterator()
11 | 
12 |     # error: [not-iterable] "Object of type `Iterator` is not async-iterable"
13 |     async for x in Iterator():
14 |         reveal_type(x)  # revealed: Unknown
```

# Diagnostics

```
error[not-iterable]: Object of type `Iterator` is not async-iterable
  --> src/mdtest_snippet.py:13:20
   |
12 |     # error: [not-iterable] "Object of type `Iterator` is not async-iterable"
13 |     async for x in Iterator():
   |                    ^^^^^^^^^^
14 |         reveal_type(x)  # revealed: Unknown
   |
info: It has no `__aiter__` method
info: rule `not-iterable` is enabled by default

```

```
info[revealed-type]: Revealed type
  --> src/mdtest_snippet.py:14:21
   |
12 |     # error: [not-iterable] "Object of type `Iterator` is not async-iterable"
13 |     async for x in Iterator():
14 |         reveal_type(x)  # revealed: Unknown
   |                     ^ `Unknown`
   |

```
