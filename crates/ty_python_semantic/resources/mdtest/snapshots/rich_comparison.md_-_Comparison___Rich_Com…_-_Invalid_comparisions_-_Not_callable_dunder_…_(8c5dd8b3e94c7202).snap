---
source: crates/ty_test/src/lib.rs
expression: snapshot
---
---
mdtest name: rich_comparison.md - Comparison: Rich Comparison - Invalid comparisions - Not callable dunder comparison methods
mdtest path: crates/ty_python_semantic/resources/mdtest/comparison/instances/rich_comparison.md
---

# Python source files

## mdtest_snippet.py

```
 1 | class A:
 2 |     __eq__: None = None
 3 |     __ne__: None = None
 4 |     __lt__: None = None
 5 |     __gt__: None = None
 6 |     __le__: None = None
 7 |     __ge__: None = None
 8 | 
 9 | # error: [unsupported-operator]
10 | reveal_type(A() == A())  # revealed: Unknown
11 | # error: [unsupported-operator]
12 | reveal_type(A() != A())  # revealed: Unknown
13 | # error: [unsupported-operator]
14 | reveal_type(A() < A())  # revealed: Unknown
15 | # error: [unsupported-operator]
16 | reveal_type(A() > A())  # revealed: Unknown
17 | # error: [unsupported-operator]
18 | reveal_type(A() <= A())  # revealed: Unknown
19 | # error: [unsupported-operator]
20 | reveal_type(A() >= A())  # revealed: Unknown
21 | 
22 | # Fine
23 | A() == 1
24 | A() != 1
```

# Diagnostics

```
error[unsupported-operator]: Operator `==` is not supported for types `A` and `A`
  --> src/mdtest_snippet.py:10:13
   |
 9 | # error: [unsupported-operator]
10 | reveal_type(A() == A())  # revealed: Unknown
   |             ^^^^^^^^^^
11 | # error: [unsupported-operator]
12 | reveal_type(A() != A())  # revealed: Unknown
   |
info: Operator '==' from dunder method `__eq__` is not callable on object of type 'A'
info: rule `unsupported-operator` is enabled by default

```

```
error[unsupported-operator]: Operator `!=` is not supported for types `A` and `A`
  --> src/mdtest_snippet.py:12:13
   |
10 | reveal_type(A() == A())  # revealed: Unknown
11 | # error: [unsupported-operator]
12 | reveal_type(A() != A())  # revealed: Unknown
   |             ^^^^^^^^^^
13 | # error: [unsupported-operator]
14 | reveal_type(A() < A())  # revealed: Unknown
   |
info: Operator '!=' from dunder method `__ne__` is not callable on object of type 'A'
info: rule `unsupported-operator` is enabled by default

```

```
error[unsupported-operator]: Operator `<` is not supported for types `A` and `A`
  --> src/mdtest_snippet.py:14:13
   |
12 | reveal_type(A() != A())  # revealed: Unknown
13 | # error: [unsupported-operator]
14 | reveal_type(A() < A())  # revealed: Unknown
   |             ^^^^^^^^^
15 | # error: [unsupported-operator]
16 | reveal_type(A() > A())  # revealed: Unknown
   |
info: Operator '<' from dunder method `__lt__` is not callable on object of type 'A'
info: rule `unsupported-operator` is enabled by default

```

```
error[unsupported-operator]: Operator `>` is not supported for types `A` and `A`
  --> src/mdtest_snippet.py:16:13
   |
14 | reveal_type(A() < A())  # revealed: Unknown
15 | # error: [unsupported-operator]
16 | reveal_type(A() > A())  # revealed: Unknown
   |             ^^^^^^^^^
17 | # error: [unsupported-operator]
18 | reveal_type(A() <= A())  # revealed: Unknown
   |
info: Operator '>' from dunder method `__gt__` is not callable on object of type 'A'
info: rule `unsupported-operator` is enabled by default

```

```
error[unsupported-operator]: Operator `<=` is not supported for types `A` and `A`
  --> src/mdtest_snippet.py:18:13
   |
16 | reveal_type(A() > A())  # revealed: Unknown
17 | # error: [unsupported-operator]
18 | reveal_type(A() <= A())  # revealed: Unknown
   |             ^^^^^^^^^^
19 | # error: [unsupported-operator]
20 | reveal_type(A() >= A())  # revealed: Unknown
   |
info: Operator '<=' from dunder method `__le__` is not callable on object of type 'A'
info: rule `unsupported-operator` is enabled by default

```

```
error[unsupported-operator]: Operator `>=` is not supported for types `A` and `A`
  --> src/mdtest_snippet.py:20:13
   |
18 | reveal_type(A() <= A())  # revealed: Unknown
19 | # error: [unsupported-operator]
20 | reveal_type(A() >= A())  # revealed: Unknown
   |             ^^^^^^^^^^
21 |
22 | # Fine
   |
info: Operator '>=' from dunder method `__ge__` is not callable on object of type 'A'
info: rule `unsupported-operator` is enabled by default

```
