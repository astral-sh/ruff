---
source: crates/ty_test/src/lib.rs
expression: snapshot
---
---
mdtest name: mro.md - Method Resolution Order tests - `__bases__` lists with duplicate bases
mdtest path: crates/ty_python_semantic/resources/mdtest/mro.md
---

# Python source files

## mdtest_snippet.py

```
 1 | class Foo(str, str): ...  # error: [duplicate-base] "Duplicate base class `str`"
 2 | 
 3 | reveal_type(Foo.__mro__)  # revealed: tuple[<class 'Foo'>, Unknown, <class 'object'>]
 4 | 
 5 | class Spam: ...
 6 | class Eggs: ...
 7 | class Bar: ...
 8 | class Baz: ...
 9 | 
10 | # fmt: off
11 | 
12 | # error: [duplicate-base] "Duplicate base class `Spam`"
13 | # error: [duplicate-base] "Duplicate base class `Eggs`"
14 | class Ham(
15 |     Spam,
16 |     Eggs,
17 |     Bar,
18 |     Baz,
19 |     Spam,
20 |     Eggs,
21 | ): ...
22 | 
23 | # fmt: on
24 | 
25 | reveal_type(Ham.__mro__)  # revealed: tuple[<class 'Ham'>, Unknown, <class 'object'>]
26 | 
27 | class Mushrooms: ...
28 | class Omelette(Spam, Eggs, Mushrooms, Mushrooms): ...  # error: [duplicate-base]
29 | 
30 | reveal_type(Omelette.__mro__)  # revealed: tuple[<class 'Omelette'>, Unknown, <class 'object'>]
31 | 
32 | # fmt: off
33 | 
34 | # error: [duplicate-base] "Duplicate base class `Eggs`"
35 | class VeryEggyOmelette(
36 |     Eggs,
37 |     Ham,
38 |     Spam,
39 |     Eggs,
40 |     Mushrooms,
41 |     Bar,
42 |     Eggs,
43 |     Baz,
44 |     Eggs,
45 | ): ...
46 | 
47 | # fmt: off
48 | # fmt: off
49 | 
50 | class A: ...
51 | 
52 | class B(  # type: ignore[duplicate-base]
53 |     A,
54 |     A,
55 | ): ...
56 | 
57 | class C(
58 |     A,
59 |     A
60 | ):  # type: ignore[duplicate-base]
61 |     x: int
62 | 
63 | # fmt: on
64 | # fmt: off
65 | 
66 | # error: [duplicate-base]
67 | class D(
68 |     A,
69 |     # error: [unused-ignore-comment]
70 |     A,  # type: ignore[duplicate-base]
71 | ): ...
72 | 
73 | # error: [duplicate-base]
74 | class E(
75 |     A,
76 |     A
77 | ):
78 |     # error: [unused-ignore-comment]
79 |     x: int  # type: ignore[duplicate-base]
80 | 
81 | # fmt: on
```

# Diagnostics

```
error[duplicate-base]: Duplicate base class `str`
 --> src/mdtest_snippet.py:1:7
  |
1 | class Foo(str, str): ...  # error: [duplicate-base] "Duplicate base class `str`"
  |       ^^^^^^^^^^^^^
2 |
3 | reveal_type(Foo.__mro__)  # revealed: tuple[<class 'Foo'>, Unknown, <class 'object'>]
  |
info: The definition of class `Foo` will raise `TypeError` at runtime
 --> src/mdtest_snippet.py:1:11
  |
1 | class Foo(str, str): ...  # error: [duplicate-base] "Duplicate base class `str`"
  |           ---  ^^^ Class `str` later repeated here
  |           |
  |           Class `str` first included in bases list here
2 |
3 | reveal_type(Foo.__mro__)  # revealed: tuple[<class 'Foo'>, Unknown, <class 'object'>]
  |
info: rule `duplicate-base` is enabled by default

```

```
error[duplicate-base]: Duplicate base class `Spam`
  --> src/mdtest_snippet.py:14:7
   |
12 |   # error: [duplicate-base] "Duplicate base class `Spam`"
13 |   # error: [duplicate-base] "Duplicate base class `Eggs`"
14 |   class Ham(
   |  _______^
15 | |     Spam,
16 | |     Eggs,
17 | |     Bar,
18 | |     Baz,
19 | |     Spam,
20 | |     Eggs,
21 | | ): ...
   | |_^
22 |
23 |   # fmt: on
   |
info: The definition of class `Ham` will raise `TypeError` at runtime
  --> src/mdtest_snippet.py:15:5
   |
13 | # error: [duplicate-base] "Duplicate base class `Eggs`"
14 | class Ham(
15 |     Spam,
   |     ---- Class `Spam` first included in bases list here
16 |     Eggs,
17 |     Bar,
18 |     Baz,
19 |     Spam,
   |     ^^^^ Class `Spam` later repeated here
20 |     Eggs,
21 | ): ...
   |
info: rule `duplicate-base` is enabled by default

```

```
error[duplicate-base]: Duplicate base class `Eggs`
  --> src/mdtest_snippet.py:14:7
   |
12 |   # error: [duplicate-base] "Duplicate base class `Spam`"
13 |   # error: [duplicate-base] "Duplicate base class `Eggs`"
14 |   class Ham(
   |  _______^
15 | |     Spam,
16 | |     Eggs,
17 | |     Bar,
18 | |     Baz,
19 | |     Spam,
20 | |     Eggs,
21 | | ): ...
   | |_^
22 |
23 |   # fmt: on
   |
info: The definition of class `Ham` will raise `TypeError` at runtime
  --> src/mdtest_snippet.py:16:5
   |
14 | class Ham(
15 |     Spam,
16 |     Eggs,
   |     ---- Class `Eggs` first included in bases list here
17 |     Bar,
18 |     Baz,
19 |     Spam,
20 |     Eggs,
   |     ^^^^ Class `Eggs` later repeated here
21 | ): ...
   |
info: rule `duplicate-base` is enabled by default

```

```
error[duplicate-base]: Duplicate base class `Mushrooms`
  --> src/mdtest_snippet.py:28:7
   |
27 | class Mushrooms: ...
28 | class Omelette(Spam, Eggs, Mushrooms, Mushrooms): ...  # error: [duplicate-base]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
29 |
30 | reveal_type(Omelette.__mro__)  # revealed: tuple[<class 'Omelette'>, Unknown, <class 'object'>]
   |
info: The definition of class `Omelette` will raise `TypeError` at runtime
  --> src/mdtest_snippet.py:28:28
   |
27 | class Mushrooms: ...
28 | class Omelette(Spam, Eggs, Mushrooms, Mushrooms): ...  # error: [duplicate-base]
   |                            ---------  ^^^^^^^^^ Class `Mushrooms` later repeated here
   |                            |
   |                            Class `Mushrooms` first included in bases list here
29 |
30 | reveal_type(Omelette.__mro__)  # revealed: tuple[<class 'Omelette'>, Unknown, <class 'object'>]
   |
info: rule `duplicate-base` is enabled by default

```

```
error[duplicate-base]: Duplicate base class `Eggs`
  --> src/mdtest_snippet.py:35:7
   |
34 |   # error: [duplicate-base] "Duplicate base class `Eggs`"
35 |   class VeryEggyOmelette(
   |  _______^
36 | |     Eggs,
37 | |     Ham,
38 | |     Spam,
39 | |     Eggs,
40 | |     Mushrooms,
41 | |     Bar,
42 | |     Eggs,
43 | |     Baz,
44 | |     Eggs,
45 | | ): ...
   | |_^
46 |
47 |   # fmt: off
   |
info: The definition of class `VeryEggyOmelette` will raise `TypeError` at runtime
  --> src/mdtest_snippet.py:36:5
   |
34 | # error: [duplicate-base] "Duplicate base class `Eggs`"
35 | class VeryEggyOmelette(
36 |     Eggs,
   |     ---- Class `Eggs` first included in bases list here
37 |     Ham,
38 |     Spam,
39 |     Eggs,
   |     ^^^^ Class `Eggs` later repeated here
40 |     Mushrooms,
41 |     Bar,
42 |     Eggs,
   |     ^^^^ Class `Eggs` later repeated here
43 |     Baz,
44 |     Eggs,
   |     ^^^^ Class `Eggs` later repeated here
45 | ): ...
   |
info: rule `duplicate-base` is enabled by default

```

```
error[duplicate-base]: Duplicate base class `A`
  --> src/mdtest_snippet.py:67:7
   |
66 |   # error: [duplicate-base]
67 |   class D(
   |  _______^
68 | |     A,
69 | |     # error: [unused-ignore-comment]
70 | |     A,  # type: ignore[duplicate-base]
71 | | ): ...
   | |_^
72 |
73 |   # error: [duplicate-base]
   |
info: The definition of class `D` will raise `TypeError` at runtime
  --> src/mdtest_snippet.py:68:5
   |
66 | # error: [duplicate-base]
67 | class D(
68 |     A,
   |     - Class `A` first included in bases list here
69 |     # error: [unused-ignore-comment]
70 |     A,  # type: ignore[duplicate-base]
   |     ^ Class `A` later repeated here
71 | ): ...
   |
info: rule `duplicate-base` is enabled by default

```

```
info[unused-ignore-comment]
  --> src/mdtest_snippet.py:70:9
   |
68 |     A,
69 |     # error: [unused-ignore-comment]
70 |     A,  # type: ignore[duplicate-base]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Unused blanket `type: ignore` directive
71 | ): ...
   |

```

```
error[duplicate-base]: Duplicate base class `A`
  --> src/mdtest_snippet.py:74:7
   |
73 |   # error: [duplicate-base]
74 |   class E(
   |  _______^
75 | |     A,
76 | |     A
77 | | ):
   | |_^
78 |       # error: [unused-ignore-comment]
79 |       x: int  # type: ignore[duplicate-base]
   |
info: The definition of class `E` will raise `TypeError` at runtime
  --> src/mdtest_snippet.py:75:5
   |
73 | # error: [duplicate-base]
74 | class E(
75 |     A,
   |     - Class `A` first included in bases list here
76 |     A
   |     ^ Class `A` later repeated here
77 | ):
78 |     # error: [unused-ignore-comment]
   |
info: rule `duplicate-base` is enabled by default

```

```
info[unused-ignore-comment]
  --> src/mdtest_snippet.py:79:13
   |
77 | ):
78 |     # error: [unused-ignore-comment]
79 |     x: int  # type: ignore[duplicate-base]
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Unused blanket `type: ignore` directive
80 |
81 | # fmt: on
   |

```
