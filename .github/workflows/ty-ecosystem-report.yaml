name: ty ecosystem-report

permissions: {}

on:
  workflow_dispatch:
  schedule:
    # Run every Wednesday at 5:00 UTC:
    - cron: 0 5 * * 3

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: 1
  CF_API_TOKEN_EXISTS: ${{ secrets.CF_API_TOKEN != '' }}

jobs:
  ty-ecosystem-report:
    name: Create ecosystem report
    runs-on: depot-ubuntu-22.04-32
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: ruff
          fetch-depth: 0
          persist-credentials: false

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v6.7.0

      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          workspaces: "ruff"

      - name: Install Rust toolchain
        run: rustup show

      - name: Create report
        shell: bash
        run: |
          cd ruff

          echo "Enabling configuration overloads (see .github/mypy-primer-ty.toml)"
          mkdir -p ~/.config/ty
          cp .github/mypy-primer-ty.toml ~/.config/ty/ty.toml

          cd ..

          uv tool install "git+https://github.com/astral-sh/ecosystem-analyzer@27dd66d9e397d986ef9c631119ee09556eab8af9"

          ecosystem-analyzer \
            --verbose \
            --repository ruff \
            analyze \
            --projects ruff/crates/ty_python_semantic/resources/primer/good.txt \
            --output ecosystem-diagnostics.json

          mkdir dist

          ecosystem-analyzer \
            generate-report \
            --max-diagnostics-per-project=1200 \
            ecosystem-diagnostics.json \
            --output dist/index.html

      - name: "Deploy to Cloudflare Pages"
        if: ${{ env.CF_API_TOKEN_EXISTS == 'true' }}
        id: deploy
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # v3.14.1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy dist --project-name=ty-ecosystem --branch main --commit-hash ${GITHUB_SHA}
