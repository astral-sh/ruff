name: benchmark

on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  run-benchmark:
    name: "Base | ${{ matrix.os }}"
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: "PR - Checkout Branch"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: "PR - Install Rust toolchain"
        run: rustup show

      - uses: Swatinem/rust-cache@v1

      - name: "PR - Build benchmarks"
        uses: actions-rs/cargo@v1
        with:
          command: bench
          args: -p ruff_benchmark --no-run

      - name: "PR - Run benchmarks"
        run: cargo benchmark --save-baseline=pr

      - name: "Main - Checkout Branch"
        uses: actions/checkout@v3
        with:
          clean: false
          ref: main

      - name: "Main - Install Rust toolchain"
        run: rustup show

      - name: "Main - Build benchmarks"
        uses: actions-rs/cargo@v1
        with:
          command: bench
          args: -p ruff_benchmark --no-run

      - name: "Main - Run benchmarks"
        run: cargo benchmark --save-baseline=main

      - name: "Upload benchmark results"
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results-${{ matrix.os }}
          path: ./target/criterion

      # Cleanup
      - name: Remove Criterion Artifact
        uses: JesseTG/rm@v1.0.3
        with:
          path: ./target/criterion

  benchmark-compare:
    runs-on: ubuntu-latest
    name: "Compare Benchmarks"
    needs:
      - run-benchmark

    steps:
    - name: "Install Rust toolchain"
      run: rustup show

    - name: "Install critcmp"
      run: cargo install --debug critcmp # Use debug build: Building takes much longer than the "slowness" of using the debug build.

    - name: "Linux | Download PR benchmark results"
      uses: actions/download-artifact@v3
      with:
        name: benchmark-results-ubuntu-latest
        path: ./target/criterion

    - name: "Linux | Compare benchmark results"
      shell: bash
      run: |
        echo "## Benchmark Results" >> summary.md
        echo "### Linux" >> summary.md
        echo "\`\`\`" >> summary.md
        critcmp main pr >> summary.md
        echo "\`\`\`" >> summary.md
        echo "" >> summary.md

    - name: "Linux | Cleanup benchmark results"
      run: rm -rf ./target/criterion

    - name: "Windows | Download PR benchmark results"
      uses: actions/download-artifact@v3
      with:
        name: benchmark-results-windows-latest
        path: ./target/criterion

    - name: "Windows | Compare benchmark results"
      shell: bash
      run: |
        echo "### Windows" >> summary.md
        echo "\`\`\`" >> summary.md
        critcmp main pr >> summary.md
        echo "\`\`\`" >> summary.md
        echo "" >> summary.md
        cat summary.md > $GITHUB_STEP_SUMMARY

    - name: Find Comment
      # Check if the event is not triggered by a fork
      if: github.event.pull_request.head.repo.full_name == github.repository
      uses: peter-evans/find-comment@v2
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Benchmark Results

    - name: Create or update comment
      # Check if the event is not triggered by a fork
      if: github.event.pull_request.head.repo.full_name == github.repository
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.pull_request.number }}
        edit-mode: replace
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body-file: summary.md
